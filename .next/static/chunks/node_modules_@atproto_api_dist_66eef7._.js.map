{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"file":"lexicons.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/lexicons.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { LexiconDoc, Lexicons } from '@atproto/lexicon'\n\nexport const schemaDict = {\n  ComAtprotoAdminDefs: {\n    lexicon: 1,\n    id: 'com.atproto.admin.defs',\n    defs: {\n      statusAttr: {\n        type: 'object',\n        required: ['applied'],\n        properties: {\n          applied: {\n            type: 'boolean',\n          },\n          ref: {\n            type: 'string',\n          },\n        },\n      },\n      accountView: {\n        type: 'object',\n        required: ['did', 'handle', 'indexedAt'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          handle: {\n            type: 'string',\n            format: 'handle',\n          },\n          email: {\n            type: 'string',\n          },\n          relatedRecords: {\n            type: 'array',\n            items: {\n              type: 'unknown',\n            },\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          invitedBy: {\n            type: 'ref',\n            ref: 'lex:com.atproto.server.defs#inviteCode',\n          },\n          invites: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.server.defs#inviteCode',\n            },\n          },\n          invitesDisabled: {\n            type: 'boolean',\n          },\n          emailConfirmedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          inviteNote: {\n            type: 'string',\n          },\n          deactivatedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          threatSignatures: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.admin.defs#threatSignature',\n            },\n          },\n        },\n      },\n      repoRef: {\n        type: 'object',\n        required: ['did'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n        },\n      },\n      repoBlobRef: {\n        type: 'object',\n        required: ['did', 'cid'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          recordUri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n        },\n      },\n      threatSignature: {\n        type: 'object',\n        required: ['property', 'value'],\n        properties: {\n          property: {\n            type: 'string',\n          },\n          value: {\n            type: 'string',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminDeleteAccount: {\n    lexicon: 1,\n    id: 'com.atproto.admin.deleteAccount',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Delete a user account as an administrator.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['did'],\n            properties: {\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminDisableAccountInvites: {\n    lexicon: 1,\n    id: 'com.atproto.admin.disableAccountInvites',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Disable an account from receiving new invite codes, but does not invalidate existing codes.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['account'],\n            properties: {\n              account: {\n                type: 'string',\n                format: 'did',\n              },\n              note: {\n                type: 'string',\n                description: 'Optional reason for disabled invites.',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminDisableInviteCodes: {\n    lexicon: 1,\n    id: 'com.atproto.admin.disableInviteCodes',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Disable some set of codes and/or all codes associated with a set of users.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            properties: {\n              codes: {\n                type: 'array',\n                items: {\n                  type: 'string',\n                },\n              },\n              accounts: {\n                type: 'array',\n                items: {\n                  type: 'string',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminEnableAccountInvites: {\n    lexicon: 1,\n    id: 'com.atproto.admin.enableAccountInvites',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: \"Re-enable an account's ability to receive invite codes.\",\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['account'],\n            properties: {\n              account: {\n                type: 'string',\n                format: 'did',\n              },\n              note: {\n                type: 'string',\n                description: 'Optional reason for enabled invites.',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminGetAccountInfo: {\n    lexicon: 1,\n    id: 'com.atproto.admin.getAccountInfo',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get details about an account.',\n        parameters: {\n          type: 'params',\n          required: ['did'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'ref',\n            ref: 'lex:com.atproto.admin.defs#accountView',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminGetAccountInfos: {\n    lexicon: 1,\n    id: 'com.atproto.admin.getAccountInfos',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get details about some accounts.',\n        parameters: {\n          type: 'params',\n          required: ['dids'],\n          properties: {\n            dids: {\n              type: 'array',\n              items: {\n                type: 'string',\n                format: 'did',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['infos'],\n            properties: {\n              infos: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:com.atproto.admin.defs#accountView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminGetInviteCodes: {\n    lexicon: 1,\n    id: 'com.atproto.admin.getInviteCodes',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get an admin view of invite codes.',\n        parameters: {\n          type: 'params',\n          properties: {\n            sort: {\n              type: 'string',\n              knownValues: ['recent', 'usage'],\n              default: 'recent',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 500,\n              default: 100,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['codes'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              codes: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:com.atproto.server.defs#inviteCode',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminGetSubjectStatus: {\n    lexicon: 1,\n    id: 'com.atproto.admin.getSubjectStatus',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get the service-specific admin status of a subject (account, record, or blob).',\n        parameters: {\n          type: 'params',\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n            },\n            uri: {\n              type: 'string',\n              format: 'at-uri',\n            },\n            blob: {\n              type: 'string',\n              format: 'cid',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['subject'],\n            properties: {\n              subject: {\n                type: 'union',\n                refs: [\n                  'lex:com.atproto.admin.defs#repoRef',\n                  'lex:com.atproto.repo.strongRef',\n                  'lex:com.atproto.admin.defs#repoBlobRef',\n                ],\n              },\n              takedown: {\n                type: 'ref',\n                ref: 'lex:com.atproto.admin.defs#statusAttr',\n              },\n              deactivated: {\n                type: 'ref',\n                ref: 'lex:com.atproto.admin.defs#statusAttr',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminSearchAccounts: {\n    lexicon: 1,\n    id: 'com.atproto.admin.searchAccounts',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get list of accounts that matches your search query.',\n        parameters: {\n          type: 'params',\n          properties: {\n            email: {\n              type: 'string',\n            },\n            cursor: {\n              type: 'string',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['accounts'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              accounts: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:com.atproto.admin.defs#accountView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminSendEmail: {\n    lexicon: 1,\n    id: 'com.atproto.admin.sendEmail',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: \"Send email to a user's account email address.\",\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['recipientDid', 'content', 'senderDid'],\n            properties: {\n              recipientDid: {\n                type: 'string',\n                format: 'did',\n              },\n              content: {\n                type: 'string',\n              },\n              subject: {\n                type: 'string',\n              },\n              senderDid: {\n                type: 'string',\n                format: 'did',\n              },\n              comment: {\n                type: 'string',\n                description:\n                  \"Additional comment by the sender that won't be used in the email itself but helpful to provide more context for moderators/reviewers\",\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['sent'],\n            properties: {\n              sent: {\n                type: 'boolean',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminUpdateAccountEmail: {\n    lexicon: 1,\n    id: 'com.atproto.admin.updateAccountEmail',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: \"Administrative action to update an account's email.\",\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['account', 'email'],\n            properties: {\n              account: {\n                type: 'string',\n                format: 'at-identifier',\n                description: 'The handle or DID of the repo.',\n              },\n              email: {\n                type: 'string',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminUpdateAccountHandle: {\n    lexicon: 1,\n    id: 'com.atproto.admin.updateAccountHandle',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: \"Administrative action to update an account's handle.\",\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['did', 'handle'],\n            properties: {\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n              handle: {\n                type: 'string',\n                format: 'handle',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminUpdateAccountPassword: {\n    lexicon: 1,\n    id: 'com.atproto.admin.updateAccountPassword',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Update the password for a user account as an administrator.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['did', 'password'],\n            properties: {\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n              password: {\n                type: 'string',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminUpdateSubjectStatus: {\n    lexicon: 1,\n    id: 'com.atproto.admin.updateSubjectStatus',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Update the service-specific admin status of a subject (account, record, or blob).',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['subject'],\n            properties: {\n              subject: {\n                type: 'union',\n                refs: [\n                  'lex:com.atproto.admin.defs#repoRef',\n                  'lex:com.atproto.repo.strongRef',\n                  'lex:com.atproto.admin.defs#repoBlobRef',\n                ],\n              },\n              takedown: {\n                type: 'ref',\n                ref: 'lex:com.atproto.admin.defs#statusAttr',\n              },\n              deactivated: {\n                type: 'ref',\n                ref: 'lex:com.atproto.admin.defs#statusAttr',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['subject'],\n            properties: {\n              subject: {\n                type: 'union',\n                refs: [\n                  'lex:com.atproto.admin.defs#repoRef',\n                  'lex:com.atproto.repo.strongRef',\n                  'lex:com.atproto.admin.defs#repoBlobRef',\n                ],\n              },\n              takedown: {\n                type: 'ref',\n                ref: 'lex:com.atproto.admin.defs#statusAttr',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoIdentityGetRecommendedDidCredentials: {\n    lexicon: 1,\n    id: 'com.atproto.identity.getRecommendedDidCredentials',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Describe the credentials that should be included in the DID doc of an account that is migrating to this service.',\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            properties: {\n              rotationKeys: {\n                description:\n                  'Recommended rotation keys for PLC dids. Should be undefined (or ignored) for did:webs.',\n                type: 'array',\n                items: {\n                  type: 'string',\n                },\n              },\n              alsoKnownAs: {\n                type: 'array',\n                items: {\n                  type: 'string',\n                },\n              },\n              verificationMethods: {\n                type: 'unknown',\n              },\n              services: {\n                type: 'unknown',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoIdentityRequestPlcOperationSignature: {\n    lexicon: 1,\n    id: 'com.atproto.identity.requestPlcOperationSignature',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Request an email with a code to in order to request a signed PLC operation. Requires Auth.',\n      },\n    },\n  },\n  ComAtprotoIdentityResolveHandle: {\n    lexicon: 1,\n    id: 'com.atproto.identity.resolveHandle',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Resolves a handle (domain name) to a DID.',\n        parameters: {\n          type: 'params',\n          required: ['handle'],\n          properties: {\n            handle: {\n              type: 'string',\n              format: 'handle',\n              description: 'The handle to resolve.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['did'],\n            properties: {\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoIdentitySignPlcOperation: {\n    lexicon: 1,\n    id: 'com.atproto.identity.signPlcOperation',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          \"Signs a PLC operation to update some value(s) in the requesting DID's document.\",\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            properties: {\n              token: {\n                description:\n                  'A token received through com.atproto.identity.requestPlcOperationSignature',\n                type: 'string',\n              },\n              rotationKeys: {\n                type: 'array',\n                items: {\n                  type: 'string',\n                },\n              },\n              alsoKnownAs: {\n                type: 'array',\n                items: {\n                  type: 'string',\n                },\n              },\n              verificationMethods: {\n                type: 'unknown',\n              },\n              services: {\n                type: 'unknown',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['operation'],\n            properties: {\n              operation: {\n                type: 'unknown',\n                description: 'A signed DID PLC operation.',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoIdentitySubmitPlcOperation: {\n    lexicon: 1,\n    id: 'com.atproto.identity.submitPlcOperation',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          \"Validates a PLC operation to ensure that it doesn't violate a service's constraints or get the identity into a bad state, then submits it to the PLC registry\",\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['operation'],\n            properties: {\n              operation: {\n                type: 'unknown',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoIdentityUpdateHandle: {\n    lexicon: 1,\n    id: 'com.atproto.identity.updateHandle',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          \"Updates the current account's handle. Verifies handle validity, and updates did:plc document if necessary. Implemented by PDS, and requires auth.\",\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['handle'],\n            properties: {\n              handle: {\n                type: 'string',\n                format: 'handle',\n                description: 'The new handle.',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoLabelDefs: {\n    lexicon: 1,\n    id: 'com.atproto.label.defs',\n    defs: {\n      label: {\n        type: 'object',\n        description:\n          'Metadata tag on an atproto resource (eg, repo or record).',\n        required: ['src', 'uri', 'val', 'cts'],\n        properties: {\n          ver: {\n            type: 'integer',\n            description: 'The AT Protocol version of the label object.',\n          },\n          src: {\n            type: 'string',\n            format: 'did',\n            description: 'DID of the actor who created this label.',\n          },\n          uri: {\n            type: 'string',\n            format: 'uri',\n            description:\n              'AT URI of the record, repository (account), or other resource that this label applies to.',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n            description:\n              \"Optionally, CID specifying the specific version of 'uri' resource this label applies to.\",\n          },\n          val: {\n            type: 'string',\n            maxLength: 128,\n            description:\n              'The short string name of the value or type of this label.',\n          },\n          neg: {\n            type: 'boolean',\n            description:\n              'If true, this is a negation label, overwriting a previous label.',\n          },\n          cts: {\n            type: 'string',\n            format: 'datetime',\n            description: 'Timestamp when this label was created.',\n          },\n          exp: {\n            type: 'string',\n            format: 'datetime',\n            description:\n              'Timestamp at which this label expires (no longer applies).',\n          },\n          sig: {\n            type: 'bytes',\n            description: 'Signature of dag-cbor encoded label.',\n          },\n        },\n      },\n      selfLabels: {\n        type: 'object',\n        description:\n          'Metadata tags on an atproto record, published by the author within the record.',\n        required: ['values'],\n        properties: {\n          values: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#selfLabel',\n            },\n            maxLength: 10,\n          },\n        },\n      },\n      selfLabel: {\n        type: 'object',\n        description:\n          'Metadata tag on an atproto record, published by the author within the record. Note that schemas should use #selfLabels, not #selfLabel.',\n        required: ['val'],\n        properties: {\n          val: {\n            type: 'string',\n            maxLength: 128,\n            description:\n              'The short string name of the value or type of this label.',\n          },\n        },\n      },\n      labelValueDefinition: {\n        type: 'object',\n        description:\n          'Declares a label value and its expected interpretations and behaviors.',\n        required: ['identifier', 'severity', 'blurs', 'locales'],\n        properties: {\n          identifier: {\n            type: 'string',\n            description:\n              \"The value of the label being defined. Must only include lowercase ascii and the '-' character ([a-z-]+).\",\n            maxLength: 100,\n            maxGraphemes: 100,\n          },\n          severity: {\n            type: 'string',\n            description:\n              \"How should a client visually convey this label? 'inform' means neutral and informational; 'alert' means negative and warning; 'none' means show nothing.\",\n            knownValues: ['inform', 'alert', 'none'],\n          },\n          blurs: {\n            type: 'string',\n            description:\n              \"What should this label hide in the UI, if applied? 'content' hides all of the target; 'media' hides the images/video/audio; 'none' hides nothing.\",\n            knownValues: ['content', 'media', 'none'],\n          },\n          defaultSetting: {\n            type: 'string',\n            description: 'The default setting for this label.',\n            knownValues: ['ignore', 'warn', 'hide'],\n            default: 'warn',\n          },\n          adultOnly: {\n            type: 'boolean',\n            description:\n              'Does the user need to have adult content enabled in order to configure this label?',\n          },\n          locales: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#labelValueDefinitionStrings',\n            },\n          },\n        },\n      },\n      labelValueDefinitionStrings: {\n        type: 'object',\n        description:\n          'Strings which describe the label in the UI, localized into a specific language.',\n        required: ['lang', 'name', 'description'],\n        properties: {\n          lang: {\n            type: 'string',\n            description:\n              'The code of the language these strings are written in.',\n            format: 'language',\n          },\n          name: {\n            type: 'string',\n            description: 'A short human-readable name for the label.',\n            maxGraphemes: 64,\n            maxLength: 640,\n          },\n          description: {\n            type: 'string',\n            description:\n              'A longer description of what the label means and why it might be applied.',\n            maxGraphemes: 10000,\n            maxLength: 100000,\n          },\n        },\n      },\n      labelValue: {\n        type: 'string',\n        knownValues: [\n          '!hide',\n          '!no-promote',\n          '!warn',\n          '!no-unauthenticated',\n          'dmca-violation',\n          'doxxing',\n          'porn',\n          'sexual',\n          'nudity',\n          'nsfl',\n          'gore',\n        ],\n      },\n    },\n  },\n  ComAtprotoLabelQueryLabels: {\n    lexicon: 1,\n    id: 'com.atproto.label.queryLabels',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Find labels relevant to the provided AT-URI patterns. Public endpoint for moderation services, though may return different or additional results with auth.',\n        parameters: {\n          type: 'params',\n          required: ['uriPatterns'],\n          properties: {\n            uriPatterns: {\n              type: 'array',\n              items: {\n                type: 'string',\n              },\n              description:\n                \"List of AT URI patterns to match (boolean 'OR'). Each may be a prefix (ending with '*'; will match inclusive of the string leading to '*'), or a full URI.\",\n            },\n            sources: {\n              type: 'array',\n              items: {\n                type: 'string',\n                format: 'did',\n              },\n              description:\n                'Optional list of label sources (DIDs) to filter on.',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 250,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['labels'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              labels: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:com.atproto.label.defs#label',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoLabelSubscribeLabels: {\n    lexicon: 1,\n    id: 'com.atproto.label.subscribeLabels',\n    defs: {\n      main: {\n        type: 'subscription',\n        description:\n          'Subscribe to stream of labels (and negations). Public endpoint implemented by mod services. Uses same sequencing scheme as repo event stream.',\n        parameters: {\n          type: 'params',\n          properties: {\n            cursor: {\n              type: 'integer',\n              description: 'The last known event seq number to backfill from.',\n            },\n          },\n        },\n        message: {\n          schema: {\n            type: 'union',\n            refs: [\n              'lex:com.atproto.label.subscribeLabels#labels',\n              'lex:com.atproto.label.subscribeLabels#info',\n            ],\n          },\n        },\n        errors: [\n          {\n            name: 'FutureCursor',\n          },\n        ],\n      },\n      labels: {\n        type: 'object',\n        required: ['seq', 'labels'],\n        properties: {\n          seq: {\n            type: 'integer',\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n        },\n      },\n      info: {\n        type: 'object',\n        required: ['name'],\n        properties: {\n          name: {\n            type: 'string',\n            knownValues: ['OutdatedCursor'],\n          },\n          message: {\n            type: 'string',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoLexiconSchema: {\n    lexicon: 1,\n    id: 'com.atproto.lexicon.schema',\n    defs: {\n      main: {\n        type: 'record',\n        description:\n          \"Representation of Lexicon schemas themselves, when published as atproto records. Note that the schema language is not defined in Lexicon; this meta schema currently only includes a single version field ('lexicon'). See the atproto specifications for description of the other expected top-level fields ('id', 'defs', etc).\",\n        key: 'nsid',\n        record: {\n          type: 'object',\n          required: ['lexicon'],\n          properties: {\n            lexicon: {\n              type: 'integer',\n              description:\n                \"Indicates the 'version' of the Lexicon language. Must be '1' for the current atproto/Lexicon schema system.\",\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoModerationCreateReport: {\n    lexicon: 1,\n    id: 'com.atproto.moderation.createReport',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Submit a moderation report regarding an atproto account or record. Implemented by moderation services (with PDS proxying), and requires auth.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['reasonType', 'subject'],\n            properties: {\n              reasonType: {\n                type: 'ref',\n                description:\n                  'Indicates the broad category of violation the report is for.',\n                ref: 'lex:com.atproto.moderation.defs#reasonType',\n              },\n              reason: {\n                type: 'string',\n                maxGraphemes: 2000,\n                maxLength: 20000,\n                description:\n                  'Additional context about the content and violation.',\n              },\n              subject: {\n                type: 'union',\n                refs: [\n                  'lex:com.atproto.admin.defs#repoRef',\n                  'lex:com.atproto.repo.strongRef',\n                ],\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: [\n              'id',\n              'reasonType',\n              'subject',\n              'reportedBy',\n              'createdAt',\n            ],\n            properties: {\n              id: {\n                type: 'integer',\n              },\n              reasonType: {\n                type: 'ref',\n                ref: 'lex:com.atproto.moderation.defs#reasonType',\n              },\n              reason: {\n                type: 'string',\n                maxGraphemes: 2000,\n                maxLength: 20000,\n              },\n              subject: {\n                type: 'union',\n                refs: [\n                  'lex:com.atproto.admin.defs#repoRef',\n                  'lex:com.atproto.repo.strongRef',\n                ],\n              },\n              reportedBy: {\n                type: 'string',\n                format: 'did',\n              },\n              createdAt: {\n                type: 'string',\n                format: 'datetime',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoModerationDefs: {\n    lexicon: 1,\n    id: 'com.atproto.moderation.defs',\n    defs: {\n      reasonType: {\n        type: 'string',\n        knownValues: [\n          'com.atproto.moderation.defs#reasonSpam',\n          'com.atproto.moderation.defs#reasonViolation',\n          'com.atproto.moderation.defs#reasonMisleading',\n          'com.atproto.moderation.defs#reasonSexual',\n          'com.atproto.moderation.defs#reasonRude',\n          'com.atproto.moderation.defs#reasonOther',\n          'com.atproto.moderation.defs#reasonAppeal',\n        ],\n      },\n      reasonSpam: {\n        type: 'token',\n        description: 'Spam: frequent unwanted promotion, replies, mentions',\n      },\n      reasonViolation: {\n        type: 'token',\n        description: 'Direct violation of server rules, laws, terms of service',\n      },\n      reasonMisleading: {\n        type: 'token',\n        description: 'Misleading identity, affiliation, or content',\n      },\n      reasonSexual: {\n        type: 'token',\n        description: 'Unwanted or mislabeled sexual content',\n      },\n      reasonRude: {\n        type: 'token',\n        description:\n          'Rude, harassing, explicit, or otherwise unwelcoming behavior',\n      },\n      reasonOther: {\n        type: 'token',\n        description: 'Other: reports not falling under another report category',\n      },\n      reasonAppeal: {\n        type: 'token',\n        description: 'Appeal: appeal a previously taken moderation action',\n      },\n    },\n  },\n  ComAtprotoRepoApplyWrites: {\n    lexicon: 1,\n    id: 'com.atproto.repo.applyWrites',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Apply a batch transaction of repository creates, updates, and deletes. Requires auth, implemented by PDS.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['repo', 'writes'],\n            properties: {\n              repo: {\n                type: 'string',\n                format: 'at-identifier',\n                description:\n                  'The handle or DID of the repo (aka, current account).',\n              },\n              validate: {\n                type: 'boolean',\n                description:\n                  \"Can be set to 'false' to skip Lexicon schema validation of record data across all operations, 'true' to require it, or leave unset to validate only for known Lexicons.\",\n              },\n              writes: {\n                type: 'array',\n                items: {\n                  type: 'union',\n                  refs: [\n                    'lex:com.atproto.repo.applyWrites#create',\n                    'lex:com.atproto.repo.applyWrites#update',\n                    'lex:com.atproto.repo.applyWrites#delete',\n                  ],\n                  closed: true,\n                },\n              },\n              swapCommit: {\n                type: 'string',\n                description:\n                  'If provided, the entire operation will fail if the current repo commit CID does not match this value. Used to prevent conflicting repo mutations.',\n                format: 'cid',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: [],\n            properties: {\n              commit: {\n                type: 'ref',\n                ref: 'lex:com.atproto.repo.defs#commitMeta',\n              },\n              results: {\n                type: 'array',\n                items: {\n                  type: 'union',\n                  refs: [\n                    'lex:com.atproto.repo.applyWrites#createResult',\n                    'lex:com.atproto.repo.applyWrites#updateResult',\n                    'lex:com.atproto.repo.applyWrites#deleteResult',\n                  ],\n                  closed: true,\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'InvalidSwap',\n            description:\n              \"Indicates that the 'swapCommit' parameter did not match current commit.\",\n          },\n        ],\n      },\n      create: {\n        type: 'object',\n        description: 'Operation which creates a new record.',\n        required: ['collection', 'value'],\n        properties: {\n          collection: {\n            type: 'string',\n            format: 'nsid',\n          },\n          rkey: {\n            type: 'string',\n            maxLength: 512,\n          },\n          value: {\n            type: 'unknown',\n          },\n        },\n      },\n      update: {\n        type: 'object',\n        description: 'Operation which updates an existing record.',\n        required: ['collection', 'rkey', 'value'],\n        properties: {\n          collection: {\n            type: 'string',\n            format: 'nsid',\n          },\n          rkey: {\n            type: 'string',\n          },\n          value: {\n            type: 'unknown',\n          },\n        },\n      },\n      delete: {\n        type: 'object',\n        description: 'Operation which deletes an existing record.',\n        required: ['collection', 'rkey'],\n        properties: {\n          collection: {\n            type: 'string',\n            format: 'nsid',\n          },\n          rkey: {\n            type: 'string',\n          },\n        },\n      },\n      createResult: {\n        type: 'object',\n        required: ['uri', 'cid'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          validationStatus: {\n            type: 'string',\n            knownValues: ['valid', 'unknown'],\n          },\n        },\n      },\n      updateResult: {\n        type: 'object',\n        required: ['uri', 'cid'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          validationStatus: {\n            type: 'string',\n            knownValues: ['valid', 'unknown'],\n          },\n        },\n      },\n      deleteResult: {\n        type: 'object',\n        required: [],\n        properties: {},\n      },\n    },\n  },\n  ComAtprotoRepoCreateRecord: {\n    lexicon: 1,\n    id: 'com.atproto.repo.createRecord',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Create a single new repository record. Requires auth, implemented by PDS.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['repo', 'collection', 'record'],\n            properties: {\n              repo: {\n                type: 'string',\n                format: 'at-identifier',\n                description:\n                  'The handle or DID of the repo (aka, current account).',\n              },\n              collection: {\n                type: 'string',\n                format: 'nsid',\n                description: 'The NSID of the record collection.',\n              },\n              rkey: {\n                type: 'string',\n                description: 'The Record Key.',\n                maxLength: 512,\n              },\n              validate: {\n                type: 'boolean',\n                description:\n                  \"Can be set to 'false' to skip Lexicon schema validation of record data, 'true' to require it, or leave unset to validate only for known Lexicons.\",\n              },\n              record: {\n                type: 'unknown',\n                description: 'The record itself. Must contain a $type field.',\n              },\n              swapCommit: {\n                type: 'string',\n                format: 'cid',\n                description:\n                  'Compare and swap with the previous commit by CID.',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['uri', 'cid'],\n            properties: {\n              uri: {\n                type: 'string',\n                format: 'at-uri',\n              },\n              cid: {\n                type: 'string',\n                format: 'cid',\n              },\n              commit: {\n                type: 'ref',\n                ref: 'lex:com.atproto.repo.defs#commitMeta',\n              },\n              validationStatus: {\n                type: 'string',\n                knownValues: ['valid', 'unknown'],\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'InvalidSwap',\n            description:\n              \"Indicates that 'swapCommit' didn't match current repo commit.\",\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoRepoDefs: {\n    lexicon: 1,\n    id: 'com.atproto.repo.defs',\n    defs: {\n      commitMeta: {\n        type: 'object',\n        required: ['cid', 'rev'],\n        properties: {\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          rev: {\n            type: 'string',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoRepoDeleteRecord: {\n    lexicon: 1,\n    id: 'com.atproto.repo.deleteRecord',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          \"Delete a repository record, or ensure it doesn't exist. Requires auth, implemented by PDS.\",\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['repo', 'collection', 'rkey'],\n            properties: {\n              repo: {\n                type: 'string',\n                format: 'at-identifier',\n                description:\n                  'The handle or DID of the repo (aka, current account).',\n              },\n              collection: {\n                type: 'string',\n                format: 'nsid',\n                description: 'The NSID of the record collection.',\n              },\n              rkey: {\n                type: 'string',\n                description: 'The Record Key.',\n              },\n              swapRecord: {\n                type: 'string',\n                format: 'cid',\n                description:\n                  'Compare and swap with the previous record by CID.',\n              },\n              swapCommit: {\n                type: 'string',\n                format: 'cid',\n                description:\n                  'Compare and swap with the previous commit by CID.',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            properties: {\n              commit: {\n                type: 'ref',\n                ref: 'lex:com.atproto.repo.defs#commitMeta',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'InvalidSwap',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoRepoDescribeRepo: {\n    lexicon: 1,\n    id: 'com.atproto.repo.describeRepo',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get information about an account and repository, including the list of collections. Does not require auth.',\n        parameters: {\n          type: 'params',\n          required: ['repo'],\n          properties: {\n            repo: {\n              type: 'string',\n              format: 'at-identifier',\n              description: 'The handle or DID of the repo.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: [\n              'handle',\n              'did',\n              'didDoc',\n              'collections',\n              'handleIsCorrect',\n            ],\n            properties: {\n              handle: {\n                type: 'string',\n                format: 'handle',\n              },\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n              didDoc: {\n                type: 'unknown',\n                description: 'The complete DID document for this account.',\n              },\n              collections: {\n                type: 'array',\n                description:\n                  'List of all the collections (NSIDs) for which this repo contains at least one record.',\n                items: {\n                  type: 'string',\n                  format: 'nsid',\n                },\n              },\n              handleIsCorrect: {\n                type: 'boolean',\n                description:\n                  'Indicates if handle is currently valid (resolves bi-directionally)',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoRepoGetRecord: {\n    lexicon: 1,\n    id: 'com.atproto.repo.getRecord',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get a single record from a repository. Does not require auth.',\n        parameters: {\n          type: 'params',\n          required: ['repo', 'collection', 'rkey'],\n          properties: {\n            repo: {\n              type: 'string',\n              format: 'at-identifier',\n              description: 'The handle or DID of the repo.',\n            },\n            collection: {\n              type: 'string',\n              format: 'nsid',\n              description: 'The NSID of the record collection.',\n            },\n            rkey: {\n              type: 'string',\n              description: 'The Record Key.',\n            },\n            cid: {\n              type: 'string',\n              format: 'cid',\n              description:\n                'The CID of the version of the record. If not specified, then return the most recent version.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['uri', 'value'],\n            properties: {\n              uri: {\n                type: 'string',\n                format: 'at-uri',\n              },\n              cid: {\n                type: 'string',\n                format: 'cid',\n              },\n              value: {\n                type: 'unknown',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'RecordNotFound',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoRepoImportRepo: {\n    lexicon: 1,\n    id: 'com.atproto.repo.importRepo',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Import a repo in the form of a CAR file. Requires Content-Length HTTP header to be set.',\n        input: {\n          encoding: 'application/vnd.ipld.car',\n        },\n      },\n    },\n  },\n  ComAtprotoRepoListMissingBlobs: {\n    lexicon: 1,\n    id: 'com.atproto.repo.listMissingBlobs',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Returns a list of missing blobs for the requesting account. Intended to be used in the account migration flow.',\n        parameters: {\n          type: 'params',\n          properties: {\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 1000,\n              default: 500,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['blobs'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              blobs: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:com.atproto.repo.listMissingBlobs#recordBlob',\n                },\n              },\n            },\n          },\n        },\n      },\n      recordBlob: {\n        type: 'object',\n        required: ['cid', 'recordUri'],\n        properties: {\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          recordUri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoRepoListRecords: {\n    lexicon: 1,\n    id: 'com.atproto.repo.listRecords',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'List a range of records in a repository, matching a specific collection. Does not require auth.',\n        parameters: {\n          type: 'params',\n          required: ['repo', 'collection'],\n          properties: {\n            repo: {\n              type: 'string',\n              format: 'at-identifier',\n              description: 'The handle or DID of the repo.',\n            },\n            collection: {\n              type: 'string',\n              format: 'nsid',\n              description: 'The NSID of the record type.',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n              description: 'The number of records to return.',\n            },\n            cursor: {\n              type: 'string',\n            },\n            rkeyStart: {\n              type: 'string',\n              description:\n                'DEPRECATED: The lowest sort-ordered rkey to start from (exclusive)',\n            },\n            rkeyEnd: {\n              type: 'string',\n              description:\n                'DEPRECATED: The highest sort-ordered rkey to stop at (exclusive)',\n            },\n            reverse: {\n              type: 'boolean',\n              description: 'Flag to reverse the order of the returned records.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['records'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              records: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:com.atproto.repo.listRecords#record',\n                },\n              },\n            },\n          },\n        },\n      },\n      record: {\n        type: 'object',\n        required: ['uri', 'cid', 'value'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          value: {\n            type: 'unknown',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoRepoPutRecord: {\n    lexicon: 1,\n    id: 'com.atproto.repo.putRecord',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Write a repository record, creating or updating it as needed. Requires auth, implemented by PDS.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['repo', 'collection', 'rkey', 'record'],\n            nullable: ['swapRecord'],\n            properties: {\n              repo: {\n                type: 'string',\n                format: 'at-identifier',\n                description:\n                  'The handle or DID of the repo (aka, current account).',\n              },\n              collection: {\n                type: 'string',\n                format: 'nsid',\n                description: 'The NSID of the record collection.',\n              },\n              rkey: {\n                type: 'string',\n                description: 'The Record Key.',\n                maxLength: 512,\n              },\n              validate: {\n                type: 'boolean',\n                description:\n                  \"Can be set to 'false' to skip Lexicon schema validation of record data, 'true' to require it, or leave unset to validate only for known Lexicons.\",\n              },\n              record: {\n                type: 'unknown',\n                description: 'The record to write.',\n              },\n              swapRecord: {\n                type: 'string',\n                format: 'cid',\n                description:\n                  'Compare and swap with the previous record by CID. WARNING: nullable and optional field; may cause problems with golang implementation',\n              },\n              swapCommit: {\n                type: 'string',\n                format: 'cid',\n                description:\n                  'Compare and swap with the previous commit by CID.',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['uri', 'cid'],\n            properties: {\n              uri: {\n                type: 'string',\n                format: 'at-uri',\n              },\n              cid: {\n                type: 'string',\n                format: 'cid',\n              },\n              commit: {\n                type: 'ref',\n                ref: 'lex:com.atproto.repo.defs#commitMeta',\n              },\n              validationStatus: {\n                type: 'string',\n                knownValues: ['valid', 'unknown'],\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'InvalidSwap',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoRepoStrongRef: {\n    lexicon: 1,\n    id: 'com.atproto.repo.strongRef',\n    description: 'A URI with a content-hash fingerprint.',\n    defs: {\n      main: {\n        type: 'object',\n        required: ['uri', 'cid'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoRepoUploadBlob: {\n    lexicon: 1,\n    id: 'com.atproto.repo.uploadBlob',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Upload a new blob, to be referenced from a repository record. The blob will be deleted if it is not referenced within a time window (eg, minutes). Blob restrictions (mimetype, size, etc) are enforced when the reference is created. Requires auth, implemented by PDS.',\n        input: {\n          encoding: '*/*',\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['blob'],\n            properties: {\n              blob: {\n                type: 'blob',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerActivateAccount: {\n    lexicon: 1,\n    id: 'com.atproto.server.activateAccount',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          \"Activates a currently deactivated account. Used to finalize account migration after the account's repo is imported and identity is setup.\",\n      },\n    },\n  },\n  ComAtprotoServerCheckAccountStatus: {\n    lexicon: 1,\n    id: 'com.atproto.server.checkAccountStatus',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Returns the status of an account, especially as pertaining to import or recovery. Can be called many times over the course of an account migration. Requires auth and can only be called pertaining to oneself.',\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: [\n              'activated',\n              'validDid',\n              'repoCommit',\n              'repoRev',\n              'repoBlocks',\n              'indexedRecords',\n              'privateStateValues',\n              'expectedBlobs',\n              'importedBlobs',\n            ],\n            properties: {\n              activated: {\n                type: 'boolean',\n              },\n              validDid: {\n                type: 'boolean',\n              },\n              repoCommit: {\n                type: 'string',\n                format: 'cid',\n              },\n              repoRev: {\n                type: 'string',\n              },\n              repoBlocks: {\n                type: 'integer',\n              },\n              indexedRecords: {\n                type: 'integer',\n              },\n              privateStateValues: {\n                type: 'integer',\n              },\n              expectedBlobs: {\n                type: 'integer',\n              },\n              importedBlobs: {\n                type: 'integer',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerConfirmEmail: {\n    lexicon: 1,\n    id: 'com.atproto.server.confirmEmail',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Confirm an email using a token from com.atproto.server.requestEmailConfirmation.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['email', 'token'],\n            properties: {\n              email: {\n                type: 'string',\n              },\n              token: {\n                type: 'string',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'AccountNotFound',\n          },\n          {\n            name: 'ExpiredToken',\n          },\n          {\n            name: 'InvalidToken',\n          },\n          {\n            name: 'InvalidEmail',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoServerCreateAccount: {\n    lexicon: 1,\n    id: 'com.atproto.server.createAccount',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Create an account. Implemented by PDS.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['handle'],\n            properties: {\n              email: {\n                type: 'string',\n              },\n              handle: {\n                type: 'string',\n                format: 'handle',\n                description: 'Requested handle for the account.',\n              },\n              did: {\n                type: 'string',\n                format: 'did',\n                description:\n                  'Pre-existing atproto DID, being imported to a new account.',\n              },\n              inviteCode: {\n                type: 'string',\n              },\n              verificationCode: {\n                type: 'string',\n              },\n              verificationPhone: {\n                type: 'string',\n              },\n              password: {\n                type: 'string',\n                description:\n                  'Initial account password. May need to meet instance-specific password strength requirements.',\n              },\n              recoveryKey: {\n                type: 'string',\n                description:\n                  'DID PLC rotation key (aka, recovery key) to be included in PLC creation operation.',\n              },\n              plcOp: {\n                type: 'unknown',\n                description:\n                  'A signed DID PLC operation to be submitted as part of importing an existing account to this instance. NOTE: this optional field may be updated when full account migration is implemented.',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            description:\n              'Account login session returned on successful account creation.',\n            required: ['accessJwt', 'refreshJwt', 'handle', 'did'],\n            properties: {\n              accessJwt: {\n                type: 'string',\n              },\n              refreshJwt: {\n                type: 'string',\n              },\n              handle: {\n                type: 'string',\n                format: 'handle',\n              },\n              did: {\n                type: 'string',\n                format: 'did',\n                description: 'The DID of the new account.',\n              },\n              didDoc: {\n                type: 'unknown',\n                description: 'Complete DID document.',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'InvalidHandle',\n          },\n          {\n            name: 'InvalidPassword',\n          },\n          {\n            name: 'InvalidInviteCode',\n          },\n          {\n            name: 'HandleNotAvailable',\n          },\n          {\n            name: 'UnsupportedDomain',\n          },\n          {\n            name: 'UnresolvableDid',\n          },\n          {\n            name: 'IncompatibleDidDoc',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoServerCreateAppPassword: {\n    lexicon: 1,\n    id: 'com.atproto.server.createAppPassword',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Create an App Password.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['name'],\n            properties: {\n              name: {\n                type: 'string',\n                description:\n                  'A short name for the App Password, to help distinguish them.',\n              },\n              privileged: {\n                type: 'boolean',\n                description:\n                  \"If an app password has 'privileged' access to possibly sensitive account state. Meant for use with trusted clients.\",\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'ref',\n            ref: 'lex:com.atproto.server.createAppPassword#appPassword',\n          },\n        },\n        errors: [\n          {\n            name: 'AccountTakedown',\n          },\n        ],\n      },\n      appPassword: {\n        type: 'object',\n        required: ['name', 'password', 'createdAt'],\n        properties: {\n          name: {\n            type: 'string',\n          },\n          password: {\n            type: 'string',\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          privileged: {\n            type: 'boolean',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerCreateInviteCode: {\n    lexicon: 1,\n    id: 'com.atproto.server.createInviteCode',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Create an invite code.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['useCount'],\n            properties: {\n              useCount: {\n                type: 'integer',\n              },\n              forAccount: {\n                type: 'string',\n                format: 'did',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['code'],\n            properties: {\n              code: {\n                type: 'string',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerCreateInviteCodes: {\n    lexicon: 1,\n    id: 'com.atproto.server.createInviteCodes',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Create invite codes.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['codeCount', 'useCount'],\n            properties: {\n              codeCount: {\n                type: 'integer',\n                default: 1,\n              },\n              useCount: {\n                type: 'integer',\n              },\n              forAccounts: {\n                type: 'array',\n                items: {\n                  type: 'string',\n                  format: 'did',\n                },\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['codes'],\n            properties: {\n              codes: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:com.atproto.server.createInviteCodes#accountCodes',\n                },\n              },\n            },\n          },\n        },\n      },\n      accountCodes: {\n        type: 'object',\n        required: ['account', 'codes'],\n        properties: {\n          account: {\n            type: 'string',\n          },\n          codes: {\n            type: 'array',\n            items: {\n              type: 'string',\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerCreateSession: {\n    lexicon: 1,\n    id: 'com.atproto.server.createSession',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Create an authentication session.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['identifier', 'password'],\n            properties: {\n              identifier: {\n                type: 'string',\n                description:\n                  'Handle or other identifier supported by the server for the authenticating user.',\n              },\n              password: {\n                type: 'string',\n              },\n              authFactorToken: {\n                type: 'string',\n              },\n              allowTakendown: {\n                type: 'boolean',\n                description:\n                  'When true, instead of throwing error for takendown accounts, a valid response with a narrow scoped token will be returned',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['accessJwt', 'refreshJwt', 'handle', 'did'],\n            properties: {\n              accessJwt: {\n                type: 'string',\n              },\n              refreshJwt: {\n                type: 'string',\n              },\n              handle: {\n                type: 'string',\n                format: 'handle',\n              },\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n              didDoc: {\n                type: 'unknown',\n              },\n              email: {\n                type: 'string',\n              },\n              emailConfirmed: {\n                type: 'boolean',\n              },\n              emailAuthFactor: {\n                type: 'boolean',\n              },\n              active: {\n                type: 'boolean',\n              },\n              status: {\n                type: 'string',\n                description:\n                  'If active=false, this optional field indicates a possible reason for why the account is not active. If active=false and no status is supplied, then the host makes no claim for why the repository is no longer being hosted.',\n                knownValues: ['takendown', 'suspended', 'deactivated'],\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'AccountTakedown',\n          },\n          {\n            name: 'AuthFactorTokenRequired',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoServerDeactivateAccount: {\n    lexicon: 1,\n    id: 'com.atproto.server.deactivateAccount',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Deactivates a currently active account. Stops serving of repo, and future writes to repo until reactivated. Used to finalize account migration with the old host after the account has been activated on the new host.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            properties: {\n              deleteAfter: {\n                type: 'string',\n                format: 'datetime',\n                description:\n                  'A recommendation to server as to how long they should hold onto the deactivated account before deleting.',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerDefs: {\n    lexicon: 1,\n    id: 'com.atproto.server.defs',\n    defs: {\n      inviteCode: {\n        type: 'object',\n        required: [\n          'code',\n          'available',\n          'disabled',\n          'forAccount',\n          'createdBy',\n          'createdAt',\n          'uses',\n        ],\n        properties: {\n          code: {\n            type: 'string',\n          },\n          available: {\n            type: 'integer',\n          },\n          disabled: {\n            type: 'boolean',\n          },\n          forAccount: {\n            type: 'string',\n          },\n          createdBy: {\n            type: 'string',\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          uses: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.server.defs#inviteCodeUse',\n            },\n          },\n        },\n      },\n      inviteCodeUse: {\n        type: 'object',\n        required: ['usedBy', 'usedAt'],\n        properties: {\n          usedBy: {\n            type: 'string',\n            format: 'did',\n          },\n          usedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerDeleteAccount: {\n    lexicon: 1,\n    id: 'com.atproto.server.deleteAccount',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          \"Delete an actor's account with a token and password. Can only be called after requesting a deletion token. Requires auth.\",\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['did', 'password', 'token'],\n            properties: {\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n              password: {\n                type: 'string',\n              },\n              token: {\n                type: 'string',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'ExpiredToken',\n          },\n          {\n            name: 'InvalidToken',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoServerDeleteSession: {\n    lexicon: 1,\n    id: 'com.atproto.server.deleteSession',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Delete the current session. Requires auth.',\n      },\n    },\n  },\n  ComAtprotoServerDescribeServer: {\n    lexicon: 1,\n    id: 'com.atproto.server.describeServer',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          \"Describes the server's account creation requirements and capabilities. Implemented by PDS.\",\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['did', 'availableUserDomains'],\n            properties: {\n              inviteCodeRequired: {\n                type: 'boolean',\n                description:\n                  'If true, an invite code must be supplied to create an account on this instance.',\n              },\n              phoneVerificationRequired: {\n                type: 'boolean',\n                description:\n                  'If true, a phone verification token must be supplied to create an account on this instance.',\n              },\n              availableUserDomains: {\n                type: 'array',\n                description:\n                  'List of domain suffixes that can be used in account handles.',\n                items: {\n                  type: 'string',\n                },\n              },\n              links: {\n                type: 'ref',\n                description: 'URLs of service policy documents.',\n                ref: 'lex:com.atproto.server.describeServer#links',\n              },\n              contact: {\n                type: 'ref',\n                description: 'Contact information',\n                ref: 'lex:com.atproto.server.describeServer#contact',\n              },\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n            },\n          },\n        },\n      },\n      links: {\n        type: 'object',\n        properties: {\n          privacyPolicy: {\n            type: 'string',\n            format: 'uri',\n          },\n          termsOfService: {\n            type: 'string',\n            format: 'uri',\n          },\n        },\n      },\n      contact: {\n        type: 'object',\n        properties: {\n          email: {\n            type: 'string',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerGetAccountInviteCodes: {\n    lexicon: 1,\n    id: 'com.atproto.server.getAccountInviteCodes',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get all invite codes for the current account. Requires auth.',\n        parameters: {\n          type: 'params',\n          properties: {\n            includeUsed: {\n              type: 'boolean',\n              default: true,\n            },\n            createAvailable: {\n              type: 'boolean',\n              default: true,\n              description:\n                \"Controls whether any new 'earned' but not 'created' invites should be created.\",\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['codes'],\n            properties: {\n              codes: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:com.atproto.server.defs#inviteCode',\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'DuplicateCreate',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoServerGetServiceAuth: {\n    lexicon: 1,\n    id: 'com.atproto.server.getServiceAuth',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get a signed token on behalf of the requesting DID for the requested service.',\n        parameters: {\n          type: 'params',\n          required: ['aud'],\n          properties: {\n            aud: {\n              type: 'string',\n              format: 'did',\n              description:\n                'The DID of the service that the token will be used to authenticate with',\n            },\n            exp: {\n              type: 'integer',\n              description:\n                'The time in Unix Epoch seconds that the JWT expires. Defaults to 60 seconds in the future. The service may enforce certain time bounds on tokens depending on the requested scope.',\n            },\n            lxm: {\n              type: 'string',\n              format: 'nsid',\n              description:\n                'Lexicon (XRPC) method to bind the requested token to',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['token'],\n            properties: {\n              token: {\n                type: 'string',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'BadExpiration',\n            description:\n              'Indicates that the requested expiration date is not a valid. May be in the past or may be reliant on the requested scopes.',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoServerGetSession: {\n    lexicon: 1,\n    id: 'com.atproto.server.getSession',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get information about the current auth session. Requires auth.',\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['handle', 'did'],\n            properties: {\n              handle: {\n                type: 'string',\n                format: 'handle',\n              },\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n              email: {\n                type: 'string',\n              },\n              emailConfirmed: {\n                type: 'boolean',\n              },\n              emailAuthFactor: {\n                type: 'boolean',\n              },\n              didDoc: {\n                type: 'unknown',\n              },\n              active: {\n                type: 'boolean',\n              },\n              status: {\n                type: 'string',\n                description:\n                  'If active=false, this optional field indicates a possible reason for why the account is not active. If active=false and no status is supplied, then the host makes no claim for why the repository is no longer being hosted.',\n                knownValues: ['takendown', 'suspended', 'deactivated'],\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerListAppPasswords: {\n    lexicon: 1,\n    id: 'com.atproto.server.listAppPasswords',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'List all App Passwords.',\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['passwords'],\n            properties: {\n              passwords: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:com.atproto.server.listAppPasswords#appPassword',\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'AccountTakedown',\n          },\n        ],\n      },\n      appPassword: {\n        type: 'object',\n        required: ['name', 'createdAt'],\n        properties: {\n          name: {\n            type: 'string',\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          privileged: {\n            type: 'boolean',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerRefreshSession: {\n    lexicon: 1,\n    id: 'com.atproto.server.refreshSession',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          \"Refresh an authentication session. Requires auth using the 'refreshJwt' (not the 'accessJwt').\",\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['accessJwt', 'refreshJwt', 'handle', 'did'],\n            properties: {\n              accessJwt: {\n                type: 'string',\n              },\n              refreshJwt: {\n                type: 'string',\n              },\n              handle: {\n                type: 'string',\n                format: 'handle',\n              },\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n              didDoc: {\n                type: 'unknown',\n              },\n              active: {\n                type: 'boolean',\n              },\n              status: {\n                type: 'string',\n                description:\n                  \"Hosting status of the account. If not specified, then assume 'active'.\",\n                knownValues: ['takendown', 'suspended', 'deactivated'],\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'AccountTakedown',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoServerRequestAccountDelete: {\n    lexicon: 1,\n    id: 'com.atproto.server.requestAccountDelete',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Initiate a user account deletion via email.',\n      },\n    },\n  },\n  ComAtprotoServerRequestEmailConfirmation: {\n    lexicon: 1,\n    id: 'com.atproto.server.requestEmailConfirmation',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Request an email with a code to confirm ownership of email.',\n      },\n    },\n  },\n  ComAtprotoServerRequestEmailUpdate: {\n    lexicon: 1,\n    id: 'com.atproto.server.requestEmailUpdate',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Request a token in order to update email.',\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['tokenRequired'],\n            properties: {\n              tokenRequired: {\n                type: 'boolean',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerRequestPasswordReset: {\n    lexicon: 1,\n    id: 'com.atproto.server.requestPasswordReset',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Initiate a user account password reset via email.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['email'],\n            properties: {\n              email: {\n                type: 'string',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerReserveSigningKey: {\n    lexicon: 1,\n    id: 'com.atproto.server.reserveSigningKey',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Reserve a repo signing key, for use with account creation. Necessary so that a DID PLC update operation can be constructed during an account migraiton. Public and does not require auth; implemented by PDS. NOTE: this endpoint may change when full account migration is implemented.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            properties: {\n              did: {\n                type: 'string',\n                format: 'did',\n                description: 'The DID to reserve a key for.',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['signingKey'],\n            properties: {\n              signingKey: {\n                type: 'string',\n                description:\n                  'The public key for the reserved signing key, in did:key serialization.',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerResetPassword: {\n    lexicon: 1,\n    id: 'com.atproto.server.resetPassword',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Reset a user account password using a token.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['token', 'password'],\n            properties: {\n              token: {\n                type: 'string',\n              },\n              password: {\n                type: 'string',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'ExpiredToken',\n          },\n          {\n            name: 'InvalidToken',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoServerRevokeAppPassword: {\n    lexicon: 1,\n    id: 'com.atproto.server.revokeAppPassword',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Revoke an App Password by name.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['name'],\n            properties: {\n              name: {\n                type: 'string',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerUpdateEmail: {\n    lexicon: 1,\n    id: 'com.atproto.server.updateEmail',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: \"Update an account's email.\",\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['email'],\n            properties: {\n              email: {\n                type: 'string',\n              },\n              emailAuthFactor: {\n                type: 'boolean',\n              },\n              token: {\n                type: 'string',\n                description:\n                  \"Requires a token from com.atproto.sever.requestEmailUpdate if the account's email has been confirmed.\",\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'ExpiredToken',\n          },\n          {\n            name: 'InvalidToken',\n          },\n          {\n            name: 'TokenRequired',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoSyncGetBlob: {\n    lexicon: 1,\n    id: 'com.atproto.sync.getBlob',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get a blob associated with a given account. Returns the full blob as originally uploaded. Does not require auth; implemented by PDS.',\n        parameters: {\n          type: 'params',\n          required: ['did', 'cid'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n              description: 'The DID of the account.',\n            },\n            cid: {\n              type: 'string',\n              format: 'cid',\n              description: 'The CID of the blob to fetch',\n            },\n          },\n        },\n        output: {\n          encoding: '*/*',\n        },\n        errors: [\n          {\n            name: 'BlobNotFound',\n          },\n          {\n            name: 'RepoNotFound',\n          },\n          {\n            name: 'RepoTakendown',\n          },\n          {\n            name: 'RepoSuspended',\n          },\n          {\n            name: 'RepoDeactivated',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoSyncGetBlocks: {\n    lexicon: 1,\n    id: 'com.atproto.sync.getBlocks',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get data blocks from a given repo, by CID. For example, intermediate MST nodes, or records. Does not require auth; implemented by PDS.',\n        parameters: {\n          type: 'params',\n          required: ['did', 'cids'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n              description: 'The DID of the repo.',\n            },\n            cids: {\n              type: 'array',\n              items: {\n                type: 'string',\n                format: 'cid',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/vnd.ipld.car',\n        },\n        errors: [\n          {\n            name: 'BlockNotFound',\n          },\n          {\n            name: 'RepoNotFound',\n          },\n          {\n            name: 'RepoTakendown',\n          },\n          {\n            name: 'RepoSuspended',\n          },\n          {\n            name: 'RepoDeactivated',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoSyncGetCheckout: {\n    lexicon: 1,\n    id: 'com.atproto.sync.getCheckout',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'DEPRECATED - please use com.atproto.sync.getRepo instead',\n        parameters: {\n          type: 'params',\n          required: ['did'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n              description: 'The DID of the repo.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/vnd.ipld.car',\n        },\n      },\n    },\n  },\n  ComAtprotoSyncGetHead: {\n    lexicon: 1,\n    id: 'com.atproto.sync.getHead',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'DEPRECATED - please use com.atproto.sync.getLatestCommit instead',\n        parameters: {\n          type: 'params',\n          required: ['did'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n              description: 'The DID of the repo.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['root'],\n            properties: {\n              root: {\n                type: 'string',\n                format: 'cid',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'HeadNotFound',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoSyncGetLatestCommit: {\n    lexicon: 1,\n    id: 'com.atproto.sync.getLatestCommit',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get the current commit CID & revision of the specified repo. Does not require auth.',\n        parameters: {\n          type: 'params',\n          required: ['did'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n              description: 'The DID of the repo.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['cid', 'rev'],\n            properties: {\n              cid: {\n                type: 'string',\n                format: 'cid',\n              },\n              rev: {\n                type: 'string',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'RepoNotFound',\n          },\n          {\n            name: 'RepoTakendown',\n          },\n          {\n            name: 'RepoSuspended',\n          },\n          {\n            name: 'RepoDeactivated',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoSyncGetRecord: {\n    lexicon: 1,\n    id: 'com.atproto.sync.getRecord',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get data blocks needed to prove the existence or non-existence of record in the current version of repo. Does not require auth.',\n        parameters: {\n          type: 'params',\n          required: ['did', 'collection', 'rkey'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n              description: 'The DID of the repo.',\n            },\n            collection: {\n              type: 'string',\n              format: 'nsid',\n            },\n            rkey: {\n              type: 'string',\n              description: 'Record Key',\n            },\n            commit: {\n              type: 'string',\n              format: 'cid',\n              description:\n                'DEPRECATED: referenced a repo commit by CID, and retrieved record as of that commit',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/vnd.ipld.car',\n        },\n        errors: [\n          {\n            name: 'RecordNotFound',\n          },\n          {\n            name: 'RepoNotFound',\n          },\n          {\n            name: 'RepoTakendown',\n          },\n          {\n            name: 'RepoSuspended',\n          },\n          {\n            name: 'RepoDeactivated',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoSyncGetRepo: {\n    lexicon: 1,\n    id: 'com.atproto.sync.getRepo',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          \"Download a repository export as CAR file. Optionally only a 'diff' since a previous revision. Does not require auth; implemented by PDS.\",\n        parameters: {\n          type: 'params',\n          required: ['did'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n              description: 'The DID of the repo.',\n            },\n            since: {\n              type: 'string',\n              description:\n                \"The revision ('rev') of the repo to create a diff from.\",\n            },\n          },\n        },\n        output: {\n          encoding: 'application/vnd.ipld.car',\n        },\n        errors: [\n          {\n            name: 'RepoNotFound',\n          },\n          {\n            name: 'RepoTakendown',\n          },\n          {\n            name: 'RepoSuspended',\n          },\n          {\n            name: 'RepoDeactivated',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoSyncGetRepoStatus: {\n    lexicon: 1,\n    id: 'com.atproto.sync.getRepoStatus',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get the hosting status for a repository, on this server. Expected to be implemented by PDS and Relay.',\n        parameters: {\n          type: 'params',\n          required: ['did'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n              description: 'The DID of the repo.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['did', 'active'],\n            properties: {\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n              active: {\n                type: 'boolean',\n              },\n              status: {\n                type: 'string',\n                description:\n                  'If active=false, this optional field indicates a possible reason for why the account is not active. If active=false and no status is supplied, then the host makes no claim for why the repository is no longer being hosted.',\n                knownValues: ['takendown', 'suspended', 'deactivated'],\n              },\n              rev: {\n                type: 'string',\n                description:\n                  'Optional field, the current rev of the repo, if active=true',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'RepoNotFound',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoSyncListBlobs: {\n    lexicon: 1,\n    id: 'com.atproto.sync.listBlobs',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'List blob CIDs for an account, since some repo revision. Does not require auth; implemented by PDS.',\n        parameters: {\n          type: 'params',\n          required: ['did'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n              description: 'The DID of the repo.',\n            },\n            since: {\n              type: 'string',\n              description: 'Optional revision of the repo to list blobs since.',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 1000,\n              default: 500,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['cids'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              cids: {\n                type: 'array',\n                items: {\n                  type: 'string',\n                  format: 'cid',\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'RepoNotFound',\n          },\n          {\n            name: 'RepoTakendown',\n          },\n          {\n            name: 'RepoSuspended',\n          },\n          {\n            name: 'RepoDeactivated',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoSyncListRepos: {\n    lexicon: 1,\n    id: 'com.atproto.sync.listRepos',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Enumerates all the DID, rev, and commit CID for all repos hosted by this service. Does not require auth; implemented by PDS and Relay.',\n        parameters: {\n          type: 'params',\n          properties: {\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 1000,\n              default: 500,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['repos'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              repos: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:com.atproto.sync.listRepos#repo',\n                },\n              },\n            },\n          },\n        },\n      },\n      repo: {\n        type: 'object',\n        required: ['did', 'head', 'rev'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          head: {\n            type: 'string',\n            format: 'cid',\n            description: 'Current repo commit CID',\n          },\n          rev: {\n            type: 'string',\n          },\n          active: {\n            type: 'boolean',\n          },\n          status: {\n            type: 'string',\n            description:\n              'If active=false, this optional field indicates a possible reason for why the account is not active. If active=false and no status is supplied, then the host makes no claim for why the repository is no longer being hosted.',\n            knownValues: ['takendown', 'suspended', 'deactivated'],\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoSyncNotifyOfUpdate: {\n    lexicon: 1,\n    id: 'com.atproto.sync.notifyOfUpdate',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Notify a crawling service of a recent update, and that crawling should resume. Intended use is after a gap between repo stream events caused the crawling service to disconnect. Does not require auth; implemented by Relay.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['hostname'],\n            properties: {\n              hostname: {\n                type: 'string',\n                description:\n                  'Hostname of the current service (usually a PDS) that is notifying of update.',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoSyncRequestCrawl: {\n    lexicon: 1,\n    id: 'com.atproto.sync.requestCrawl',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Request a service to persistently crawl hosted repos. Expected use is new PDS instances declaring their existence to Relays. Does not require auth.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['hostname'],\n            properties: {\n              hostname: {\n                type: 'string',\n                description:\n                  'Hostname of the current service (eg, PDS) that is requesting to be crawled.',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoSyncSubscribeRepos: {\n    lexicon: 1,\n    id: 'com.atproto.sync.subscribeRepos',\n    defs: {\n      main: {\n        type: 'subscription',\n        description:\n          'Repository event stream, aka Firehose endpoint. Outputs repo commits with diff data, and identity update events, for all repositories on the current server. See the atproto specifications for details around stream sequencing, repo versioning, CAR diff format, and more. Public and does not require auth; implemented by PDS and Relay.',\n        parameters: {\n          type: 'params',\n          properties: {\n            cursor: {\n              type: 'integer',\n              description: 'The last known event seq number to backfill from.',\n            },\n          },\n        },\n        message: {\n          schema: {\n            type: 'union',\n            refs: [\n              'lex:com.atproto.sync.subscribeRepos#commit',\n              'lex:com.atproto.sync.subscribeRepos#identity',\n              'lex:com.atproto.sync.subscribeRepos#account',\n              'lex:com.atproto.sync.subscribeRepos#handle',\n              'lex:com.atproto.sync.subscribeRepos#migrate',\n              'lex:com.atproto.sync.subscribeRepos#tombstone',\n              'lex:com.atproto.sync.subscribeRepos#info',\n            ],\n          },\n        },\n        errors: [\n          {\n            name: 'FutureCursor',\n          },\n          {\n            name: 'ConsumerTooSlow',\n            description:\n              'If the consumer of the stream can not keep up with events, and a backlog gets too large, the server will drop the connection.',\n          },\n        ],\n      },\n      commit: {\n        type: 'object',\n        description:\n          'Represents an update of repository state. Note that empty commits are allowed, which include no repo data changes, but an update to rev and signature.',\n        required: [\n          'seq',\n          'rebase',\n          'tooBig',\n          'repo',\n          'commit',\n          'rev',\n          'since',\n          'blocks',\n          'ops',\n          'blobs',\n          'time',\n        ],\n        nullable: ['prev', 'since'],\n        properties: {\n          seq: {\n            type: 'integer',\n            description: 'The stream sequence number of this message.',\n          },\n          rebase: {\n            type: 'boolean',\n            description: 'DEPRECATED -- unused',\n          },\n          tooBig: {\n            type: 'boolean',\n            description:\n              'Indicates that this commit contained too many ops, or data size was too large. Consumers will need to make a separate request to get missing data.',\n          },\n          repo: {\n            type: 'string',\n            format: 'did',\n            description: 'The repo this event comes from.',\n          },\n          commit: {\n            type: 'cid-link',\n            description: 'Repo commit object CID.',\n          },\n          prev: {\n            type: 'cid-link',\n            description:\n              'DEPRECATED -- unused. WARNING -- nullable and optional; stick with optional to ensure golang interoperability.',\n          },\n          rev: {\n            type: 'string',\n            description:\n              'The rev of the emitted commit. Note that this information is also in the commit object included in blocks, unless this is a tooBig event.',\n          },\n          since: {\n            type: 'string',\n            description:\n              'The rev of the last emitted commit from this repo (if any).',\n          },\n          blocks: {\n            type: 'bytes',\n            description:\n              'CAR file containing relevant blocks, as a diff since the previous repo state.',\n            maxLength: 1000000,\n          },\n          ops: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.sync.subscribeRepos#repoOp',\n              description:\n                'List of repo mutation operations in this commit (eg, records created, updated, or deleted).',\n            },\n            maxLength: 200,\n          },\n          blobs: {\n            type: 'array',\n            items: {\n              type: 'cid-link',\n              description:\n                'List of new blobs (by CID) referenced by records in this commit.',\n            },\n          },\n          time: {\n            type: 'string',\n            format: 'datetime',\n            description:\n              'Timestamp of when this message was originally broadcast.',\n          },\n        },\n      },\n      identity: {\n        type: 'object',\n        description:\n          \"Represents a change to an account's identity. Could be an updated handle, signing key, or pds hosting endpoint. Serves as a prod to all downstream services to refresh their identity cache.\",\n        required: ['seq', 'did', 'time'],\n        properties: {\n          seq: {\n            type: 'integer',\n          },\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          time: {\n            type: 'string',\n            format: 'datetime',\n          },\n          handle: {\n            type: 'string',\n            format: 'handle',\n            description:\n              \"The current handle for the account, or 'handle.invalid' if validation fails. This field is optional, might have been validated or passed-through from an upstream source. Semantics and behaviors for PDS vs Relay may evolve in the future; see atproto specs for more details.\",\n          },\n        },\n      },\n      account: {\n        type: 'object',\n        description:\n          \"Represents a change to an account's status on a host (eg, PDS or Relay). The semantics of this event are that the status is at the host which emitted the event, not necessarily that at the currently active PDS. Eg, a Relay takedown would emit a takedown with active=false, even if the PDS is still active.\",\n        required: ['seq', 'did', 'time', 'active'],\n        properties: {\n          seq: {\n            type: 'integer',\n          },\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          time: {\n            type: 'string',\n            format: 'datetime',\n          },\n          active: {\n            type: 'boolean',\n            description:\n              'Indicates that the account has a repository which can be fetched from the host that emitted this event.',\n          },\n          status: {\n            type: 'string',\n            description:\n              'If active=false, this optional field indicates a reason for why the account is not active.',\n            knownValues: ['takendown', 'suspended', 'deleted', 'deactivated'],\n          },\n        },\n      },\n      handle: {\n        type: 'object',\n        description: 'DEPRECATED -- Use #identity event instead',\n        required: ['seq', 'did', 'handle', 'time'],\n        properties: {\n          seq: {\n            type: 'integer',\n          },\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          handle: {\n            type: 'string',\n            format: 'handle',\n          },\n          time: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      migrate: {\n        type: 'object',\n        description: 'DEPRECATED -- Use #account event instead',\n        required: ['seq', 'did', 'migrateTo', 'time'],\n        nullable: ['migrateTo'],\n        properties: {\n          seq: {\n            type: 'integer',\n          },\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          migrateTo: {\n            type: 'string',\n          },\n          time: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      tombstone: {\n        type: 'object',\n        description: 'DEPRECATED -- Use #account event instead',\n        required: ['seq', 'did', 'time'],\n        properties: {\n          seq: {\n            type: 'integer',\n          },\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          time: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      info: {\n        type: 'object',\n        required: ['name'],\n        properties: {\n          name: {\n            type: 'string',\n            knownValues: ['OutdatedCursor'],\n          },\n          message: {\n            type: 'string',\n          },\n        },\n      },\n      repoOp: {\n        type: 'object',\n        description: 'A repo operation, ie a mutation of a single record.',\n        required: ['action', 'path', 'cid'],\n        nullable: ['cid'],\n        properties: {\n          action: {\n            type: 'string',\n            knownValues: ['create', 'update', 'delete'],\n          },\n          path: {\n            type: 'string',\n          },\n          cid: {\n            type: 'cid-link',\n            description:\n              'For creates and updates, the new record CID. For deletions, null.',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoTempAddReservedHandle: {\n    lexicon: 1,\n    id: 'com.atproto.temp.addReservedHandle',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Add a handle to the set of reserved handles.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['handle'],\n            properties: {\n              handle: {\n                type: 'string',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            properties: {},\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoTempCheckSignupQueue: {\n    lexicon: 1,\n    id: 'com.atproto.temp.checkSignupQueue',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Check accounts location in signup queue.',\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['activated'],\n            properties: {\n              activated: {\n                type: 'boolean',\n              },\n              placeInQueue: {\n                type: 'integer',\n              },\n              estimatedTimeMs: {\n                type: 'integer',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoTempFetchLabels: {\n    lexicon: 1,\n    id: 'com.atproto.temp.fetchLabels',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'DEPRECATED: use queryLabels or subscribeLabels instead -- Fetch all labels from a labeler created after a certain date.',\n        parameters: {\n          type: 'params',\n          properties: {\n            since: {\n              type: 'integer',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 250,\n              default: 50,\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['labels'],\n            properties: {\n              labels: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:com.atproto.label.defs#label',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoTempRequestPhoneVerification: {\n    lexicon: 1,\n    id: 'com.atproto.temp.requestPhoneVerification',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Request a verification code to be sent to the supplied phone number',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['phoneNumber'],\n            properties: {\n              phoneNumber: {\n                type: 'string',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyActorDefs: {\n    lexicon: 1,\n    id: 'app.bsky.actor.defs',\n    defs: {\n      profileViewBasic: {\n        type: 'object',\n        required: ['did', 'handle'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          handle: {\n            type: 'string',\n            format: 'handle',\n          },\n          displayName: {\n            type: 'string',\n            maxGraphemes: 64,\n            maxLength: 640,\n          },\n          avatar: {\n            type: 'string',\n            format: 'uri',\n          },\n          associated: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileAssociated',\n          },\n          viewer: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#viewerState',\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      profileView: {\n        type: 'object',\n        required: ['did', 'handle'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          handle: {\n            type: 'string',\n            format: 'handle',\n          },\n          displayName: {\n            type: 'string',\n            maxGraphemes: 64,\n            maxLength: 640,\n          },\n          description: {\n            type: 'string',\n            maxGraphemes: 256,\n            maxLength: 2560,\n          },\n          avatar: {\n            type: 'string',\n            format: 'uri',\n          },\n          associated: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileAssociated',\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          viewer: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#viewerState',\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n        },\n      },\n      profileViewDetailed: {\n        type: 'object',\n        required: ['did', 'handle'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          handle: {\n            type: 'string',\n            format: 'handle',\n          },\n          displayName: {\n            type: 'string',\n            maxGraphemes: 64,\n            maxLength: 640,\n          },\n          description: {\n            type: 'string',\n            maxGraphemes: 256,\n            maxLength: 2560,\n          },\n          avatar: {\n            type: 'string',\n            format: 'uri',\n          },\n          banner: {\n            type: 'string',\n            format: 'uri',\n          },\n          followersCount: {\n            type: 'integer',\n          },\n          followsCount: {\n            type: 'integer',\n          },\n          postsCount: {\n            type: 'integer',\n          },\n          associated: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileAssociated',\n          },\n          joinedViaStarterPack: {\n            type: 'ref',\n            ref: 'lex:app.bsky.graph.defs#starterPackViewBasic',\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          viewer: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#viewerState',\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n          pinnedPost: {\n            type: 'ref',\n            ref: 'lex:com.atproto.repo.strongRef',\n          },\n        },\n      },\n      profileAssociated: {\n        type: 'object',\n        properties: {\n          lists: {\n            type: 'integer',\n          },\n          feedgens: {\n            type: 'integer',\n          },\n          starterPacks: {\n            type: 'integer',\n          },\n          labeler: {\n            type: 'boolean',\n          },\n          chat: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileAssociatedChat',\n          },\n        },\n      },\n      profileAssociatedChat: {\n        type: 'object',\n        required: ['allowIncoming'],\n        properties: {\n          allowIncoming: {\n            type: 'string',\n            knownValues: ['all', 'none', 'following'],\n          },\n        },\n      },\n      viewerState: {\n        type: 'object',\n        description:\n          \"Metadata about the requesting account's relationship with the subject account. Only has meaningful content for authed requests.\",\n        properties: {\n          muted: {\n            type: 'boolean',\n          },\n          mutedByList: {\n            type: 'ref',\n            ref: 'lex:app.bsky.graph.defs#listViewBasic',\n          },\n          blockedBy: {\n            type: 'boolean',\n          },\n          blocking: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          blockingByList: {\n            type: 'ref',\n            ref: 'lex:app.bsky.graph.defs#listViewBasic',\n          },\n          following: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          followedBy: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          knownFollowers: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#knownFollowers',\n          },\n        },\n      },\n      knownFollowers: {\n        type: 'object',\n        description: \"The subject's followers whom you also follow\",\n        required: ['count', 'followers'],\n        properties: {\n          count: {\n            type: 'integer',\n          },\n          followers: {\n            type: 'array',\n            minLength: 0,\n            maxLength: 5,\n            items: {\n              type: 'ref',\n              ref: 'lex:app.bsky.actor.defs#profileViewBasic',\n            },\n          },\n        },\n      },\n      preferences: {\n        type: 'array',\n        items: {\n          type: 'union',\n          refs: [\n            'lex:app.bsky.actor.defs#adultContentPref',\n            'lex:app.bsky.actor.defs#contentLabelPref',\n            'lex:app.bsky.actor.defs#savedFeedsPref',\n            'lex:app.bsky.actor.defs#savedFeedsPrefV2',\n            'lex:app.bsky.actor.defs#personalDetailsPref',\n            'lex:app.bsky.actor.defs#feedViewPref',\n            'lex:app.bsky.actor.defs#threadViewPref',\n            'lex:app.bsky.actor.defs#interestsPref',\n            'lex:app.bsky.actor.defs#mutedWordsPref',\n            'lex:app.bsky.actor.defs#hiddenPostsPref',\n            'lex:app.bsky.actor.defs#bskyAppStatePref',\n            'lex:app.bsky.actor.defs#labelersPref',\n          ],\n        },\n      },\n      adultContentPref: {\n        type: 'object',\n        required: ['enabled'],\n        properties: {\n          enabled: {\n            type: 'boolean',\n            default: false,\n          },\n        },\n      },\n      contentLabelPref: {\n        type: 'object',\n        required: ['label', 'visibility'],\n        properties: {\n          labelerDid: {\n            type: 'string',\n            description:\n              'Which labeler does this preference apply to? If undefined, applies globally.',\n            format: 'did',\n          },\n          label: {\n            type: 'string',\n          },\n          visibility: {\n            type: 'string',\n            knownValues: ['ignore', 'show', 'warn', 'hide'],\n          },\n        },\n      },\n      savedFeed: {\n        type: 'object',\n        required: ['id', 'type', 'value', 'pinned'],\n        properties: {\n          id: {\n            type: 'string',\n          },\n          type: {\n            type: 'string',\n            knownValues: ['feed', 'list', 'timeline'],\n          },\n          value: {\n            type: 'string',\n          },\n          pinned: {\n            type: 'boolean',\n          },\n        },\n      },\n      savedFeedsPrefV2: {\n        type: 'object',\n        required: ['items'],\n        properties: {\n          items: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:app.bsky.actor.defs#savedFeed',\n            },\n          },\n        },\n      },\n      savedFeedsPref: {\n        type: 'object',\n        required: ['pinned', 'saved'],\n        properties: {\n          pinned: {\n            type: 'array',\n            items: {\n              type: 'string',\n              format: 'at-uri',\n            },\n          },\n          saved: {\n            type: 'array',\n            items: {\n              type: 'string',\n              format: 'at-uri',\n            },\n          },\n          timelineIndex: {\n            type: 'integer',\n          },\n        },\n      },\n      personalDetailsPref: {\n        type: 'object',\n        properties: {\n          birthDate: {\n            type: 'string',\n            format: 'datetime',\n            description: 'The birth date of account owner.',\n          },\n        },\n      },\n      feedViewPref: {\n        type: 'object',\n        required: ['feed'],\n        properties: {\n          feed: {\n            type: 'string',\n            description:\n              'The URI of the feed, or an identifier which describes the feed.',\n          },\n          hideReplies: {\n            type: 'boolean',\n            description: 'Hide replies in the feed.',\n          },\n          hideRepliesByUnfollowed: {\n            type: 'boolean',\n            description:\n              'Hide replies in the feed if they are not by followed users.',\n            default: true,\n          },\n          hideRepliesByLikeCount: {\n            type: 'integer',\n            description:\n              'Hide replies in the feed if they do not have this number of likes.',\n          },\n          hideReposts: {\n            type: 'boolean',\n            description: 'Hide reposts in the feed.',\n          },\n          hideQuotePosts: {\n            type: 'boolean',\n            description: 'Hide quote posts in the feed.',\n          },\n        },\n      },\n      threadViewPref: {\n        type: 'object',\n        properties: {\n          sort: {\n            type: 'string',\n            description: 'Sorting mode for threads.',\n            knownValues: [\n              'oldest',\n              'newest',\n              'most-likes',\n              'random',\n              'hotness',\n            ],\n          },\n          prioritizeFollowedUsers: {\n            type: 'boolean',\n            description: 'Show followed users at the top of all replies.',\n          },\n        },\n      },\n      interestsPref: {\n        type: 'object',\n        required: ['tags'],\n        properties: {\n          tags: {\n            type: 'array',\n            maxLength: 100,\n            items: {\n              type: 'string',\n              maxLength: 640,\n              maxGraphemes: 64,\n            },\n            description:\n              \"A list of tags which describe the account owner's interests gathered during onboarding.\",\n          },\n        },\n      },\n      mutedWordTarget: {\n        type: 'string',\n        knownValues: ['content', 'tag'],\n        maxLength: 640,\n        maxGraphemes: 64,\n      },\n      mutedWord: {\n        type: 'object',\n        description: 'A word that the account owner has muted.',\n        required: ['value', 'targets'],\n        properties: {\n          id: {\n            type: 'string',\n          },\n          value: {\n            type: 'string',\n            description: 'The muted word itself.',\n            maxLength: 10000,\n            maxGraphemes: 1000,\n          },\n          targets: {\n            type: 'array',\n            description: 'The intended targets of the muted word.',\n            items: {\n              type: 'ref',\n              ref: 'lex:app.bsky.actor.defs#mutedWordTarget',\n            },\n          },\n          actorTarget: {\n            type: 'string',\n            description:\n              'Groups of users to apply the muted word to. If undefined, applies to all users.',\n            knownValues: ['all', 'exclude-following'],\n            default: 'all',\n          },\n          expiresAt: {\n            type: 'string',\n            format: 'datetime',\n            description:\n              'The date and time at which the muted word will expire and no longer be applied.',\n          },\n        },\n      },\n      mutedWordsPref: {\n        type: 'object',\n        required: ['items'],\n        properties: {\n          items: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:app.bsky.actor.defs#mutedWord',\n            },\n            description: 'A list of words the account owner has muted.',\n          },\n        },\n      },\n      hiddenPostsPref: {\n        type: 'object',\n        required: ['items'],\n        properties: {\n          items: {\n            type: 'array',\n            items: {\n              type: 'string',\n              format: 'at-uri',\n            },\n            description:\n              'A list of URIs of posts the account owner has hidden.',\n          },\n        },\n      },\n      labelersPref: {\n        type: 'object',\n        required: ['labelers'],\n        properties: {\n          labelers: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:app.bsky.actor.defs#labelerPrefItem',\n            },\n          },\n        },\n      },\n      labelerPrefItem: {\n        type: 'object',\n        required: ['did'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n        },\n      },\n      bskyAppStatePref: {\n        description:\n          \"A grab bag of state that's specific to the bsky.app program. Third-party apps shouldn't use this.\",\n        type: 'object',\n        properties: {\n          activeProgressGuide: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#bskyAppProgressGuide',\n          },\n          queuedNudges: {\n            description:\n              'An array of tokens which identify nudges (modals, popups, tours, highlight dots) that should be shown to the user.',\n            type: 'array',\n            maxLength: 1000,\n            items: {\n              type: 'string',\n              maxLength: 100,\n            },\n          },\n          nuxs: {\n            description: 'Storage for NUXs the user has encountered.',\n            type: 'array',\n            maxLength: 100,\n            items: {\n              type: 'ref',\n              ref: 'lex:app.bsky.actor.defs#nux',\n            },\n          },\n        },\n      },\n      bskyAppProgressGuide: {\n        description:\n          'If set, an active progress guide. Once completed, can be set to undefined. Should have unspecced fields tracking progress.',\n        type: 'object',\n        required: ['guide'],\n        properties: {\n          guide: {\n            type: 'string',\n            maxLength: 100,\n          },\n        },\n      },\n      nux: {\n        type: 'object',\n        description: 'A new user experiences (NUX) storage object',\n        required: ['id', 'completed'],\n        properties: {\n          id: {\n            type: 'string',\n            maxLength: 100,\n          },\n          completed: {\n            type: 'boolean',\n            default: false,\n          },\n          data: {\n            description:\n              'Arbitrary data for the NUX. The structure is defined by the NUX itself. Limited to 300 characters.',\n            type: 'string',\n            maxLength: 3000,\n            maxGraphemes: 300,\n          },\n          expiresAt: {\n            type: 'string',\n            format: 'datetime',\n            description:\n              'The date and time at which the NUX will expire and should be considered completed.',\n          },\n        },\n      },\n    },\n  },\n  AppBskyActorGetPreferences: {\n    lexicon: 1,\n    id: 'app.bsky.actor.getPreferences',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get private preferences attached to the current account. Expected use is synchronization between multiple devices, and import/export during account migration. Requires auth.',\n        parameters: {\n          type: 'params',\n          properties: {},\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['preferences'],\n            properties: {\n              preferences: {\n                type: 'ref',\n                ref: 'lex:app.bsky.actor.defs#preferences',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyActorGetProfile: {\n    lexicon: 1,\n    id: 'app.bsky.actor.getProfile',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get detailed profile view of an actor. Does not require auth, but contains relevant metadata with auth.',\n        parameters: {\n          type: 'params',\n          required: ['actor'],\n          properties: {\n            actor: {\n              type: 'string',\n              format: 'at-identifier',\n              description: 'Handle or DID of account to fetch profile of.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileViewDetailed',\n          },\n        },\n      },\n    },\n  },\n  AppBskyActorGetProfiles: {\n    lexicon: 1,\n    id: 'app.bsky.actor.getProfiles',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get detailed profile views of multiple actors.',\n        parameters: {\n          type: 'params',\n          required: ['actors'],\n          properties: {\n            actors: {\n              type: 'array',\n              items: {\n                type: 'string',\n                format: 'at-identifier',\n              },\n              maxLength: 25,\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['profiles'],\n            properties: {\n              profiles: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.actor.defs#profileViewDetailed',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyActorGetSuggestions: {\n    lexicon: 1,\n    id: 'app.bsky.actor.getSuggestions',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get a list of suggested actors. Expected use is discovery of accounts to follow during new account onboarding.',\n        parameters: {\n          type: 'params',\n          properties: {\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['actors'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              actors: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.actor.defs#profileView',\n                },\n              },\n              recId: {\n                type: 'integer',\n                description:\n                  'Snowflake for this recommendation, use when submitting recommendation events.',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyActorProfile: {\n    lexicon: 1,\n    id: 'app.bsky.actor.profile',\n    defs: {\n      main: {\n        type: 'record',\n        description: 'A declaration of a Bluesky account profile.',\n        key: 'literal:self',\n        record: {\n          type: 'object',\n          properties: {\n            displayName: {\n              type: 'string',\n              maxGraphemes: 64,\n              maxLength: 640,\n            },\n            description: {\n              type: 'string',\n              description: 'Free-form profile description text.',\n              maxGraphemes: 256,\n              maxLength: 2560,\n            },\n            avatar: {\n              type: 'blob',\n              description:\n                \"Small image to be displayed next to posts from account. AKA, 'profile picture'\",\n              accept: ['image/png', 'image/jpeg'],\n              maxSize: 1000000,\n            },\n            banner: {\n              type: 'blob',\n              description:\n                'Larger horizontal image to display behind profile view.',\n              accept: ['image/png', 'image/jpeg'],\n              maxSize: 1000000,\n            },\n            labels: {\n              type: 'union',\n              description:\n                'Self-label values, specific to the Bluesky application, on the overall account.',\n              refs: ['lex:com.atproto.label.defs#selfLabels'],\n            },\n            joinedViaStarterPack: {\n              type: 'ref',\n              ref: 'lex:com.atproto.repo.strongRef',\n            },\n            pinnedPost: {\n              type: 'ref',\n              ref: 'lex:com.atproto.repo.strongRef',\n            },\n            createdAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyActorPutPreferences: {\n    lexicon: 1,\n    id: 'app.bsky.actor.putPreferences',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Set the private preferences attached to the account.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['preferences'],\n            properties: {\n              preferences: {\n                type: 'ref',\n                ref: 'lex:app.bsky.actor.defs#preferences',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyActorSearchActors: {\n    lexicon: 1,\n    id: 'app.bsky.actor.searchActors',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Find actors (profiles) matching search criteria. Does not require auth.',\n        parameters: {\n          type: 'params',\n          properties: {\n            term: {\n              type: 'string',\n              description: \"DEPRECATED: use 'q' instead.\",\n            },\n            q: {\n              type: 'string',\n              description:\n                'Search query string. Syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended.',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 25,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['actors'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              actors: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.actor.defs#profileView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyActorSearchActorsTypeahead: {\n    lexicon: 1,\n    id: 'app.bsky.actor.searchActorsTypeahead',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Find actor suggestions for a prefix search term. Expected use is for auto-completion during text field entry. Does not require auth.',\n        parameters: {\n          type: 'params',\n          properties: {\n            term: {\n              type: 'string',\n              description: \"DEPRECATED: use 'q' instead.\",\n            },\n            q: {\n              type: 'string',\n              description: 'Search query prefix; not a full query string.',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 10,\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['actors'],\n            properties: {\n              actors: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.actor.defs#profileViewBasic',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyEmbedDefs: {\n    lexicon: 1,\n    id: 'app.bsky.embed.defs',\n    defs: {\n      aspectRatio: {\n        type: 'object',\n        description:\n          'width:height represents an aspect ratio. It may be approximate, and may not correspond to absolute dimensions in any given unit.',\n        required: ['width', 'height'],\n        properties: {\n          width: {\n            type: 'integer',\n            minimum: 1,\n          },\n          height: {\n            type: 'integer',\n            minimum: 1,\n          },\n        },\n      },\n    },\n  },\n  AppBskyEmbedExternal: {\n    lexicon: 1,\n    id: 'app.bsky.embed.external',\n    defs: {\n      main: {\n        type: 'object',\n        description:\n          \"A representation of some externally linked content (eg, a URL and 'card'), embedded in a Bluesky record (eg, a post).\",\n        required: ['external'],\n        properties: {\n          external: {\n            type: 'ref',\n            ref: 'lex:app.bsky.embed.external#external',\n          },\n        },\n      },\n      external: {\n        type: 'object',\n        required: ['uri', 'title', 'description'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'uri',\n          },\n          title: {\n            type: 'string',\n          },\n          description: {\n            type: 'string',\n          },\n          thumb: {\n            type: 'blob',\n            accept: ['image/*'],\n            maxSize: 1000000,\n          },\n        },\n      },\n      view: {\n        type: 'object',\n        required: ['external'],\n        properties: {\n          external: {\n            type: 'ref',\n            ref: 'lex:app.bsky.embed.external#viewExternal',\n          },\n        },\n      },\n      viewExternal: {\n        type: 'object',\n        required: ['uri', 'title', 'description'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'uri',\n          },\n          title: {\n            type: 'string',\n          },\n          description: {\n            type: 'string',\n          },\n          thumb: {\n            type: 'string',\n            format: 'uri',\n          },\n        },\n      },\n    },\n  },\n  AppBskyEmbedImages: {\n    lexicon: 1,\n    id: 'app.bsky.embed.images',\n    description: 'A set of images embedded in a Bluesky record (eg, a post).',\n    defs: {\n      main: {\n        type: 'object',\n        required: ['images'],\n        properties: {\n          images: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:app.bsky.embed.images#image',\n            },\n            maxLength: 4,\n          },\n        },\n      },\n      image: {\n        type: 'object',\n        required: ['image', 'alt'],\n        properties: {\n          image: {\n            type: 'blob',\n            accept: ['image/*'],\n            maxSize: 1000000,\n          },\n          alt: {\n            type: 'string',\n            description:\n              'Alt text description of the image, for accessibility.',\n          },\n          aspectRatio: {\n            type: 'ref',\n            ref: 'lex:app.bsky.embed.defs#aspectRatio',\n          },\n        },\n      },\n      view: {\n        type: 'object',\n        required: ['images'],\n        properties: {\n          images: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:app.bsky.embed.images#viewImage',\n            },\n            maxLength: 4,\n          },\n        },\n      },\n      viewImage: {\n        type: 'object',\n        required: ['thumb', 'fullsize', 'alt'],\n        properties: {\n          thumb: {\n            type: 'string',\n            format: 'uri',\n            description:\n              'Fully-qualified URL where a thumbnail of the image can be fetched. For example, CDN location provided by the App View.',\n          },\n          fullsize: {\n            type: 'string',\n            format: 'uri',\n            description:\n              'Fully-qualified URL where a large version of the image can be fetched. May or may not be the exact original blob. For example, CDN location provided by the App View.',\n          },\n          alt: {\n            type: 'string',\n            description:\n              'Alt text description of the image, for accessibility.',\n          },\n          aspectRatio: {\n            type: 'ref',\n            ref: 'lex:app.bsky.embed.defs#aspectRatio',\n          },\n        },\n      },\n    },\n  },\n  AppBskyEmbedRecord: {\n    lexicon: 1,\n    id: 'app.bsky.embed.record',\n    description:\n      'A representation of a record embedded in a Bluesky record (eg, a post). For example, a quote-post, or sharing a feed generator record.',\n    defs: {\n      main: {\n        type: 'object',\n        required: ['record'],\n        properties: {\n          record: {\n            type: 'ref',\n            ref: 'lex:com.atproto.repo.strongRef',\n          },\n        },\n      },\n      view: {\n        type: 'object',\n        required: ['record'],\n        properties: {\n          record: {\n            type: 'union',\n            refs: [\n              'lex:app.bsky.embed.record#viewRecord',\n              'lex:app.bsky.embed.record#viewNotFound',\n              'lex:app.bsky.embed.record#viewBlocked',\n              'lex:app.bsky.embed.record#viewDetached',\n              'lex:app.bsky.feed.defs#generatorView',\n              'lex:app.bsky.graph.defs#listView',\n              'lex:app.bsky.labeler.defs#labelerView',\n              'lex:app.bsky.graph.defs#starterPackViewBasic',\n            ],\n          },\n        },\n      },\n      viewRecord: {\n        type: 'object',\n        required: ['uri', 'cid', 'author', 'value', 'indexedAt'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          author: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileViewBasic',\n          },\n          value: {\n            type: 'unknown',\n            description: 'The record data itself.',\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n          replyCount: {\n            type: 'integer',\n          },\n          repostCount: {\n            type: 'integer',\n          },\n          likeCount: {\n            type: 'integer',\n          },\n          quoteCount: {\n            type: 'integer',\n          },\n          embeds: {\n            type: 'array',\n            items: {\n              type: 'union',\n              refs: [\n                'lex:app.bsky.embed.images#view',\n                'lex:app.bsky.embed.video#view',\n                'lex:app.bsky.embed.external#view',\n                'lex:app.bsky.embed.record#view',\n                'lex:app.bsky.embed.recordWithMedia#view',\n              ],\n            },\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      viewNotFound: {\n        type: 'object',\n        required: ['uri', 'notFound'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          notFound: {\n            type: 'boolean',\n            const: true,\n          },\n        },\n      },\n      viewBlocked: {\n        type: 'object',\n        required: ['uri', 'blocked', 'author'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          blocked: {\n            type: 'boolean',\n            const: true,\n          },\n          author: {\n            type: 'ref',\n            ref: 'lex:app.bsky.feed.defs#blockedAuthor',\n          },\n        },\n      },\n      viewDetached: {\n        type: 'object',\n        required: ['uri', 'detached'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          detached: {\n            type: 'boolean',\n            const: true,\n          },\n        },\n      },\n    },\n  },\n  AppBskyEmbedRecordWithMedia: {\n    lexicon: 1,\n    id: 'app.bsky.embed.recordWithMedia',\n    description:\n      'A representation of a record embedded in a Bluesky record (eg, a post), alongside other compatible embeds. For example, a quote post and image, or a quote post and external URL card.',\n    defs: {\n      main: {\n        type: 'object',\n        required: ['record', 'media'],\n        properties: {\n          record: {\n            type: 'ref',\n            ref: 'lex:app.bsky.embed.record',\n          },\n          media: {\n            type: 'union',\n            refs: [\n              'lex:app.bsky.embed.images',\n              'lex:app.bsky.embed.video',\n              'lex:app.bsky.embed.external',\n            ],\n          },\n        },\n      },\n      view: {\n        type: 'object',\n        required: ['record', 'media'],\n        properties: {\n          record: {\n            type: 'ref',\n            ref: 'lex:app.bsky.embed.record#view',\n          },\n          media: {\n            type: 'union',\n            refs: [\n              'lex:app.bsky.embed.images#view',\n              'lex:app.bsky.embed.video#view',\n              'lex:app.bsky.embed.external#view',\n            ],\n          },\n        },\n      },\n    },\n  },\n  AppBskyEmbedVideo: {\n    lexicon: 1,\n    id: 'app.bsky.embed.video',\n    description: 'A video embedded in a Bluesky record (eg, a post).',\n    defs: {\n      main: {\n        type: 'object',\n        required: ['video'],\n        properties: {\n          video: {\n            type: 'blob',\n            accept: ['video/mp4'],\n            maxSize: 50000000,\n          },\n          captions: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:app.bsky.embed.video#caption',\n            },\n            maxLength: 20,\n          },\n          alt: {\n            type: 'string',\n            description:\n              'Alt text description of the video, for accessibility.',\n            maxGraphemes: 1000,\n            maxLength: 10000,\n          },\n          aspectRatio: {\n            type: 'ref',\n            ref: 'lex:app.bsky.embed.defs#aspectRatio',\n          },\n        },\n      },\n      caption: {\n        type: 'object',\n        required: ['lang', 'file'],\n        properties: {\n          lang: {\n            type: 'string',\n            format: 'language',\n          },\n          file: {\n            type: 'blob',\n            accept: ['text/vtt'],\n            maxSize: 20000,\n          },\n        },\n      },\n      view: {\n        type: 'object',\n        required: ['cid', 'playlist'],\n        properties: {\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          playlist: {\n            type: 'string',\n            format: 'uri',\n          },\n          thumbnail: {\n            type: 'string',\n            format: 'uri',\n          },\n          alt: {\n            type: 'string',\n            maxGraphemes: 1000,\n            maxLength: 10000,\n          },\n          aspectRatio: {\n            type: 'ref',\n            ref: 'lex:app.bsky.embed.defs#aspectRatio',\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedDefs: {\n    lexicon: 1,\n    id: 'app.bsky.feed.defs',\n    defs: {\n      postView: {\n        type: 'object',\n        required: ['uri', 'cid', 'author', 'record', 'indexedAt'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          author: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileViewBasic',\n          },\n          record: {\n            type: 'unknown',\n          },\n          embed: {\n            type: 'union',\n            refs: [\n              'lex:app.bsky.embed.images#view',\n              'lex:app.bsky.embed.video#view',\n              'lex:app.bsky.embed.external#view',\n              'lex:app.bsky.embed.record#view',\n              'lex:app.bsky.embed.recordWithMedia#view',\n            ],\n          },\n          replyCount: {\n            type: 'integer',\n          },\n          repostCount: {\n            type: 'integer',\n          },\n          likeCount: {\n            type: 'integer',\n          },\n          quoteCount: {\n            type: 'integer',\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          viewer: {\n            type: 'ref',\n            ref: 'lex:app.bsky.feed.defs#viewerState',\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n          threadgate: {\n            type: 'ref',\n            ref: 'lex:app.bsky.feed.defs#threadgateView',\n          },\n        },\n      },\n      viewerState: {\n        type: 'object',\n        description:\n          \"Metadata about the requesting account's relationship with the subject content. Only has meaningful content for authed requests.\",\n        properties: {\n          repost: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          like: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          threadMuted: {\n            type: 'boolean',\n          },\n          replyDisabled: {\n            type: 'boolean',\n          },\n          embeddingDisabled: {\n            type: 'boolean',\n          },\n          pinned: {\n            type: 'boolean',\n          },\n        },\n      },\n      feedViewPost: {\n        type: 'object',\n        required: ['post'],\n        properties: {\n          post: {\n            type: 'ref',\n            ref: 'lex:app.bsky.feed.defs#postView',\n          },\n          reply: {\n            type: 'ref',\n            ref: 'lex:app.bsky.feed.defs#replyRef',\n          },\n          reason: {\n            type: 'union',\n            refs: [\n              'lex:app.bsky.feed.defs#reasonRepost',\n              'lex:app.bsky.feed.defs#reasonPin',\n            ],\n          },\n          feedContext: {\n            type: 'string',\n            description:\n              'Context provided by feed generator that may be passed back alongside interactions.',\n            maxLength: 2000,\n          },\n        },\n      },\n      replyRef: {\n        type: 'object',\n        required: ['root', 'parent'],\n        properties: {\n          root: {\n            type: 'union',\n            refs: [\n              'lex:app.bsky.feed.defs#postView',\n              'lex:app.bsky.feed.defs#notFoundPost',\n              'lex:app.bsky.feed.defs#blockedPost',\n            ],\n          },\n          parent: {\n            type: 'union',\n            refs: [\n              'lex:app.bsky.feed.defs#postView',\n              'lex:app.bsky.feed.defs#notFoundPost',\n              'lex:app.bsky.feed.defs#blockedPost',\n            ],\n          },\n          grandparentAuthor: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileViewBasic',\n            description:\n              'When parent is a reply to another post, this is the author of that post.',\n          },\n        },\n      },\n      reasonRepost: {\n        type: 'object',\n        required: ['by', 'indexedAt'],\n        properties: {\n          by: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileViewBasic',\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      reasonPin: {\n        type: 'object',\n        properties: {},\n      },\n      threadViewPost: {\n        type: 'object',\n        required: ['post'],\n        properties: {\n          post: {\n            type: 'ref',\n            ref: 'lex:app.bsky.feed.defs#postView',\n          },\n          parent: {\n            type: 'union',\n            refs: [\n              'lex:app.bsky.feed.defs#threadViewPost',\n              'lex:app.bsky.feed.defs#notFoundPost',\n              'lex:app.bsky.feed.defs#blockedPost',\n            ],\n          },\n          replies: {\n            type: 'array',\n            items: {\n              type: 'union',\n              refs: [\n                'lex:app.bsky.feed.defs#threadViewPost',\n                'lex:app.bsky.feed.defs#notFoundPost',\n                'lex:app.bsky.feed.defs#blockedPost',\n              ],\n            },\n          },\n        },\n      },\n      notFoundPost: {\n        type: 'object',\n        required: ['uri', 'notFound'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          notFound: {\n            type: 'boolean',\n            const: true,\n          },\n        },\n      },\n      blockedPost: {\n        type: 'object',\n        required: ['uri', 'blocked', 'author'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          blocked: {\n            type: 'boolean',\n            const: true,\n          },\n          author: {\n            type: 'ref',\n            ref: 'lex:app.bsky.feed.defs#blockedAuthor',\n          },\n        },\n      },\n      blockedAuthor: {\n        type: 'object',\n        required: ['did'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          viewer: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#viewerState',\n          },\n        },\n      },\n      generatorView: {\n        type: 'object',\n        required: ['uri', 'cid', 'did', 'creator', 'displayName', 'indexedAt'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          creator: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileView',\n          },\n          displayName: {\n            type: 'string',\n          },\n          description: {\n            type: 'string',\n            maxGraphemes: 300,\n            maxLength: 3000,\n          },\n          descriptionFacets: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:app.bsky.richtext.facet',\n            },\n          },\n          avatar: {\n            type: 'string',\n            format: 'uri',\n          },\n          likeCount: {\n            type: 'integer',\n            minimum: 0,\n          },\n          acceptsInteractions: {\n            type: 'boolean',\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n          viewer: {\n            type: 'ref',\n            ref: 'lex:app.bsky.feed.defs#generatorViewerState',\n          },\n          contentMode: {\n            type: 'string',\n            knownValues: [\n              'app.bsky.feed.defs#contentModeUnspecified',\n              'app.bsky.feed.defs#contentModeVideo',\n            ],\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      generatorViewerState: {\n        type: 'object',\n        properties: {\n          like: {\n            type: 'string',\n            format: 'at-uri',\n          },\n        },\n      },\n      skeletonFeedPost: {\n        type: 'object',\n        required: ['post'],\n        properties: {\n          post: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          reason: {\n            type: 'union',\n            refs: [\n              'lex:app.bsky.feed.defs#skeletonReasonRepost',\n              'lex:app.bsky.feed.defs#skeletonReasonPin',\n            ],\n          },\n          feedContext: {\n            type: 'string',\n            description:\n              'Context that will be passed through to client and may be passed to feed generator back alongside interactions.',\n            maxLength: 2000,\n          },\n        },\n      },\n      skeletonReasonRepost: {\n        type: 'object',\n        required: ['repost'],\n        properties: {\n          repost: {\n            type: 'string',\n            format: 'at-uri',\n          },\n        },\n      },\n      skeletonReasonPin: {\n        type: 'object',\n        properties: {},\n      },\n      threadgateView: {\n        type: 'object',\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          record: {\n            type: 'unknown',\n          },\n          lists: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:app.bsky.graph.defs#listViewBasic',\n            },\n          },\n        },\n      },\n      interaction: {\n        type: 'object',\n        properties: {\n          item: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          event: {\n            type: 'string',\n            knownValues: [\n              'app.bsky.feed.defs#requestLess',\n              'app.bsky.feed.defs#requestMore',\n              'app.bsky.feed.defs#clickthroughItem',\n              'app.bsky.feed.defs#clickthroughAuthor',\n              'app.bsky.feed.defs#clickthroughReposter',\n              'app.bsky.feed.defs#clickthroughEmbed',\n              'app.bsky.feed.defs#interactionSeen',\n              'app.bsky.feed.defs#interactionLike',\n              'app.bsky.feed.defs#interactionRepost',\n              'app.bsky.feed.defs#interactionReply',\n              'app.bsky.feed.defs#interactionQuote',\n              'app.bsky.feed.defs#interactionShare',\n            ],\n          },\n          feedContext: {\n            type: 'string',\n            description:\n              'Context on a feed item that was originally supplied by the feed generator on getFeedSkeleton.',\n            maxLength: 2000,\n          },\n        },\n      },\n      requestLess: {\n        type: 'token',\n        description:\n          'Request that less content like the given feed item be shown in the feed',\n      },\n      requestMore: {\n        type: 'token',\n        description:\n          'Request that more content like the given feed item be shown in the feed',\n      },\n      clickthroughItem: {\n        type: 'token',\n        description: 'User clicked through to the feed item',\n      },\n      clickthroughAuthor: {\n        type: 'token',\n        description: 'User clicked through to the author of the feed item',\n      },\n      clickthroughReposter: {\n        type: 'token',\n        description: 'User clicked through to the reposter of the feed item',\n      },\n      clickthroughEmbed: {\n        type: 'token',\n        description:\n          'User clicked through to the embedded content of the feed item',\n      },\n      contentModeUnspecified: {\n        type: 'token',\n        description: 'Declares the feed generator returns any types of posts.',\n      },\n      contentModeVideo: {\n        type: 'token',\n        description:\n          'Declares the feed generator returns posts containing app.bsky.embed.video embeds.',\n      },\n      interactionSeen: {\n        type: 'token',\n        description: 'Feed item was seen by user',\n      },\n      interactionLike: {\n        type: 'token',\n        description: 'User liked the feed item',\n      },\n      interactionRepost: {\n        type: 'token',\n        description: 'User reposted the feed item',\n      },\n      interactionReply: {\n        type: 'token',\n        description: 'User replied to the feed item',\n      },\n      interactionQuote: {\n        type: 'token',\n        description: 'User quoted the feed item',\n      },\n      interactionShare: {\n        type: 'token',\n        description: 'User shared the feed item',\n      },\n    },\n  },\n  AppBskyFeedDescribeFeedGenerator: {\n    lexicon: 1,\n    id: 'app.bsky.feed.describeFeedGenerator',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get information about a feed generator, including policies and offered feed URIs. Does not require auth; implemented by Feed Generator services (not App View).',\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['did', 'feeds'],\n            properties: {\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n              feeds: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.describeFeedGenerator#feed',\n                },\n              },\n              links: {\n                type: 'ref',\n                ref: 'lex:app.bsky.feed.describeFeedGenerator#links',\n              },\n            },\n          },\n        },\n      },\n      feed: {\n        type: 'object',\n        required: ['uri'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n        },\n      },\n      links: {\n        type: 'object',\n        properties: {\n          privacyPolicy: {\n            type: 'string',\n          },\n          termsOfService: {\n            type: 'string',\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedGenerator: {\n    lexicon: 1,\n    id: 'app.bsky.feed.generator',\n    defs: {\n      main: {\n        type: 'record',\n        description:\n          'Record declaring of the existence of a feed generator, and containing metadata about it. The record can exist in any repository.',\n        key: 'any',\n        record: {\n          type: 'object',\n          required: ['did', 'displayName', 'createdAt'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n            },\n            displayName: {\n              type: 'string',\n              maxGraphemes: 24,\n              maxLength: 240,\n            },\n            description: {\n              type: 'string',\n              maxGraphemes: 300,\n              maxLength: 3000,\n            },\n            descriptionFacets: {\n              type: 'array',\n              items: {\n                type: 'ref',\n                ref: 'lex:app.bsky.richtext.facet',\n              },\n            },\n            avatar: {\n              type: 'blob',\n              accept: ['image/png', 'image/jpeg'],\n              maxSize: 1000000,\n            },\n            acceptsInteractions: {\n              type: 'boolean',\n              description:\n                'Declaration that a feed accepts feedback interactions from a client through app.bsky.feed.sendInteractions',\n            },\n            labels: {\n              type: 'union',\n              description: 'Self-label values',\n              refs: ['lex:com.atproto.label.defs#selfLabels'],\n            },\n            contentMode: {\n              type: 'string',\n              knownValues: [\n                'app.bsky.feed.defs#contentModeUnspecified',\n                'app.bsky.feed.defs#contentModeVideo',\n              ],\n            },\n            createdAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedGetActorFeeds: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getActorFeeds',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          \"Get a list of feeds (feed generator records) created by the actor (in the actor's repo).\",\n        parameters: {\n          type: 'params',\n          required: ['actor'],\n          properties: {\n            actor: {\n              type: 'string',\n              format: 'at-identifier',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['feeds'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              feeds: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#generatorView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedGetActorLikes: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getActorLikes',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get a list of posts liked by an actor. Requires auth, actor must be the requesting account.',\n        parameters: {\n          type: 'params',\n          required: ['actor'],\n          properties: {\n            actor: {\n              type: 'string',\n              format: 'at-identifier',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['feed'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              feed: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#feedViewPost',\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'BlockedActor',\n          },\n          {\n            name: 'BlockedByActor',\n          },\n        ],\n      },\n    },\n  },\n  AppBskyFeedGetAuthorFeed: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getAuthorFeed',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          \"Get a view of an actor's 'author feed' (post and reposts by the author). Does not require auth.\",\n        parameters: {\n          type: 'params',\n          required: ['actor'],\n          properties: {\n            actor: {\n              type: 'string',\n              format: 'at-identifier',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n            filter: {\n              type: 'string',\n              description:\n                'Combinations of post/repost types to include in response.',\n              knownValues: [\n                'posts_with_replies',\n                'posts_no_replies',\n                'posts_with_media',\n                'posts_and_author_threads',\n              ],\n              default: 'posts_with_replies',\n            },\n            includePins: {\n              type: 'boolean',\n              default: false,\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['feed'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              feed: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#feedViewPost',\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'BlockedActor',\n          },\n          {\n            name: 'BlockedByActor',\n          },\n        ],\n      },\n    },\n  },\n  AppBskyFeedGetFeed: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getFeed',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          \"Get a hydrated feed from an actor's selected feed generator. Implemented by App View.\",\n        parameters: {\n          type: 'params',\n          required: ['feed'],\n          properties: {\n            feed: {\n              type: 'string',\n              format: 'at-uri',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['feed'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              feed: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#feedViewPost',\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'UnknownFeed',\n          },\n        ],\n      },\n    },\n  },\n  AppBskyFeedGetFeedGenerator: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getFeedGenerator',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get information about a feed generator. Implemented by AppView.',\n        parameters: {\n          type: 'params',\n          required: ['feed'],\n          properties: {\n            feed: {\n              type: 'string',\n              format: 'at-uri',\n              description: 'AT-URI of the feed generator record.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['view', 'isOnline', 'isValid'],\n            properties: {\n              view: {\n                type: 'ref',\n                ref: 'lex:app.bsky.feed.defs#generatorView',\n              },\n              isOnline: {\n                type: 'boolean',\n                description:\n                  'Indicates whether the feed generator service has been online recently, or else seems to be inactive.',\n              },\n              isValid: {\n                type: 'boolean',\n                description:\n                  'Indicates whether the feed generator service is compatible with the record declaration.',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedGetFeedGenerators: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getFeedGenerators',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get information about a list of feed generators.',\n        parameters: {\n          type: 'params',\n          required: ['feeds'],\n          properties: {\n            feeds: {\n              type: 'array',\n              items: {\n                type: 'string',\n                format: 'at-uri',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['feeds'],\n            properties: {\n              feeds: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#generatorView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedGetFeedSkeleton: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getFeedSkeleton',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get a skeleton of a feed provided by a feed generator. Auth is optional, depending on provider requirements, and provides the DID of the requester. Implemented by Feed Generator Service.',\n        parameters: {\n          type: 'params',\n          required: ['feed'],\n          properties: {\n            feed: {\n              type: 'string',\n              format: 'at-uri',\n              description:\n                'Reference to feed generator record describing the specific feed being requested.',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['feed'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              feed: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#skeletonFeedPost',\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'UnknownFeed',\n          },\n        ],\n      },\n    },\n  },\n  AppBskyFeedGetLikes: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getLikes',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get like records which reference a subject (by AT-URI and CID).',\n        parameters: {\n          type: 'params',\n          required: ['uri'],\n          properties: {\n            uri: {\n              type: 'string',\n              format: 'at-uri',\n              description: 'AT-URI of the subject (eg, a post record).',\n            },\n            cid: {\n              type: 'string',\n              format: 'cid',\n              description:\n                'CID of the subject record (aka, specific version of record), to filter likes.',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['uri', 'likes'],\n            properties: {\n              uri: {\n                type: 'string',\n                format: 'at-uri',\n              },\n              cid: {\n                type: 'string',\n                format: 'cid',\n              },\n              cursor: {\n                type: 'string',\n              },\n              likes: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.getLikes#like',\n                },\n              },\n            },\n          },\n        },\n      },\n      like: {\n        type: 'object',\n        required: ['indexedAt', 'createdAt', 'actor'],\n        properties: {\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          actor: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileView',\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedGetListFeed: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getListFeed',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get a feed of recent posts from a list (posts and reposts from any actors on the list). Does not require auth.',\n        parameters: {\n          type: 'params',\n          required: ['list'],\n          properties: {\n            list: {\n              type: 'string',\n              format: 'at-uri',\n              description: 'Reference (AT-URI) to the list record.',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['feed'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              feed: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#feedViewPost',\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'UnknownList',\n          },\n        ],\n      },\n    },\n  },\n  AppBskyFeedGetPostThread: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getPostThread',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get posts in a thread. Does not require auth, but additional metadata and filtering will be applied for authed requests.',\n        parameters: {\n          type: 'params',\n          required: ['uri'],\n          properties: {\n            uri: {\n              type: 'string',\n              format: 'at-uri',\n              description: 'Reference (AT-URI) to post record.',\n            },\n            depth: {\n              type: 'integer',\n              description:\n                'How many levels of reply depth should be included in response.',\n              default: 6,\n              minimum: 0,\n              maximum: 1000,\n            },\n            parentHeight: {\n              type: 'integer',\n              description:\n                'How many levels of parent (and grandparent, etc) post to include.',\n              default: 80,\n              minimum: 0,\n              maximum: 1000,\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['thread'],\n            properties: {\n              thread: {\n                type: 'union',\n                refs: [\n                  'lex:app.bsky.feed.defs#threadViewPost',\n                  'lex:app.bsky.feed.defs#notFoundPost',\n                  'lex:app.bsky.feed.defs#blockedPost',\n                ],\n              },\n              threadgate: {\n                type: 'ref',\n                ref: 'lex:app.bsky.feed.defs#threadgateView',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'NotFound',\n          },\n        ],\n      },\n    },\n  },\n  AppBskyFeedGetPosts: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getPosts',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          \"Gets post views for a specified list of posts (by AT-URI). This is sometimes referred to as 'hydrating' a 'feed skeleton'.\",\n        parameters: {\n          type: 'params',\n          required: ['uris'],\n          properties: {\n            uris: {\n              type: 'array',\n              description: 'List of post AT-URIs to return hydrated views for.',\n              items: {\n                type: 'string',\n                format: 'at-uri',\n              },\n              maxLength: 25,\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['posts'],\n            properties: {\n              posts: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#postView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedGetQuotes: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getQuotes',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get a list of quotes for a given post.',\n        parameters: {\n          type: 'params',\n          required: ['uri'],\n          properties: {\n            uri: {\n              type: 'string',\n              format: 'at-uri',\n              description: 'Reference (AT-URI) of post record',\n            },\n            cid: {\n              type: 'string',\n              format: 'cid',\n              description:\n                'If supplied, filters to quotes of specific version (by CID) of the post record.',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['uri', 'posts'],\n            properties: {\n              uri: {\n                type: 'string',\n                format: 'at-uri',\n              },\n              cid: {\n                type: 'string',\n                format: 'cid',\n              },\n              cursor: {\n                type: 'string',\n              },\n              posts: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#postView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedGetRepostedBy: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getRepostedBy',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get a list of reposts for a given post.',\n        parameters: {\n          type: 'params',\n          required: ['uri'],\n          properties: {\n            uri: {\n              type: 'string',\n              format: 'at-uri',\n              description: 'Reference (AT-URI) of post record',\n            },\n            cid: {\n              type: 'string',\n              format: 'cid',\n              description:\n                'If supplied, filters to reposts of specific version (by CID) of the post record.',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['uri', 'repostedBy'],\n            properties: {\n              uri: {\n                type: 'string',\n                format: 'at-uri',\n              },\n              cid: {\n                type: 'string',\n                format: 'cid',\n              },\n              cursor: {\n                type: 'string',\n              },\n              repostedBy: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.actor.defs#profileView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedGetSuggestedFeeds: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getSuggestedFeeds',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get a list of suggested feeds (feed generators) for the requesting account.',\n        parameters: {\n          type: 'params',\n          properties: {\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['feeds'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              feeds: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#generatorView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedGetTimeline: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getTimeline',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          \"Get a view of the requesting account's home timeline. This is expected to be some form of reverse-chronological feed.\",\n        parameters: {\n          type: 'params',\n          properties: {\n            algorithm: {\n              type: 'string',\n              description:\n                \"Variant 'algorithm' for timeline. Implementation-specific. NOTE: most feed flexibility has been moved to feed generator mechanism.\",\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['feed'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              feed: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#feedViewPost',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedLike: {\n    lexicon: 1,\n    id: 'app.bsky.feed.like',\n    defs: {\n      main: {\n        type: 'record',\n        description: \"Record declaring a 'like' of a piece of subject content.\",\n        key: 'tid',\n        record: {\n          type: 'object',\n          required: ['subject', 'createdAt'],\n          properties: {\n            subject: {\n              type: 'ref',\n              ref: 'lex:com.atproto.repo.strongRef',\n            },\n            createdAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedPost: {\n    lexicon: 1,\n    id: 'app.bsky.feed.post',\n    defs: {\n      main: {\n        type: 'record',\n        description: 'Record containing a Bluesky post.',\n        key: 'tid',\n        record: {\n          type: 'object',\n          required: ['text', 'createdAt'],\n          properties: {\n            text: {\n              type: 'string',\n              maxLength: 3000,\n              maxGraphemes: 300,\n              description:\n                'The primary post content. May be an empty string, if there are embeds.',\n            },\n            entities: {\n              type: 'array',\n              description: 'DEPRECATED: replaced by app.bsky.richtext.facet.',\n              items: {\n                type: 'ref',\n                ref: 'lex:app.bsky.feed.post#entity',\n              },\n            },\n            facets: {\n              type: 'array',\n              description:\n                'Annotations of text (mentions, URLs, hashtags, etc)',\n              items: {\n                type: 'ref',\n                ref: 'lex:app.bsky.richtext.facet',\n              },\n            },\n            reply: {\n              type: 'ref',\n              ref: 'lex:app.bsky.feed.post#replyRef',\n            },\n            embed: {\n              type: 'union',\n              refs: [\n                'lex:app.bsky.embed.images',\n                'lex:app.bsky.embed.video',\n                'lex:app.bsky.embed.external',\n                'lex:app.bsky.embed.record',\n                'lex:app.bsky.embed.recordWithMedia',\n              ],\n            },\n            langs: {\n              type: 'array',\n              description:\n                'Indicates human language of post primary text content.',\n              maxLength: 3,\n              items: {\n                type: 'string',\n                format: 'language',\n              },\n            },\n            labels: {\n              type: 'union',\n              description:\n                'Self-label values for this post. Effectively content warnings.',\n              refs: ['lex:com.atproto.label.defs#selfLabels'],\n            },\n            tags: {\n              type: 'array',\n              description:\n                'Additional hashtags, in addition to any included in post text and facets.',\n              maxLength: 8,\n              items: {\n                type: 'string',\n                maxLength: 640,\n                maxGraphemes: 64,\n              },\n            },\n            createdAt: {\n              type: 'string',\n              format: 'datetime',\n              description:\n                'Client-declared timestamp when this post was originally created.',\n            },\n          },\n        },\n      },\n      replyRef: {\n        type: 'object',\n        required: ['root', 'parent'],\n        properties: {\n          root: {\n            type: 'ref',\n            ref: 'lex:com.atproto.repo.strongRef',\n          },\n          parent: {\n            type: 'ref',\n            ref: 'lex:com.atproto.repo.strongRef',\n          },\n        },\n      },\n      entity: {\n        type: 'object',\n        description: 'Deprecated: use facets instead.',\n        required: ['index', 'type', 'value'],\n        properties: {\n          index: {\n            type: 'ref',\n            ref: 'lex:app.bsky.feed.post#textSlice',\n          },\n          type: {\n            type: 'string',\n            description: \"Expected values are 'mention' and 'link'.\",\n          },\n          value: {\n            type: 'string',\n          },\n        },\n      },\n      textSlice: {\n        type: 'object',\n        description:\n          'Deprecated. Use app.bsky.richtext instead -- A text segment. Start is inclusive, end is exclusive. Indices are for utf16-encoded strings.',\n        required: ['start', 'end'],\n        properties: {\n          start: {\n            type: 'integer',\n            minimum: 0,\n          },\n          end: {\n            type: 'integer',\n            minimum: 0,\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedPostgate: {\n    lexicon: 1,\n    id: 'app.bsky.feed.postgate',\n    defs: {\n      main: {\n        type: 'record',\n        key: 'tid',\n        description:\n          'Record defining interaction rules for a post. The record key (rkey) of the postgate record must match the record key of the post, and that record must be in the same repository.',\n        record: {\n          type: 'object',\n          required: ['post', 'createdAt'],\n          properties: {\n            createdAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n            post: {\n              type: 'string',\n              format: 'at-uri',\n              description: 'Reference (AT-URI) to the post record.',\n            },\n            detachedEmbeddingUris: {\n              type: 'array',\n              maxLength: 50,\n              items: {\n                type: 'string',\n                format: 'at-uri',\n              },\n              description:\n                'List of AT-URIs embedding this post that the author has detached from.',\n            },\n            embeddingRules: {\n              type: 'array',\n              maxLength: 5,\n              items: {\n                type: 'union',\n                refs: ['lex:app.bsky.feed.postgate#disableRule'],\n              },\n            },\n          },\n        },\n      },\n      disableRule: {\n        type: 'object',\n        description: 'Disables embedding of this post.',\n        properties: {},\n      },\n    },\n  },\n  AppBskyFeedRepost: {\n    lexicon: 1,\n    id: 'app.bsky.feed.repost',\n    defs: {\n      main: {\n        description:\n          \"Record representing a 'repost' of an existing Bluesky post.\",\n        type: 'record',\n        key: 'tid',\n        record: {\n          type: 'object',\n          required: ['subject', 'createdAt'],\n          properties: {\n            subject: {\n              type: 'ref',\n              ref: 'lex:com.atproto.repo.strongRef',\n            },\n            createdAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedSearchPosts: {\n    lexicon: 1,\n    id: 'app.bsky.feed.searchPosts',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Find posts matching search criteria, returning views of those posts.',\n        parameters: {\n          type: 'params',\n          required: ['q'],\n          properties: {\n            q: {\n              type: 'string',\n              description:\n                'Search query string; syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended.',\n            },\n            sort: {\n              type: 'string',\n              knownValues: ['top', 'latest'],\n              default: 'latest',\n              description: 'Specifies the ranking order of results.',\n            },\n            since: {\n              type: 'string',\n              description:\n                \"Filter results for posts after the indicated datetime (inclusive). Expected to use 'sortAt' timestamp, which may not match 'createdAt'. Can be a datetime, or just an ISO date (YYYY-MM-DD).\",\n            },\n            until: {\n              type: 'string',\n              description:\n                \"Filter results for posts before the indicated datetime (not inclusive). Expected to use 'sortAt' timestamp, which may not match 'createdAt'. Can be a datetime, or just an ISO date (YYY-MM-DD).\",\n            },\n            mentions: {\n              type: 'string',\n              format: 'at-identifier',\n              description:\n                'Filter to posts which mention the given account. Handles are resolved to DID before query-time. Only matches rich-text facet mentions.',\n            },\n            author: {\n              type: 'string',\n              format: 'at-identifier',\n              description:\n                'Filter to posts by the given account. Handles are resolved to DID before query-time.',\n            },\n            lang: {\n              type: 'string',\n              format: 'language',\n              description:\n                'Filter to posts in the given language. Expected to be based on post language field, though server may override language detection.',\n            },\n            domain: {\n              type: 'string',\n              description:\n                'Filter to posts with URLs (facet links or embeds) linking to the given domain (hostname). Server may apply hostname normalization.',\n            },\n            url: {\n              type: 'string',\n              format: 'uri',\n              description:\n                'Filter to posts with links (facet links or embeds) pointing to this URL. Server may apply URL normalization or fuzzy matching.',\n            },\n            tag: {\n              type: 'array',\n              items: {\n                type: 'string',\n                maxLength: 640,\n                maxGraphemes: 64,\n              },\n              description:\n                \"Filter to posts with the given tag (hashtag), based on rich-text facet or tag field. Do not include the hash (#) prefix. Multiple tags can be specified, with 'AND' matching.\",\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 25,\n            },\n            cursor: {\n              type: 'string',\n              description:\n                'Optional pagination mechanism; may not necessarily allow scrolling through entire result set.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['posts'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              hitsTotal: {\n                type: 'integer',\n                description:\n                  'Count of search hits. Optional, may be rounded/truncated, and may not be possible to paginate through all hits.',\n              },\n              posts: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#postView',\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'BadQueryString',\n          },\n        ],\n      },\n    },\n  },\n  AppBskyFeedSendInteractions: {\n    lexicon: 1,\n    id: 'app.bsky.feed.sendInteractions',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Send information about interactions with feed items back to the feed generator that served them.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['interactions'],\n            properties: {\n              interactions: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#interaction',\n                },\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            properties: {},\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedThreadgate: {\n    lexicon: 1,\n    id: 'app.bsky.feed.threadgate',\n    defs: {\n      main: {\n        type: 'record',\n        key: 'tid',\n        description:\n          \"Record defining interaction gating rules for a thread (aka, reply controls). The record key (rkey) of the threadgate record must match the record key of the thread's root post, and that record must be in the same repository.\",\n        record: {\n          type: 'object',\n          required: ['post', 'createdAt'],\n          properties: {\n            post: {\n              type: 'string',\n              format: 'at-uri',\n              description: 'Reference (AT-URI) to the post record.',\n            },\n            allow: {\n              type: 'array',\n              maxLength: 5,\n              items: {\n                type: 'union',\n                refs: [\n                  'lex:app.bsky.feed.threadgate#mentionRule',\n                  'lex:app.bsky.feed.threadgate#followingRule',\n                  'lex:app.bsky.feed.threadgate#listRule',\n                ],\n              },\n            },\n            createdAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n            hiddenReplies: {\n              type: 'array',\n              maxLength: 50,\n              items: {\n                type: 'string',\n                format: 'at-uri',\n              },\n              description: 'List of hidden reply URIs.',\n            },\n          },\n        },\n      },\n      mentionRule: {\n        type: 'object',\n        description: 'Allow replies from actors mentioned in your post.',\n        properties: {},\n      },\n      followingRule: {\n        type: 'object',\n        description: 'Allow replies from actors you follow.',\n        properties: {},\n      },\n      listRule: {\n        type: 'object',\n        description: 'Allow replies from actors on a list.',\n        required: ['list'],\n        properties: {\n          list: {\n            type: 'string',\n            format: 'at-uri',\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphBlock: {\n    lexicon: 1,\n    id: 'app.bsky.graph.block',\n    defs: {\n      main: {\n        type: 'record',\n        description:\n          \"Record declaring a 'block' relationship against another account. NOTE: blocks are public in Bluesky; see blog posts for details.\",\n        key: 'tid',\n        record: {\n          type: 'object',\n          required: ['subject', 'createdAt'],\n          properties: {\n            subject: {\n              type: 'string',\n              format: 'did',\n              description: 'DID of the account to be blocked.',\n            },\n            createdAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphDefs: {\n    lexicon: 1,\n    id: 'app.bsky.graph.defs',\n    defs: {\n      listViewBasic: {\n        type: 'object',\n        required: ['uri', 'cid', 'name', 'purpose'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          name: {\n            type: 'string',\n            maxLength: 64,\n            minLength: 1,\n          },\n          purpose: {\n            type: 'ref',\n            ref: 'lex:app.bsky.graph.defs#listPurpose',\n          },\n          avatar: {\n            type: 'string',\n            format: 'uri',\n          },\n          listItemCount: {\n            type: 'integer',\n            minimum: 0,\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n          viewer: {\n            type: 'ref',\n            ref: 'lex:app.bsky.graph.defs#listViewerState',\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      listView: {\n        type: 'object',\n        required: ['uri', 'cid', 'creator', 'name', 'purpose', 'indexedAt'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          creator: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileView',\n          },\n          name: {\n            type: 'string',\n            maxLength: 64,\n            minLength: 1,\n          },\n          purpose: {\n            type: 'ref',\n            ref: 'lex:app.bsky.graph.defs#listPurpose',\n          },\n          description: {\n            type: 'string',\n            maxGraphemes: 300,\n            maxLength: 3000,\n          },\n          descriptionFacets: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:app.bsky.richtext.facet',\n            },\n          },\n          avatar: {\n            type: 'string',\n            format: 'uri',\n          },\n          listItemCount: {\n            type: 'integer',\n            minimum: 0,\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n          viewer: {\n            type: 'ref',\n            ref: 'lex:app.bsky.graph.defs#listViewerState',\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      listItemView: {\n        type: 'object',\n        required: ['uri', 'subject'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          subject: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileView',\n          },\n        },\n      },\n      starterPackView: {\n        type: 'object',\n        required: ['uri', 'cid', 'record', 'creator', 'indexedAt'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          record: {\n            type: 'unknown',\n          },\n          creator: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileViewBasic',\n          },\n          list: {\n            type: 'ref',\n            ref: 'lex:app.bsky.graph.defs#listViewBasic',\n          },\n          listItemsSample: {\n            type: 'array',\n            maxLength: 12,\n            items: {\n              type: 'ref',\n              ref: 'lex:app.bsky.graph.defs#listItemView',\n            },\n          },\n          feeds: {\n            type: 'array',\n            maxLength: 3,\n            items: {\n              type: 'ref',\n              ref: 'lex:app.bsky.feed.defs#generatorView',\n            },\n          },\n          joinedWeekCount: {\n            type: 'integer',\n            minimum: 0,\n          },\n          joinedAllTimeCount: {\n            type: 'integer',\n            minimum: 0,\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      starterPackViewBasic: {\n        type: 'object',\n        required: ['uri', 'cid', 'record', 'creator', 'indexedAt'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          record: {\n            type: 'unknown',\n          },\n          creator: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileViewBasic',\n          },\n          listItemCount: {\n            type: 'integer',\n            minimum: 0,\n          },\n          joinedWeekCount: {\n            type: 'integer',\n            minimum: 0,\n          },\n          joinedAllTimeCount: {\n            type: 'integer',\n            minimum: 0,\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      listPurpose: {\n        type: 'string',\n        knownValues: [\n          'app.bsky.graph.defs#modlist',\n          'app.bsky.graph.defs#curatelist',\n          'app.bsky.graph.defs#referencelist',\n        ],\n      },\n      modlist: {\n        type: 'token',\n        description:\n          'A list of actors to apply an aggregate moderation action (mute/block) on.',\n      },\n      curatelist: {\n        type: 'token',\n        description:\n          'A list of actors used for curation purposes such as list feeds or interaction gating.',\n      },\n      referencelist: {\n        type: 'token',\n        description:\n          'A list of actors used for only for reference purposes such as within a starter pack.',\n      },\n      listViewerState: {\n        type: 'object',\n        properties: {\n          muted: {\n            type: 'boolean',\n          },\n          blocked: {\n            type: 'string',\n            format: 'at-uri',\n          },\n        },\n      },\n      notFoundActor: {\n        type: 'object',\n        description: 'indicates that a handle or DID could not be resolved',\n        required: ['actor', 'notFound'],\n        properties: {\n          actor: {\n            type: 'string',\n            format: 'at-identifier',\n          },\n          notFound: {\n            type: 'boolean',\n            const: true,\n          },\n        },\n      },\n      relationship: {\n        type: 'object',\n        description:\n          'lists the bi-directional graph relationships between one actor (not indicated in the object), and the target actors (the DID included in the object)',\n        required: ['did'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          following: {\n            type: 'string',\n            format: 'at-uri',\n            description:\n              'if the actor follows this DID, this is the AT-URI of the follow record',\n          },\n          followedBy: {\n            type: 'string',\n            format: 'at-uri',\n            description:\n              'if the actor is followed by this DID, contains the AT-URI of the follow record',\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphFollow: {\n    lexicon: 1,\n    id: 'app.bsky.graph.follow',\n    defs: {\n      main: {\n        type: 'record',\n        description:\n          \"Record declaring a social 'follow' relationship of another account. Duplicate follows will be ignored by the AppView.\",\n        key: 'tid',\n        record: {\n          type: 'object',\n          required: ['subject', 'createdAt'],\n          properties: {\n            subject: {\n              type: 'string',\n              format: 'did',\n            },\n            createdAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphGetActorStarterPacks: {\n    lexicon: 1,\n    id: 'app.bsky.graph.getActorStarterPacks',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get a list of starter packs created by the actor.',\n        parameters: {\n          type: 'params',\n          required: ['actor'],\n          properties: {\n            actor: {\n              type: 'string',\n              format: 'at-identifier',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['starterPacks'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              starterPacks: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.graph.defs#starterPackViewBasic',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphGetBlocks: {\n    lexicon: 1,\n    id: 'app.bsky.graph.getBlocks',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Enumerates which accounts the requesting account is currently blocking. Requires auth.',\n        parameters: {\n          type: 'params',\n          properties: {\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['blocks'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              blocks: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.actor.defs#profileView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphGetFollowers: {\n    lexicon: 1,\n    id: 'app.bsky.graph.getFollowers',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Enumerates accounts which follow a specified account (actor).',\n        parameters: {\n          type: 'params',\n          required: ['actor'],\n          properties: {\n            actor: {\n              type: 'string',\n              format: 'at-identifier',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['subject', 'followers'],\n            properties: {\n              subject: {\n                type: 'ref',\n                ref: 'lex:app.bsky.actor.defs#profileView',\n              },\n              cursor: {\n                type: 'string',\n              },\n              followers: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.actor.defs#profileView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphGetFollows: {\n    lexicon: 1,\n    id: 'app.bsky.graph.getFollows',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Enumerates accounts which a specified account (actor) follows.',\n        parameters: {\n          type: 'params',\n          required: ['actor'],\n          properties: {\n            actor: {\n              type: 'string',\n              format: 'at-identifier',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['subject', 'follows'],\n            properties: {\n              subject: {\n                type: 'ref',\n                ref: 'lex:app.bsky.actor.defs#profileView',\n              },\n              cursor: {\n                type: 'string',\n              },\n              follows: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.actor.defs#profileView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphGetKnownFollowers: {\n    lexicon: 1,\n    id: 'app.bsky.graph.getKnownFollowers',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Enumerates accounts which follow a specified account (actor) and are followed by the viewer.',\n        parameters: {\n          type: 'params',\n          required: ['actor'],\n          properties: {\n            actor: {\n              type: 'string',\n              format: 'at-identifier',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['subject', 'followers'],\n            properties: {\n              subject: {\n                type: 'ref',\n                ref: 'lex:app.bsky.actor.defs#profileView',\n              },\n              cursor: {\n                type: 'string',\n              },\n              followers: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.actor.defs#profileView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphGetList: {\n    lexicon: 1,\n    id: 'app.bsky.graph.getList',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          \"Gets a 'view' (with additional context) of a specified list.\",\n        parameters: {\n          type: 'params',\n          required: ['list'],\n          properties: {\n            list: {\n              type: 'string',\n              format: 'at-uri',\n              description: 'Reference (AT-URI) of the list record to hydrate.',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['list', 'items'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              list: {\n                type: 'ref',\n                ref: 'lex:app.bsky.graph.defs#listView',\n              },\n              items: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.graph.defs#listItemView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphGetListBlocks: {\n    lexicon: 1,\n    id: 'app.bsky.graph.getListBlocks',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get mod lists that the requesting account (actor) is blocking. Requires auth.',\n        parameters: {\n          type: 'params',\n          properties: {\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['lists'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              lists: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.graph.defs#listView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphGetListMutes: {\n    lexicon: 1,\n    id: 'app.bsky.graph.getListMutes',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Enumerates mod lists that the requesting account (actor) currently has muted. Requires auth.',\n        parameters: {\n          type: 'params',\n          properties: {\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['lists'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              lists: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.graph.defs#listView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphGetLists: {\n    lexicon: 1,\n    id: 'app.bsky.graph.getLists',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Enumerates the lists created by a specified account (actor).',\n        parameters: {\n          type: 'params',\n          required: ['actor'],\n          properties: {\n            actor: {\n              type: 'string',\n              format: 'at-identifier',\n              description: 'The account (actor) to enumerate lists from.',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['lists'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              lists: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.graph.defs#listView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphGetMutes: {\n    lexicon: 1,\n    id: 'app.bsky.graph.getMutes',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Enumerates accounts that the requesting account (actor) currently has muted. Requires auth.',\n        parameters: {\n          type: 'params',\n          properties: {\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['mutes'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              mutes: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.actor.defs#profileView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphGetRelationships: {\n    lexicon: 1,\n    id: 'app.bsky.graph.getRelationships',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Enumerates public relationships between one account, and a list of other accounts. Does not require auth.',\n        parameters: {\n          type: 'params',\n          required: ['actor'],\n          properties: {\n            actor: {\n              type: 'string',\n              format: 'at-identifier',\n              description: 'Primary account requesting relationships for.',\n            },\n            others: {\n              type: 'array',\n              description:\n                \"List of 'other' accounts to be related back to the primary.\",\n              maxLength: 30,\n              items: {\n                type: 'string',\n                format: 'at-identifier',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['relationships'],\n            properties: {\n              actor: {\n                type: 'string',\n                format: 'did',\n              },\n              relationships: {\n                type: 'array',\n                items: {\n                  type: 'union',\n                  refs: [\n                    'lex:app.bsky.graph.defs#relationship',\n                    'lex:app.bsky.graph.defs#notFoundActor',\n                  ],\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'ActorNotFound',\n            description:\n              'the primary actor at-identifier could not be resolved',\n          },\n        ],\n      },\n    },\n  },\n  AppBskyGraphGetStarterPack: {\n    lexicon: 1,\n    id: 'app.bsky.graph.getStarterPack',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Gets a view of a starter pack.',\n        parameters: {\n          type: 'params',\n          required: ['starterPack'],\n          properties: {\n            starterPack: {\n              type: 'string',\n              format: 'at-uri',\n              description: 'Reference (AT-URI) of the starter pack record.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['starterPack'],\n            properties: {\n              starterPack: {\n                type: 'ref',\n                ref: 'lex:app.bsky.graph.defs#starterPackView',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphGetStarterPacks: {\n    lexicon: 1,\n    id: 'app.bsky.graph.getStarterPacks',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get views for a list of starter packs.',\n        parameters: {\n          type: 'params',\n          required: ['uris'],\n          properties: {\n            uris: {\n              type: 'array',\n              items: {\n                type: 'string',\n                format: 'at-uri',\n              },\n              maxLength: 25,\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['starterPacks'],\n            properties: {\n              starterPacks: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.graph.defs#starterPackViewBasic',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphGetSuggestedFollowsByActor: {\n    lexicon: 1,\n    id: 'app.bsky.graph.getSuggestedFollowsByActor',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Enumerates follows similar to a given account (actor). Expected use is to recommend additional accounts immediately after following one account.',\n        parameters: {\n          type: 'params',\n          required: ['actor'],\n          properties: {\n            actor: {\n              type: 'string',\n              format: 'at-identifier',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['suggestions'],\n            properties: {\n              suggestions: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.actor.defs#profileView',\n                },\n              },\n              isFallback: {\n                type: 'boolean',\n                description:\n                  'If true, response has fallen-back to generic results, and is not scoped using relativeToDid',\n                default: false,\n              },\n              recId: {\n                type: 'integer',\n                description:\n                  'Snowflake for this recommendation, use when submitting recommendation events.',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphList: {\n    lexicon: 1,\n    id: 'app.bsky.graph.list',\n    defs: {\n      main: {\n        type: 'record',\n        description:\n          'Record representing a list of accounts (actors). Scope includes both moderation-oriented lists and curration-oriented lists.',\n        key: 'tid',\n        record: {\n          type: 'object',\n          required: ['name', 'purpose', 'createdAt'],\n          properties: {\n            purpose: {\n              type: 'ref',\n              description:\n                'Defines the purpose of the list (aka, moderation-oriented or curration-oriented)',\n              ref: 'lex:app.bsky.graph.defs#listPurpose',\n            },\n            name: {\n              type: 'string',\n              maxLength: 64,\n              minLength: 1,\n              description: 'Display name for list; can not be empty.',\n            },\n            description: {\n              type: 'string',\n              maxGraphemes: 300,\n              maxLength: 3000,\n            },\n            descriptionFacets: {\n              type: 'array',\n              items: {\n                type: 'ref',\n                ref: 'lex:app.bsky.richtext.facet',\n              },\n            },\n            avatar: {\n              type: 'blob',\n              accept: ['image/png', 'image/jpeg'],\n              maxSize: 1000000,\n            },\n            labels: {\n              type: 'union',\n              refs: ['lex:com.atproto.label.defs#selfLabels'],\n            },\n            createdAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphListblock: {\n    lexicon: 1,\n    id: 'app.bsky.graph.listblock',\n    defs: {\n      main: {\n        type: 'record',\n        description:\n          'Record representing a block relationship against an entire an entire list of accounts (actors).',\n        key: 'tid',\n        record: {\n          type: 'object',\n          required: ['subject', 'createdAt'],\n          properties: {\n            subject: {\n              type: 'string',\n              format: 'at-uri',\n              description: 'Reference (AT-URI) to the mod list record.',\n            },\n            createdAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphListitem: {\n    lexicon: 1,\n    id: 'app.bsky.graph.listitem',\n    defs: {\n      main: {\n        type: 'record',\n        description:\n          \"Record representing an account's inclusion on a specific list. The AppView will ignore duplicate listitem records.\",\n        key: 'tid',\n        record: {\n          type: 'object',\n          required: ['subject', 'list', 'createdAt'],\n          properties: {\n            subject: {\n              type: 'string',\n              format: 'did',\n              description: 'The account which is included on the list.',\n            },\n            list: {\n              type: 'string',\n              format: 'at-uri',\n              description:\n                'Reference (AT-URI) to the list record (app.bsky.graph.list).',\n            },\n            createdAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphMuteActor: {\n    lexicon: 1,\n    id: 'app.bsky.graph.muteActor',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Creates a mute relationship for the specified account. Mutes are private in Bluesky. Requires auth.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['actor'],\n            properties: {\n              actor: {\n                type: 'string',\n                format: 'at-identifier',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphMuteActorList: {\n    lexicon: 1,\n    id: 'app.bsky.graph.muteActorList',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Creates a mute relationship for the specified list of accounts. Mutes are private in Bluesky. Requires auth.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['list'],\n            properties: {\n              list: {\n                type: 'string',\n                format: 'at-uri',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphMuteThread: {\n    lexicon: 1,\n    id: 'app.bsky.graph.muteThread',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Mutes a thread preventing notifications from the thread and any of its children. Mutes are private in Bluesky. Requires auth.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['root'],\n            properties: {\n              root: {\n                type: 'string',\n                format: 'at-uri',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphSearchStarterPacks: {\n    lexicon: 1,\n    id: 'app.bsky.graph.searchStarterPacks',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Find starter packs matching search criteria. Does not require auth.',\n        parameters: {\n          type: 'params',\n          required: ['q'],\n          properties: {\n            q: {\n              type: 'string',\n              description:\n                'Search query string. Syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended.',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 25,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['starterPacks'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              starterPacks: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.graph.defs#starterPackViewBasic',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphStarterpack: {\n    lexicon: 1,\n    id: 'app.bsky.graph.starterpack',\n    defs: {\n      main: {\n        type: 'record',\n        description:\n          'Record defining a starter pack of actors and feeds for new users.',\n        key: 'tid',\n        record: {\n          type: 'object',\n          required: ['name', 'list', 'createdAt'],\n          properties: {\n            name: {\n              type: 'string',\n              maxGraphemes: 50,\n              maxLength: 500,\n              minLength: 1,\n              description: 'Display name for starter pack; can not be empty.',\n            },\n            description: {\n              type: 'string',\n              maxGraphemes: 300,\n              maxLength: 3000,\n            },\n            descriptionFacets: {\n              type: 'array',\n              items: {\n                type: 'ref',\n                ref: 'lex:app.bsky.richtext.facet',\n              },\n            },\n            list: {\n              type: 'string',\n              format: 'at-uri',\n              description: 'Reference (AT-URI) to the list record.',\n            },\n            feeds: {\n              type: 'array',\n              maxLength: 3,\n              items: {\n                type: 'ref',\n                ref: 'lex:app.bsky.graph.starterpack#feedItem',\n              },\n            },\n            createdAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n      },\n      feedItem: {\n        type: 'object',\n        required: ['uri'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphUnmuteActor: {\n    lexicon: 1,\n    id: 'app.bsky.graph.unmuteActor',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Unmutes the specified account. Requires auth.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['actor'],\n            properties: {\n              actor: {\n                type: 'string',\n                format: 'at-identifier',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphUnmuteActorList: {\n    lexicon: 1,\n    id: 'app.bsky.graph.unmuteActorList',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Unmutes the specified list of accounts. Requires auth.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['list'],\n            properties: {\n              list: {\n                type: 'string',\n                format: 'at-uri',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphUnmuteThread: {\n    lexicon: 1,\n    id: 'app.bsky.graph.unmuteThread',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Unmutes the specified thread. Requires auth.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['root'],\n            properties: {\n              root: {\n                type: 'string',\n                format: 'at-uri',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyLabelerDefs: {\n    lexicon: 1,\n    id: 'app.bsky.labeler.defs',\n    defs: {\n      labelerView: {\n        type: 'object',\n        required: ['uri', 'cid', 'creator', 'indexedAt'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          creator: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileView',\n          },\n          likeCount: {\n            type: 'integer',\n            minimum: 0,\n          },\n          viewer: {\n            type: 'ref',\n            ref: 'lex:app.bsky.labeler.defs#labelerViewerState',\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n        },\n      },\n      labelerViewDetailed: {\n        type: 'object',\n        required: ['uri', 'cid', 'creator', 'policies', 'indexedAt'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          creator: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileView',\n          },\n          policies: {\n            type: 'ref',\n            ref: 'lex:app.bsky.labeler.defs#labelerPolicies',\n          },\n          likeCount: {\n            type: 'integer',\n            minimum: 0,\n          },\n          viewer: {\n            type: 'ref',\n            ref: 'lex:app.bsky.labeler.defs#labelerViewerState',\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n        },\n      },\n      labelerViewerState: {\n        type: 'object',\n        properties: {\n          like: {\n            type: 'string',\n            format: 'at-uri',\n          },\n        },\n      },\n      labelerPolicies: {\n        type: 'object',\n        required: ['labelValues'],\n        properties: {\n          labelValues: {\n            type: 'array',\n            description:\n              'The label values which this labeler publishes. May include global or custom labels.',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#labelValue',\n            },\n          },\n          labelValueDefinitions: {\n            type: 'array',\n            description:\n              'Label values created by this labeler and scoped exclusively to it. Labels defined here will override global label definitions for this labeler.',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#labelValueDefinition',\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyLabelerGetServices: {\n    lexicon: 1,\n    id: 'app.bsky.labeler.getServices',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get information about a list of labeler services.',\n        parameters: {\n          type: 'params',\n          required: ['dids'],\n          properties: {\n            dids: {\n              type: 'array',\n              items: {\n                type: 'string',\n                format: 'did',\n              },\n            },\n            detailed: {\n              type: 'boolean',\n              default: false,\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['views'],\n            properties: {\n              views: {\n                type: 'array',\n                items: {\n                  type: 'union',\n                  refs: [\n                    'lex:app.bsky.labeler.defs#labelerView',\n                    'lex:app.bsky.labeler.defs#labelerViewDetailed',\n                  ],\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyLabelerService: {\n    lexicon: 1,\n    id: 'app.bsky.labeler.service',\n    defs: {\n      main: {\n        type: 'record',\n        description: 'A declaration of the existence of labeler service.',\n        key: 'literal:self',\n        record: {\n          type: 'object',\n          required: ['policies', 'createdAt'],\n          properties: {\n            policies: {\n              type: 'ref',\n              ref: 'lex:app.bsky.labeler.defs#labelerPolicies',\n            },\n            labels: {\n              type: 'union',\n              refs: ['lex:com.atproto.label.defs#selfLabels'],\n            },\n            createdAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyNotificationGetUnreadCount: {\n    lexicon: 1,\n    id: 'app.bsky.notification.getUnreadCount',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Count the number of unread notifications for the requesting account. Requires auth.',\n        parameters: {\n          type: 'params',\n          properties: {\n            priority: {\n              type: 'boolean',\n            },\n            seenAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['count'],\n            properties: {\n              count: {\n                type: 'integer',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyNotificationListNotifications: {\n    lexicon: 1,\n    id: 'app.bsky.notification.listNotifications',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Enumerate notifications for the requesting account. Requires auth.',\n        parameters: {\n          type: 'params',\n          properties: {\n            reasons: {\n              description: 'Notification reasons to include in response.',\n              type: 'array',\n              items: {\n                type: 'string',\n                description:\n                  'A reason that matches the reason property of #notification.',\n              },\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            priority: {\n              type: 'boolean',\n            },\n            cursor: {\n              type: 'string',\n            },\n            seenAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['notifications'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              notifications: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.notification.listNotifications#notification',\n                },\n              },\n              priority: {\n                type: 'boolean',\n              },\n              seenAt: {\n                type: 'string',\n                format: 'datetime',\n              },\n            },\n          },\n        },\n      },\n      notification: {\n        type: 'object',\n        required: [\n          'uri',\n          'cid',\n          'author',\n          'reason',\n          'record',\n          'isRead',\n          'indexedAt',\n        ],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          author: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileView',\n          },\n          reason: {\n            type: 'string',\n            description:\n              \"Expected values are 'like', 'repost', 'follow', 'mention', 'reply', 'quote', and 'starterpack-joined'.\",\n            knownValues: [\n              'like',\n              'repost',\n              'follow',\n              'mention',\n              'reply',\n              'quote',\n              'starterpack-joined',\n            ],\n          },\n          reasonSubject: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          record: {\n            type: 'unknown',\n          },\n          isRead: {\n            type: 'boolean',\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyNotificationPutPreferences: {\n    lexicon: 1,\n    id: 'app.bsky.notification.putPreferences',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Set notification-related preferences for an account. Requires auth.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['priority'],\n            properties: {\n              priority: {\n                type: 'boolean',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyNotificationRegisterPush: {\n    lexicon: 1,\n    id: 'app.bsky.notification.registerPush',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Register to receive push notifications, via a specified service, for the requesting account. Requires auth.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['serviceDid', 'token', 'platform', 'appId'],\n            properties: {\n              serviceDid: {\n                type: 'string',\n                format: 'did',\n              },\n              token: {\n                type: 'string',\n              },\n              platform: {\n                type: 'string',\n                knownValues: ['ios', 'android', 'web'],\n              },\n              appId: {\n                type: 'string',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyNotificationUpdateSeen: {\n    lexicon: 1,\n    id: 'app.bsky.notification.updateSeen',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Notify server that the requesting account has seen notifications. Requires auth.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['seenAt'],\n            properties: {\n              seenAt: {\n                type: 'string',\n                format: 'datetime',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyRichtextFacet: {\n    lexicon: 1,\n    id: 'app.bsky.richtext.facet',\n    defs: {\n      main: {\n        type: 'object',\n        description: 'Annotation of a sub-string within rich text.',\n        required: ['index', 'features'],\n        properties: {\n          index: {\n            type: 'ref',\n            ref: 'lex:app.bsky.richtext.facet#byteSlice',\n          },\n          features: {\n            type: 'array',\n            items: {\n              type: 'union',\n              refs: [\n                'lex:app.bsky.richtext.facet#mention',\n                'lex:app.bsky.richtext.facet#link',\n                'lex:app.bsky.richtext.facet#tag',\n              ],\n            },\n          },\n        },\n      },\n      mention: {\n        type: 'object',\n        description:\n          \"Facet feature for mention of another account. The text is usually a handle, including a '@' prefix, but the facet reference is a DID.\",\n        required: ['did'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n        },\n      },\n      link: {\n        type: 'object',\n        description:\n          'Facet feature for a URL. The text URL may have been simplified or truncated, but the facet reference should be a complete URL.',\n        required: ['uri'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'uri',\n          },\n        },\n      },\n      tag: {\n        type: 'object',\n        description:\n          \"Facet feature for a hashtag. The text usually includes a '#' prefix, but the facet reference should not (except in the case of 'double hash tags').\",\n        required: ['tag'],\n        properties: {\n          tag: {\n            type: 'string',\n            maxLength: 640,\n            maxGraphemes: 64,\n          },\n        },\n      },\n      byteSlice: {\n        type: 'object',\n        description:\n          'Specifies the sub-string range a facet feature applies to. Start index is inclusive, end index is exclusive. Indices are zero-indexed, counting bytes of the UTF-8 encoded text. NOTE: some languages, like Javascript, use UTF-16 or Unicode codepoints for string slice indexing; in these languages, convert to byte arrays before working with facets.',\n        required: ['byteStart', 'byteEnd'],\n        properties: {\n          byteStart: {\n            type: 'integer',\n            minimum: 0,\n          },\n          byteEnd: {\n            type: 'integer',\n            minimum: 0,\n          },\n        },\n      },\n    },\n  },\n  AppBskyUnspeccedDefs: {\n    lexicon: 1,\n    id: 'app.bsky.unspecced.defs',\n    defs: {\n      skeletonSearchPost: {\n        type: 'object',\n        required: ['uri'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n        },\n      },\n      skeletonSearchActor: {\n        type: 'object',\n        required: ['did'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n        },\n      },\n      skeletonSearchStarterPack: {\n        type: 'object',\n        required: ['uri'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n        },\n      },\n      trendingTopic: {\n        type: 'object',\n        required: ['topic', 'link'],\n        properties: {\n          topic: {\n            type: 'string',\n          },\n          displayName: {\n            type: 'string',\n          },\n          description: {\n            type: 'string',\n          },\n          link: {\n            type: 'string',\n          },\n        },\n      },\n    },\n  },\n  AppBskyUnspeccedGetConfig: {\n    lexicon: 1,\n    id: 'app.bsky.unspecced.getConfig',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get miscellaneous runtime configuration.',\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: [],\n            properties: {\n              checkEmailConfirmed: {\n                type: 'boolean',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyUnspeccedGetPopularFeedGenerators: {\n    lexicon: 1,\n    id: 'app.bsky.unspecced.getPopularFeedGenerators',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'An unspecced view of globally popular feed generators.',\n        parameters: {\n          type: 'params',\n          properties: {\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n            query: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['feeds'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              feeds: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#generatorView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyUnspeccedGetSuggestionsSkeleton: {\n    lexicon: 1,\n    id: 'app.bsky.unspecced.getSuggestionsSkeleton',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get a skeleton of suggested actors. Intended to be called and then hydrated through app.bsky.actor.getSuggestions',\n        parameters: {\n          type: 'params',\n          properties: {\n            viewer: {\n              type: 'string',\n              format: 'did',\n              description:\n                'DID of the account making the request (not included for public/unauthenticated queries). Used to boost followed accounts in ranking.',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n            relativeToDid: {\n              type: 'string',\n              format: 'did',\n              description:\n                'DID of the account to get suggestions relative to. If not provided, suggestions will be based on the viewer.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['actors'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              actors: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.unspecced.defs#skeletonSearchActor',\n                },\n              },\n              relativeToDid: {\n                type: 'string',\n                format: 'did',\n                description:\n                  'DID of the account these suggestions are relative to. If this is returned undefined, suggestions are based on the viewer.',\n              },\n              recId: {\n                type: 'integer',\n                description:\n                  'Snowflake for this recommendation, use when submitting recommendation events.',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyUnspeccedGetTaggedSuggestions: {\n    lexicon: 1,\n    id: 'app.bsky.unspecced.getTaggedSuggestions',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get a list of suggestions (feeds and users) tagged with categories',\n        parameters: {\n          type: 'params',\n          properties: {},\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['suggestions'],\n            properties: {\n              suggestions: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.unspecced.getTaggedSuggestions#suggestion',\n                },\n              },\n            },\n          },\n        },\n      },\n      suggestion: {\n        type: 'object',\n        required: ['tag', 'subjectType', 'subject'],\n        properties: {\n          tag: {\n            type: 'string',\n          },\n          subjectType: {\n            type: 'string',\n            knownValues: ['actor', 'feed'],\n          },\n          subject: {\n            type: 'string',\n            format: 'uri',\n          },\n        },\n      },\n    },\n  },\n  AppBskyUnspeccedGetTrendingTopics: {\n    lexicon: 1,\n    id: 'app.bsky.unspecced.getTrendingTopics',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get a list of trending topics',\n        parameters: {\n          type: 'params',\n          properties: {\n            viewer: {\n              type: 'string',\n              format: 'did',\n              description:\n                'DID of the account making the request (not included for public/unauthenticated queries). Used to boost followed accounts in ranking.',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 25,\n              default: 10,\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['topics', 'suggested'],\n            properties: {\n              topics: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.unspecced.defs#trendingTopic',\n                },\n              },\n              suggested: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.unspecced.defs#trendingTopic',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyUnspeccedSearchActorsSkeleton: {\n    lexicon: 1,\n    id: 'app.bsky.unspecced.searchActorsSkeleton',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Backend Actors (profile) search, returns only skeleton.',\n        parameters: {\n          type: 'params',\n          required: ['q'],\n          properties: {\n            q: {\n              type: 'string',\n              description:\n                'Search query string; syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended. For typeahead search, only simple term match is supported, not full syntax.',\n            },\n            viewer: {\n              type: 'string',\n              format: 'did',\n              description:\n                'DID of the account making the request (not included for public/unauthenticated queries). Used to boost followed accounts in ranking.',\n            },\n            typeahead: {\n              type: 'boolean',\n              description: \"If true, acts as fast/simple 'typeahead' query.\",\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 25,\n            },\n            cursor: {\n              type: 'string',\n              description:\n                'Optional pagination mechanism; may not necessarily allow scrolling through entire result set.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['actors'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              hitsTotal: {\n                type: 'integer',\n                description:\n                  'Count of search hits. Optional, may be rounded/truncated, and may not be possible to paginate through all hits.',\n              },\n              actors: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.unspecced.defs#skeletonSearchActor',\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'BadQueryString',\n          },\n        ],\n      },\n    },\n  },\n  AppBskyUnspeccedSearchPostsSkeleton: {\n    lexicon: 1,\n    id: 'app.bsky.unspecced.searchPostsSkeleton',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Backend Posts search, returns only skeleton',\n        parameters: {\n          type: 'params',\n          required: ['q'],\n          properties: {\n            q: {\n              type: 'string',\n              description:\n                'Search query string; syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended.',\n            },\n            sort: {\n              type: 'string',\n              knownValues: ['top', 'latest'],\n              default: 'latest',\n              description: 'Specifies the ranking order of results.',\n            },\n            since: {\n              type: 'string',\n              description:\n                \"Filter results for posts after the indicated datetime (inclusive). Expected to use 'sortAt' timestamp, which may not match 'createdAt'. Can be a datetime, or just an ISO date (YYYY-MM-DD).\",\n            },\n            until: {\n              type: 'string',\n              description:\n                \"Filter results for posts before the indicated datetime (not inclusive). Expected to use 'sortAt' timestamp, which may not match 'createdAt'. Can be a datetime, or just an ISO date (YYY-MM-DD).\",\n            },\n            mentions: {\n              type: 'string',\n              format: 'at-identifier',\n              description:\n                'Filter to posts which mention the given account. Handles are resolved to DID before query-time. Only matches rich-text facet mentions.',\n            },\n            author: {\n              type: 'string',\n              format: 'at-identifier',\n              description:\n                'Filter to posts by the given account. Handles are resolved to DID before query-time.',\n            },\n            lang: {\n              type: 'string',\n              format: 'language',\n              description:\n                'Filter to posts in the given language. Expected to be based on post language field, though server may override language detection.',\n            },\n            domain: {\n              type: 'string',\n              description:\n                'Filter to posts with URLs (facet links or embeds) linking to the given domain (hostname). Server may apply hostname normalization.',\n            },\n            url: {\n              type: 'string',\n              format: 'uri',\n              description:\n                'Filter to posts with links (facet links or embeds) pointing to this URL. Server may apply URL normalization or fuzzy matching.',\n            },\n            tag: {\n              type: 'array',\n              items: {\n                type: 'string',\n                maxLength: 640,\n                maxGraphemes: 64,\n              },\n              description:\n                \"Filter to posts with the given tag (hashtag), based on rich-text facet or tag field. Do not include the hash (#) prefix. Multiple tags can be specified, with 'AND' matching.\",\n            },\n            viewer: {\n              type: 'string',\n              format: 'did',\n              description:\n                \"DID of the account making the request (not included for public/unauthenticated queries). Used for 'from:me' queries.\",\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 25,\n            },\n            cursor: {\n              type: 'string',\n              description:\n                'Optional pagination mechanism; may not necessarily allow scrolling through entire result set.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['posts'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              hitsTotal: {\n                type: 'integer',\n                description:\n                  'Count of search hits. Optional, may be rounded/truncated, and may not be possible to paginate through all hits.',\n              },\n              posts: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.unspecced.defs#skeletonSearchPost',\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'BadQueryString',\n          },\n        ],\n      },\n    },\n  },\n  AppBskyUnspeccedSearchStarterPacksSkeleton: {\n    lexicon: 1,\n    id: 'app.bsky.unspecced.searchStarterPacksSkeleton',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Backend Starter Pack search, returns only skeleton.',\n        parameters: {\n          type: 'params',\n          required: ['q'],\n          properties: {\n            q: {\n              type: 'string',\n              description:\n                'Search query string; syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended.',\n            },\n            viewer: {\n              type: 'string',\n              format: 'did',\n              description:\n                'DID of the account making the request (not included for public/unauthenticated queries).',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 25,\n            },\n            cursor: {\n              type: 'string',\n              description:\n                'Optional pagination mechanism; may not necessarily allow scrolling through entire result set.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['starterPacks'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              hitsTotal: {\n                type: 'integer',\n                description:\n                  'Count of search hits. Optional, may be rounded/truncated, and may not be possible to paginate through all hits.',\n              },\n              starterPacks: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.unspecced.defs#skeletonSearchStarterPack',\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'BadQueryString',\n          },\n        ],\n      },\n    },\n  },\n  AppBskyVideoDefs: {\n    lexicon: 1,\n    id: 'app.bsky.video.defs',\n    defs: {\n      jobStatus: {\n        type: 'object',\n        required: ['jobId', 'did', 'state'],\n        properties: {\n          jobId: {\n            type: 'string',\n          },\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          state: {\n            type: 'string',\n            description:\n              'The state of the video processing job. All values not listed as a known value indicate that the job is in process.',\n            knownValues: ['JOB_STATE_COMPLETED', 'JOB_STATE_FAILED'],\n          },\n          progress: {\n            type: 'integer',\n            minimum: 0,\n            maximum: 100,\n            description: 'Progress within the current processing state.',\n          },\n          blob: {\n            type: 'blob',\n          },\n          error: {\n            type: 'string',\n          },\n          message: {\n            type: 'string',\n          },\n        },\n      },\n    },\n  },\n  AppBskyVideoGetJobStatus: {\n    lexicon: 1,\n    id: 'app.bsky.video.getJobStatus',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get status details for a video processing job.',\n        parameters: {\n          type: 'params',\n          required: ['jobId'],\n          properties: {\n            jobId: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['jobStatus'],\n            properties: {\n              jobStatus: {\n                type: 'ref',\n                ref: 'lex:app.bsky.video.defs#jobStatus',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyVideoGetUploadLimits: {\n    lexicon: 1,\n    id: 'app.bsky.video.getUploadLimits',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get video upload limits for the authenticated user.',\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['canUpload'],\n            properties: {\n              canUpload: {\n                type: 'boolean',\n              },\n              remainingDailyVideos: {\n                type: 'integer',\n              },\n              remainingDailyBytes: {\n                type: 'integer',\n              },\n              message: {\n                type: 'string',\n              },\n              error: {\n                type: 'string',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyVideoUploadVideo: {\n    lexicon: 1,\n    id: 'app.bsky.video.uploadVideo',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Upload a video to be processed then stored on the PDS.',\n        input: {\n          encoding: 'video/mp4',\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['jobStatus'],\n            properties: {\n              jobStatus: {\n                type: 'ref',\n                ref: 'lex:app.bsky.video.defs#jobStatus',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ChatBskyActorDeclaration: {\n    lexicon: 1,\n    id: 'chat.bsky.actor.declaration',\n    defs: {\n      main: {\n        type: 'record',\n        description: 'A declaration of a Bluesky chat account.',\n        key: 'literal:self',\n        record: {\n          type: 'object',\n          required: ['allowIncoming'],\n          properties: {\n            allowIncoming: {\n              type: 'string',\n              knownValues: ['all', 'none', 'following'],\n            },\n          },\n        },\n      },\n    },\n  },\n  ChatBskyActorDefs: {\n    lexicon: 1,\n    id: 'chat.bsky.actor.defs',\n    defs: {\n      profileViewBasic: {\n        type: 'object',\n        required: ['did', 'handle'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          handle: {\n            type: 'string',\n            format: 'handle',\n          },\n          displayName: {\n            type: 'string',\n            maxGraphemes: 64,\n            maxLength: 640,\n          },\n          avatar: {\n            type: 'string',\n            format: 'uri',\n          },\n          associated: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileAssociated',\n          },\n          viewer: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#viewerState',\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n          chatDisabled: {\n            type: 'boolean',\n            description:\n              'Set to true when the actor cannot actively participate in converations',\n          },\n        },\n      },\n    },\n  },\n  ChatBskyActorDeleteAccount: {\n    lexicon: 1,\n    id: 'chat.bsky.actor.deleteAccount',\n    defs: {\n      main: {\n        type: 'procedure',\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            properties: {},\n          },\n        },\n      },\n    },\n  },\n  ChatBskyActorExportAccountData: {\n    lexicon: 1,\n    id: 'chat.bsky.actor.exportAccountData',\n    defs: {\n      main: {\n        type: 'query',\n        output: {\n          encoding: 'application/jsonl',\n        },\n      },\n    },\n  },\n  ChatBskyConvoDefs: {\n    lexicon: 1,\n    id: 'chat.bsky.convo.defs',\n    defs: {\n      messageRef: {\n        type: 'object',\n        required: ['did', 'messageId', 'convoId'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          convoId: {\n            type: 'string',\n          },\n          messageId: {\n            type: 'string',\n          },\n        },\n      },\n      messageInput: {\n        type: 'object',\n        required: ['text'],\n        properties: {\n          text: {\n            type: 'string',\n            maxLength: 10000,\n            maxGraphemes: 1000,\n          },\n          facets: {\n            type: 'array',\n            description: 'Annotations of text (mentions, URLs, hashtags, etc)',\n            items: {\n              type: 'ref',\n              ref: 'lex:app.bsky.richtext.facet',\n            },\n          },\n          embed: {\n            type: 'union',\n            refs: ['lex:app.bsky.embed.record'],\n          },\n        },\n      },\n      messageView: {\n        type: 'object',\n        required: ['id', 'rev', 'text', 'sender', 'sentAt'],\n        properties: {\n          id: {\n            type: 'string',\n          },\n          rev: {\n            type: 'string',\n          },\n          text: {\n            type: 'string',\n            maxLength: 10000,\n            maxGraphemes: 1000,\n          },\n          facets: {\n            type: 'array',\n            description: 'Annotations of text (mentions, URLs, hashtags, etc)',\n            items: {\n              type: 'ref',\n              ref: 'lex:app.bsky.richtext.facet',\n            },\n          },\n          embed: {\n            type: 'union',\n            refs: ['lex:app.bsky.embed.record#view'],\n          },\n          sender: {\n            type: 'ref',\n            ref: 'lex:chat.bsky.convo.defs#messageViewSender',\n          },\n          sentAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      deletedMessageView: {\n        type: 'object',\n        required: ['id', 'rev', 'sender', 'sentAt'],\n        properties: {\n          id: {\n            type: 'string',\n          },\n          rev: {\n            type: 'string',\n          },\n          sender: {\n            type: 'ref',\n            ref: 'lex:chat.bsky.convo.defs#messageViewSender',\n          },\n          sentAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      messageViewSender: {\n        type: 'object',\n        required: ['did'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n        },\n      },\n      convoView: {\n        type: 'object',\n        required: ['id', 'rev', 'members', 'muted', 'unreadCount'],\n        properties: {\n          id: {\n            type: 'string',\n          },\n          rev: {\n            type: 'string',\n          },\n          members: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:chat.bsky.actor.defs#profileViewBasic',\n            },\n          },\n          lastMessage: {\n            type: 'union',\n            refs: [\n              'lex:chat.bsky.convo.defs#messageView',\n              'lex:chat.bsky.convo.defs#deletedMessageView',\n            ],\n          },\n          muted: {\n            type: 'boolean',\n          },\n          opened: {\n            type: 'boolean',\n          },\n          unreadCount: {\n            type: 'integer',\n          },\n        },\n      },\n      logBeginConvo: {\n        type: 'object',\n        required: ['rev', 'convoId'],\n        properties: {\n          rev: {\n            type: 'string',\n          },\n          convoId: {\n            type: 'string',\n          },\n        },\n      },\n      logLeaveConvo: {\n        type: 'object',\n        required: ['rev', 'convoId'],\n        properties: {\n          rev: {\n            type: 'string',\n          },\n          convoId: {\n            type: 'string',\n          },\n        },\n      },\n      logCreateMessage: {\n        type: 'object',\n        required: ['rev', 'convoId', 'message'],\n        properties: {\n          rev: {\n            type: 'string',\n          },\n          convoId: {\n            type: 'string',\n          },\n          message: {\n            type: 'union',\n            refs: [\n              'lex:chat.bsky.convo.defs#messageView',\n              'lex:chat.bsky.convo.defs#deletedMessageView',\n            ],\n          },\n        },\n      },\n      logDeleteMessage: {\n        type: 'object',\n        required: ['rev', 'convoId', 'message'],\n        properties: {\n          rev: {\n            type: 'string',\n          },\n          convoId: {\n            type: 'string',\n          },\n          message: {\n            type: 'union',\n            refs: [\n              'lex:chat.bsky.convo.defs#messageView',\n              'lex:chat.bsky.convo.defs#deletedMessageView',\n            ],\n          },\n        },\n      },\n    },\n  },\n  ChatBskyConvoDeleteMessageForSelf: {\n    lexicon: 1,\n    id: 'chat.bsky.convo.deleteMessageForSelf',\n    defs: {\n      main: {\n        type: 'procedure',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['convoId', 'messageId'],\n            properties: {\n              convoId: {\n                type: 'string',\n              },\n              messageId: {\n                type: 'string',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'ref',\n            ref: 'lex:chat.bsky.convo.defs#deletedMessageView',\n          },\n        },\n      },\n    },\n  },\n  ChatBskyConvoGetConvo: {\n    lexicon: 1,\n    id: 'chat.bsky.convo.getConvo',\n    defs: {\n      main: {\n        type: 'query',\n        parameters: {\n          type: 'params',\n          required: ['convoId'],\n          properties: {\n            convoId: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['convo'],\n            properties: {\n              convo: {\n                type: 'ref',\n                ref: 'lex:chat.bsky.convo.defs#convoView',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ChatBskyConvoGetConvoForMembers: {\n    lexicon: 1,\n    id: 'chat.bsky.convo.getConvoForMembers',\n    defs: {\n      main: {\n        type: 'query',\n        parameters: {\n          type: 'params',\n          required: ['members'],\n          properties: {\n            members: {\n              type: 'array',\n              minLength: 1,\n              maxLength: 10,\n              items: {\n                type: 'string',\n                format: 'did',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['convo'],\n            properties: {\n              convo: {\n                type: 'ref',\n                ref: 'lex:chat.bsky.convo.defs#convoView',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ChatBskyConvoGetLog: {\n    lexicon: 1,\n    id: 'chat.bsky.convo.getLog',\n    defs: {\n      main: {\n        type: 'query',\n        parameters: {\n          type: 'params',\n          required: [],\n          properties: {\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['logs'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              logs: {\n                type: 'array',\n                items: {\n                  type: 'union',\n                  refs: [\n                    'lex:chat.bsky.convo.defs#logBeginConvo',\n                    'lex:chat.bsky.convo.defs#logLeaveConvo',\n                    'lex:chat.bsky.convo.defs#logCreateMessage',\n                    'lex:chat.bsky.convo.defs#logDeleteMessage',\n                  ],\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ChatBskyConvoGetMessages: {\n    lexicon: 1,\n    id: 'chat.bsky.convo.getMessages',\n    defs: {\n      main: {\n        type: 'query',\n        parameters: {\n          type: 'params',\n          required: ['convoId'],\n          properties: {\n            convoId: {\n              type: 'string',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['messages'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              messages: {\n                type: 'array',\n                items: {\n                  type: 'union',\n                  refs: [\n                    'lex:chat.bsky.convo.defs#messageView',\n                    'lex:chat.bsky.convo.defs#deletedMessageView',\n                  ],\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ChatBskyConvoLeaveConvo: {\n    lexicon: 1,\n    id: 'chat.bsky.convo.leaveConvo',\n    defs: {\n      main: {\n        type: 'procedure',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['convoId'],\n            properties: {\n              convoId: {\n                type: 'string',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['convoId', 'rev'],\n            properties: {\n              convoId: {\n                type: 'string',\n              },\n              rev: {\n                type: 'string',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ChatBskyConvoListConvos: {\n    lexicon: 1,\n    id: 'chat.bsky.convo.listConvos',\n    defs: {\n      main: {\n        type: 'query',\n        parameters: {\n          type: 'params',\n          properties: {\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['convos'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              convos: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:chat.bsky.convo.defs#convoView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ChatBskyConvoMuteConvo: {\n    lexicon: 1,\n    id: 'chat.bsky.convo.muteConvo',\n    defs: {\n      main: {\n        type: 'procedure',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['convoId'],\n            properties: {\n              convoId: {\n                type: 'string',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['convo'],\n            properties: {\n              convo: {\n                type: 'ref',\n                ref: 'lex:chat.bsky.convo.defs#convoView',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ChatBskyConvoSendMessage: {\n    lexicon: 1,\n    id: 'chat.bsky.convo.sendMessage',\n    defs: {\n      main: {\n        type: 'procedure',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['convoId', 'message'],\n            properties: {\n              convoId: {\n                type: 'string',\n              },\n              message: {\n                type: 'ref',\n                ref: 'lex:chat.bsky.convo.defs#messageInput',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'ref',\n            ref: 'lex:chat.bsky.convo.defs#messageView',\n          },\n        },\n      },\n    },\n  },\n  ChatBskyConvoSendMessageBatch: {\n    lexicon: 1,\n    id: 'chat.bsky.convo.sendMessageBatch',\n    defs: {\n      main: {\n        type: 'procedure',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['items'],\n            properties: {\n              items: {\n                type: 'array',\n                maxLength: 100,\n                items: {\n                  type: 'ref',\n                  ref: 'lex:chat.bsky.convo.sendMessageBatch#batchItem',\n                },\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['items'],\n            properties: {\n              items: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:chat.bsky.convo.defs#messageView',\n                },\n              },\n            },\n          },\n        },\n      },\n      batchItem: {\n        type: 'object',\n        required: ['convoId', 'message'],\n        properties: {\n          convoId: {\n            type: 'string',\n          },\n          message: {\n            type: 'ref',\n            ref: 'lex:chat.bsky.convo.defs#messageInput',\n          },\n        },\n      },\n    },\n  },\n  ChatBskyConvoUnmuteConvo: {\n    lexicon: 1,\n    id: 'chat.bsky.convo.unmuteConvo',\n    defs: {\n      main: {\n        type: 'procedure',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['convoId'],\n            properties: {\n              convoId: {\n                type: 'string',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['convo'],\n            properties: {\n              convo: {\n                type: 'ref',\n                ref: 'lex:chat.bsky.convo.defs#convoView',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ChatBskyConvoUpdateRead: {\n    lexicon: 1,\n    id: 'chat.bsky.convo.updateRead',\n    defs: {\n      main: {\n        type: 'procedure',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['convoId'],\n            properties: {\n              convoId: {\n                type: 'string',\n              },\n              messageId: {\n                type: 'string',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['convo'],\n            properties: {\n              convo: {\n                type: 'ref',\n                ref: 'lex:chat.bsky.convo.defs#convoView',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ChatBskyModerationGetActorMetadata: {\n    lexicon: 1,\n    id: 'chat.bsky.moderation.getActorMetadata',\n    defs: {\n      main: {\n        type: 'query',\n        parameters: {\n          type: 'params',\n          required: ['actor'],\n          properties: {\n            actor: {\n              type: 'string',\n              format: 'did',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['day', 'month', 'all'],\n            properties: {\n              day: {\n                type: 'ref',\n                ref: 'lex:chat.bsky.moderation.getActorMetadata#metadata',\n              },\n              month: {\n                type: 'ref',\n                ref: 'lex:chat.bsky.moderation.getActorMetadata#metadata',\n              },\n              all: {\n                type: 'ref',\n                ref: 'lex:chat.bsky.moderation.getActorMetadata#metadata',\n              },\n            },\n          },\n        },\n      },\n      metadata: {\n        type: 'object',\n        required: [\n          'messagesSent',\n          'messagesReceived',\n          'convos',\n          'convosStarted',\n        ],\n        properties: {\n          messagesSent: {\n            type: 'integer',\n          },\n          messagesReceived: {\n            type: 'integer',\n          },\n          convos: {\n            type: 'integer',\n          },\n          convosStarted: {\n            type: 'integer',\n          },\n        },\n      },\n    },\n  },\n  ChatBskyModerationGetMessageContext: {\n    lexicon: 1,\n    id: 'chat.bsky.moderation.getMessageContext',\n    defs: {\n      main: {\n        type: 'query',\n        parameters: {\n          type: 'params',\n          required: ['messageId'],\n          properties: {\n            convoId: {\n              type: 'string',\n              description:\n                'Conversation that the message is from. NOTE: this field will eventually be required.',\n            },\n            messageId: {\n              type: 'string',\n            },\n            before: {\n              type: 'integer',\n              default: 5,\n            },\n            after: {\n              type: 'integer',\n              default: 5,\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['messages'],\n            properties: {\n              messages: {\n                type: 'array',\n                items: {\n                  type: 'union',\n                  refs: [\n                    'lex:chat.bsky.convo.defs#messageView',\n                    'lex:chat.bsky.convo.defs#deletedMessageView',\n                  ],\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ChatBskyModerationUpdateActorAccess: {\n    lexicon: 1,\n    id: 'chat.bsky.moderation.updateActorAccess',\n    defs: {\n      main: {\n        type: 'procedure',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['actor', 'allowAccess'],\n            properties: {\n              actor: {\n                type: 'string',\n                format: 'did',\n              },\n              allowAccess: {\n                type: 'boolean',\n              },\n              ref: {\n                type: 'string',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ToolsOzoneCommunicationCreateTemplate: {\n    lexicon: 1,\n    id: 'tools.ozone.communication.createTemplate',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Administrative action to create a new, re-usable communication (email for now) template.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['subject', 'contentMarkdown', 'name'],\n            properties: {\n              name: {\n                type: 'string',\n                description: 'Name of the template.',\n              },\n              contentMarkdown: {\n                type: 'string',\n                description:\n                  'Content of the template, markdown supported, can contain variable placeholders.',\n              },\n              subject: {\n                type: 'string',\n                description: 'Subject of the message, used in emails.',\n              },\n              lang: {\n                type: 'string',\n                format: 'language',\n                description: 'Message language.',\n              },\n              createdBy: {\n                type: 'string',\n                format: 'did',\n                description: 'DID of the user who is creating the template.',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'ref',\n            ref: 'lex:tools.ozone.communication.defs#templateView',\n          },\n        },\n        errors: [\n          {\n            name: 'DuplicateTemplateName',\n          },\n        ],\n      },\n    },\n  },\n  ToolsOzoneCommunicationDefs: {\n    lexicon: 1,\n    id: 'tools.ozone.communication.defs',\n    defs: {\n      templateView: {\n        type: 'object',\n        required: [\n          'id',\n          'name',\n          'contentMarkdown',\n          'disabled',\n          'lastUpdatedBy',\n          'createdAt',\n          'updatedAt',\n        ],\n        properties: {\n          id: {\n            type: 'string',\n          },\n          name: {\n            type: 'string',\n            description: 'Name of the template.',\n          },\n          subject: {\n            type: 'string',\n            description:\n              'Content of the template, can contain markdown and variable placeholders.',\n          },\n          contentMarkdown: {\n            type: 'string',\n            description: 'Subject of the message, used in emails.',\n          },\n          disabled: {\n            type: 'boolean',\n          },\n          lang: {\n            type: 'string',\n            format: 'language',\n            description: 'Message language.',\n          },\n          lastUpdatedBy: {\n            type: 'string',\n            format: 'did',\n            description: 'DID of the user who last updated the template.',\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          updatedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n    },\n  },\n  ToolsOzoneCommunicationDeleteTemplate: {\n    lexicon: 1,\n    id: 'tools.ozone.communication.deleteTemplate',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Delete a communication template.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['id'],\n            properties: {\n              id: {\n                type: 'string',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ToolsOzoneCommunicationListTemplates: {\n    lexicon: 1,\n    id: 'tools.ozone.communication.listTemplates',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get list of all communication templates.',\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['communicationTemplates'],\n            properties: {\n              communicationTemplates: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:tools.ozone.communication.defs#templateView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ToolsOzoneCommunicationUpdateTemplate: {\n    lexicon: 1,\n    id: 'tools.ozone.communication.updateTemplate',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Administrative action to update an existing communication template. Allows passing partial fields to patch specific fields only.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['id'],\n            properties: {\n              id: {\n                type: 'string',\n                description: 'ID of the template to be updated.',\n              },\n              name: {\n                type: 'string',\n                description: 'Name of the template.',\n              },\n              lang: {\n                type: 'string',\n                format: 'language',\n                description: 'Message language.',\n              },\n              contentMarkdown: {\n                type: 'string',\n                description:\n                  'Content of the template, markdown supported, can contain variable placeholders.',\n              },\n              subject: {\n                type: 'string',\n                description: 'Subject of the message, used in emails.',\n              },\n              updatedBy: {\n                type: 'string',\n                format: 'did',\n                description: 'DID of the user who is updating the template.',\n              },\n              disabled: {\n                type: 'boolean',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'ref',\n            ref: 'lex:tools.ozone.communication.defs#templateView',\n          },\n        },\n        errors: [\n          {\n            name: 'DuplicateTemplateName',\n          },\n        ],\n      },\n    },\n  },\n  ToolsOzoneModerationDefs: {\n    lexicon: 1,\n    id: 'tools.ozone.moderation.defs',\n    defs: {\n      modEventView: {\n        type: 'object',\n        required: [\n          'id',\n          'event',\n          'subject',\n          'subjectBlobCids',\n          'createdBy',\n          'createdAt',\n        ],\n        properties: {\n          id: {\n            type: 'integer',\n          },\n          event: {\n            type: 'union',\n            refs: [\n              'lex:tools.ozone.moderation.defs#modEventTakedown',\n              'lex:tools.ozone.moderation.defs#modEventReverseTakedown',\n              'lex:tools.ozone.moderation.defs#modEventComment',\n              'lex:tools.ozone.moderation.defs#modEventReport',\n              'lex:tools.ozone.moderation.defs#modEventLabel',\n              'lex:tools.ozone.moderation.defs#modEventAcknowledge',\n              'lex:tools.ozone.moderation.defs#modEventEscalate',\n              'lex:tools.ozone.moderation.defs#modEventMute',\n              'lex:tools.ozone.moderation.defs#modEventUnmute',\n              'lex:tools.ozone.moderation.defs#modEventMuteReporter',\n              'lex:tools.ozone.moderation.defs#modEventUnmuteReporter',\n              'lex:tools.ozone.moderation.defs#modEventEmail',\n              'lex:tools.ozone.moderation.defs#modEventResolveAppeal',\n              'lex:tools.ozone.moderation.defs#modEventDivert',\n              'lex:tools.ozone.moderation.defs#modEventTag',\n              'lex:tools.ozone.moderation.defs#accountEvent',\n              'lex:tools.ozone.moderation.defs#identityEvent',\n              'lex:tools.ozone.moderation.defs#recordEvent',\n            ],\n          },\n          subject: {\n            type: 'union',\n            refs: [\n              'lex:com.atproto.admin.defs#repoRef',\n              'lex:com.atproto.repo.strongRef',\n              'lex:chat.bsky.convo.defs#messageRef',\n            ],\n          },\n          subjectBlobCids: {\n            type: 'array',\n            items: {\n              type: 'string',\n            },\n          },\n          createdBy: {\n            type: 'string',\n            format: 'did',\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          creatorHandle: {\n            type: 'string',\n          },\n          subjectHandle: {\n            type: 'string',\n          },\n        },\n      },\n      modEventViewDetail: {\n        type: 'object',\n        required: [\n          'id',\n          'event',\n          'subject',\n          'subjectBlobs',\n          'createdBy',\n          'createdAt',\n        ],\n        properties: {\n          id: {\n            type: 'integer',\n          },\n          event: {\n            type: 'union',\n            refs: [\n              'lex:tools.ozone.moderation.defs#modEventTakedown',\n              'lex:tools.ozone.moderation.defs#modEventReverseTakedown',\n              'lex:tools.ozone.moderation.defs#modEventComment',\n              'lex:tools.ozone.moderation.defs#modEventReport',\n              'lex:tools.ozone.moderation.defs#modEventLabel',\n              'lex:tools.ozone.moderation.defs#modEventAcknowledge',\n              'lex:tools.ozone.moderation.defs#modEventEscalate',\n              'lex:tools.ozone.moderation.defs#modEventMute',\n              'lex:tools.ozone.moderation.defs#modEventUnmute',\n              'lex:tools.ozone.moderation.defs#modEventMuteReporter',\n              'lex:tools.ozone.moderation.defs#modEventUnmuteReporter',\n              'lex:tools.ozone.moderation.defs#modEventEmail',\n              'lex:tools.ozone.moderation.defs#modEventResolveAppeal',\n              'lex:tools.ozone.moderation.defs#modEventDivert',\n              'lex:tools.ozone.moderation.defs#modEventTag',\n              'lex:tools.ozone.moderation.defs#accountEvent',\n              'lex:tools.ozone.moderation.defs#identityEvent',\n              'lex:tools.ozone.moderation.defs#recordEvent',\n            ],\n          },\n          subject: {\n            type: 'union',\n            refs: [\n              'lex:tools.ozone.moderation.defs#repoView',\n              'lex:tools.ozone.moderation.defs#repoViewNotFound',\n              'lex:tools.ozone.moderation.defs#recordView',\n              'lex:tools.ozone.moderation.defs#recordViewNotFound',\n            ],\n          },\n          subjectBlobs: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:tools.ozone.moderation.defs#blobView',\n            },\n          },\n          createdBy: {\n            type: 'string',\n            format: 'did',\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      subjectStatusView: {\n        type: 'object',\n        required: ['id', 'subject', 'createdAt', 'updatedAt', 'reviewState'],\n        properties: {\n          id: {\n            type: 'integer',\n          },\n          subject: {\n            type: 'union',\n            refs: [\n              'lex:com.atproto.admin.defs#repoRef',\n              'lex:com.atproto.repo.strongRef',\n            ],\n          },\n          hosting: {\n            type: 'union',\n            refs: [\n              'lex:tools.ozone.moderation.defs#accountHosting',\n              'lex:tools.ozone.moderation.defs#recordHosting',\n            ],\n          },\n          subjectBlobCids: {\n            type: 'array',\n            items: {\n              type: 'string',\n              format: 'cid',\n            },\n          },\n          subjectRepoHandle: {\n            type: 'string',\n          },\n          updatedAt: {\n            type: 'string',\n            format: 'datetime',\n            description:\n              'Timestamp referencing when the last update was made to the moderation status of the subject',\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n            description:\n              'Timestamp referencing the first moderation status impacting event was emitted on the subject',\n          },\n          reviewState: {\n            type: 'ref',\n            ref: 'lex:tools.ozone.moderation.defs#subjectReviewState',\n          },\n          comment: {\n            type: 'string',\n            description: 'Sticky comment on the subject.',\n          },\n          muteUntil: {\n            type: 'string',\n            format: 'datetime',\n          },\n          muteReportingUntil: {\n            type: 'string',\n            format: 'datetime',\n          },\n          lastReviewedBy: {\n            type: 'string',\n            format: 'did',\n          },\n          lastReviewedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          lastReportedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          lastAppealedAt: {\n            type: 'string',\n            format: 'datetime',\n            description:\n              'Timestamp referencing when the author of the subject appealed a moderation action',\n          },\n          takendown: {\n            type: 'boolean',\n          },\n          appealed: {\n            type: 'boolean',\n            description:\n              'True indicates that the a previously taken moderator action was appealed against, by the author of the content. False indicates last appeal was resolved by moderators.',\n          },\n          suspendUntil: {\n            type: 'string',\n            format: 'datetime',\n          },\n          tags: {\n            type: 'array',\n            items: {\n              type: 'string',\n            },\n          },\n        },\n      },\n      subjectReviewState: {\n        type: 'string',\n        knownValues: [\n          'lex:tools.ozone.moderation.defs#reviewOpen',\n          'lex:tools.ozone.moderation.defs#reviewEscalated',\n          'lex:tools.ozone.moderation.defs#reviewClosed',\n          'lex:tools.ozone.moderation.defs#reviewNone',\n        ],\n      },\n      reviewOpen: {\n        type: 'token',\n        description:\n          'Moderator review status of a subject: Open. Indicates that the subject needs to be reviewed by a moderator',\n      },\n      reviewEscalated: {\n        type: 'token',\n        description:\n          'Moderator review status of a subject: Escalated. Indicates that the subject was escalated for review by a moderator',\n      },\n      reviewClosed: {\n        type: 'token',\n        description:\n          'Moderator review status of a subject: Closed. Indicates that the subject was already reviewed and resolved by a moderator',\n      },\n      reviewNone: {\n        type: 'token',\n        description:\n          'Moderator review status of a subject: Unnecessary. Indicates that the subject does not need a review at the moment but there is probably some moderation related metadata available for it',\n      },\n      modEventTakedown: {\n        type: 'object',\n        description: 'Take down a subject permanently or temporarily',\n        properties: {\n          comment: {\n            type: 'string',\n          },\n          durationInHours: {\n            type: 'integer',\n            description:\n              'Indicates how long the takedown should be in effect before automatically expiring.',\n          },\n          acknowledgeAccountSubjects: {\n            type: 'boolean',\n            description:\n              'If true, all other reports on content authored by this account will be resolved (acknowledged).',\n          },\n          policies: {\n            type: 'array',\n            maxLength: 5,\n            items: {\n              type: 'string',\n            },\n            description:\n              'Names/Keywords of the policies that drove the decision.',\n          },\n        },\n      },\n      modEventReverseTakedown: {\n        type: 'object',\n        description: 'Revert take down action on a subject',\n        properties: {\n          comment: {\n            type: 'string',\n            description: 'Describe reasoning behind the reversal.',\n          },\n        },\n      },\n      modEventResolveAppeal: {\n        type: 'object',\n        description: 'Resolve appeal on a subject',\n        properties: {\n          comment: {\n            type: 'string',\n            description: 'Describe resolution.',\n          },\n        },\n      },\n      modEventComment: {\n        type: 'object',\n        description: 'Add a comment to a subject',\n        required: ['comment'],\n        properties: {\n          comment: {\n            type: 'string',\n          },\n          sticky: {\n            type: 'boolean',\n            description: 'Make the comment persistent on the subject',\n          },\n        },\n      },\n      modEventReport: {\n        type: 'object',\n        description: 'Report a subject',\n        required: ['reportType'],\n        properties: {\n          comment: {\n            type: 'string',\n          },\n          isReporterMuted: {\n            type: 'boolean',\n            description:\n              \"Set to true if the reporter was muted from reporting at the time of the event. These reports won't impact the reviewState of the subject.\",\n          },\n          reportType: {\n            type: 'ref',\n            ref: 'lex:com.atproto.moderation.defs#reasonType',\n          },\n        },\n      },\n      modEventLabel: {\n        type: 'object',\n        description: 'Apply/Negate labels on a subject',\n        required: ['createLabelVals', 'negateLabelVals'],\n        properties: {\n          comment: {\n            type: 'string',\n          },\n          createLabelVals: {\n            type: 'array',\n            items: {\n              type: 'string',\n            },\n          },\n          negateLabelVals: {\n            type: 'array',\n            items: {\n              type: 'string',\n            },\n          },\n        },\n      },\n      modEventAcknowledge: {\n        type: 'object',\n        properties: {\n          comment: {\n            type: 'string',\n          },\n          acknowledgeAccountSubjects: {\n            type: 'boolean',\n            description:\n              'If true, all other reports on content authored by this account will be resolved (acknowledged).',\n          },\n        },\n      },\n      modEventEscalate: {\n        type: 'object',\n        properties: {\n          comment: {\n            type: 'string',\n          },\n        },\n      },\n      modEventMute: {\n        type: 'object',\n        description: 'Mute incoming reports on a subject',\n        required: ['durationInHours'],\n        properties: {\n          comment: {\n            type: 'string',\n          },\n          durationInHours: {\n            type: 'integer',\n            description: 'Indicates how long the subject should remain muted.',\n          },\n        },\n      },\n      modEventUnmute: {\n        type: 'object',\n        description: 'Unmute action on a subject',\n        properties: {\n          comment: {\n            type: 'string',\n            description: 'Describe reasoning behind the reversal.',\n          },\n        },\n      },\n      modEventMuteReporter: {\n        type: 'object',\n        description: 'Mute incoming reports from an account',\n        properties: {\n          comment: {\n            type: 'string',\n          },\n          durationInHours: {\n            type: 'integer',\n            description:\n              'Indicates how long the account should remain muted. Falsy value here means a permanent mute.',\n          },\n        },\n      },\n      modEventUnmuteReporter: {\n        type: 'object',\n        description: 'Unmute incoming reports from an account',\n        properties: {\n          comment: {\n            type: 'string',\n            description: 'Describe reasoning behind the reversal.',\n          },\n        },\n      },\n      modEventEmail: {\n        type: 'object',\n        description: 'Keep a log of outgoing email to a user',\n        required: ['subjectLine'],\n        properties: {\n          subjectLine: {\n            type: 'string',\n            description: 'The subject line of the email sent to the user.',\n          },\n          content: {\n            type: 'string',\n            description: 'The content of the email sent to the user.',\n          },\n          comment: {\n            type: 'string',\n            description: 'Additional comment about the outgoing comm.',\n          },\n        },\n      },\n      modEventDivert: {\n        type: 'object',\n        description:\n          \"Divert a record's blobs to a 3rd party service for further scanning/tagging\",\n        properties: {\n          comment: {\n            type: 'string',\n          },\n        },\n      },\n      modEventTag: {\n        type: 'object',\n        description: 'Add/Remove a tag on a subject',\n        required: ['add', 'remove'],\n        properties: {\n          add: {\n            type: 'array',\n            items: {\n              type: 'string',\n            },\n            description:\n              \"Tags to be added to the subject. If already exists, won't be duplicated.\",\n          },\n          remove: {\n            type: 'array',\n            items: {\n              type: 'string',\n            },\n            description:\n              \"Tags to be removed to the subject. Ignores a tag If it doesn't exist, won't be duplicated.\",\n          },\n          comment: {\n            type: 'string',\n            description: 'Additional comment about added/removed tags.',\n          },\n        },\n      },\n      accountEvent: {\n        type: 'object',\n        description:\n          'Logs account status related events on a repo subject. Normally captured by automod from the firehose and emitted to ozone for historical tracking.',\n        required: ['timestamp', 'active'],\n        properties: {\n          comment: {\n            type: 'string',\n          },\n          active: {\n            type: 'boolean',\n            description:\n              'Indicates that the account has a repository which can be fetched from the host that emitted this event.',\n          },\n          status: {\n            type: 'string',\n            knownValues: [\n              'unknown',\n              'deactivated',\n              'deleted',\n              'takendown',\n              'suspended',\n              'tombstoned',\n            ],\n          },\n          timestamp: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      identityEvent: {\n        type: 'object',\n        description:\n          'Logs identity related events on a repo subject. Normally captured by automod from the firehose and emitted to ozone for historical tracking.',\n        required: ['timestamp'],\n        properties: {\n          comment: {\n            type: 'string',\n          },\n          handle: {\n            type: 'string',\n            format: 'handle',\n          },\n          pdsHost: {\n            type: 'string',\n            format: 'uri',\n          },\n          tombstone: {\n            type: 'boolean',\n          },\n          timestamp: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      recordEvent: {\n        type: 'object',\n        description:\n          'Logs lifecycle event on a record subject. Normally captured by automod from the firehose and emitted to ozone for historical tracking.',\n        required: ['timestamp', 'op'],\n        properties: {\n          comment: {\n            type: 'string',\n          },\n          op: {\n            type: 'string',\n            knownValues: ['create', 'update', 'delete'],\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          timestamp: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      repoView: {\n        type: 'object',\n        required: [\n          'did',\n          'handle',\n          'relatedRecords',\n          'indexedAt',\n          'moderation',\n        ],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          handle: {\n            type: 'string',\n            format: 'handle',\n          },\n          email: {\n            type: 'string',\n          },\n          relatedRecords: {\n            type: 'array',\n            items: {\n              type: 'unknown',\n            },\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          moderation: {\n            type: 'ref',\n            ref: 'lex:tools.ozone.moderation.defs#moderation',\n          },\n          invitedBy: {\n            type: 'ref',\n            ref: 'lex:com.atproto.server.defs#inviteCode',\n          },\n          invitesDisabled: {\n            type: 'boolean',\n          },\n          inviteNote: {\n            type: 'string',\n          },\n          deactivatedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          threatSignatures: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.admin.defs#threatSignature',\n            },\n          },\n        },\n      },\n      repoViewDetail: {\n        type: 'object',\n        required: [\n          'did',\n          'handle',\n          'relatedRecords',\n          'indexedAt',\n          'moderation',\n        ],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          handle: {\n            type: 'string',\n            format: 'handle',\n          },\n          email: {\n            type: 'string',\n          },\n          relatedRecords: {\n            type: 'array',\n            items: {\n              type: 'unknown',\n            },\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          moderation: {\n            type: 'ref',\n            ref: 'lex:tools.ozone.moderation.defs#moderationDetail',\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n          invitedBy: {\n            type: 'ref',\n            ref: 'lex:com.atproto.server.defs#inviteCode',\n          },\n          invites: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.server.defs#inviteCode',\n            },\n          },\n          invitesDisabled: {\n            type: 'boolean',\n          },\n          inviteNote: {\n            type: 'string',\n          },\n          emailConfirmedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          deactivatedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          threatSignatures: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.admin.defs#threatSignature',\n            },\n          },\n        },\n      },\n      repoViewNotFound: {\n        type: 'object',\n        required: ['did'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n        },\n      },\n      recordView: {\n        type: 'object',\n        required: [\n          'uri',\n          'cid',\n          'value',\n          'blobCids',\n          'indexedAt',\n          'moderation',\n          'repo',\n        ],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          value: {\n            type: 'unknown',\n          },\n          blobCids: {\n            type: 'array',\n            items: {\n              type: 'string',\n              format: 'cid',\n            },\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          moderation: {\n            type: 'ref',\n            ref: 'lex:tools.ozone.moderation.defs#moderation',\n          },\n          repo: {\n            type: 'ref',\n            ref: 'lex:tools.ozone.moderation.defs#repoView',\n          },\n        },\n      },\n      recordViewDetail: {\n        type: 'object',\n        required: [\n          'uri',\n          'cid',\n          'value',\n          'blobs',\n          'indexedAt',\n          'moderation',\n          'repo',\n        ],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          value: {\n            type: 'unknown',\n          },\n          blobs: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:tools.ozone.moderation.defs#blobView',\n            },\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          moderation: {\n            type: 'ref',\n            ref: 'lex:tools.ozone.moderation.defs#moderationDetail',\n          },\n          repo: {\n            type: 'ref',\n            ref: 'lex:tools.ozone.moderation.defs#repoView',\n          },\n        },\n      },\n      recordViewNotFound: {\n        type: 'object',\n        required: ['uri'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n        },\n      },\n      moderation: {\n        type: 'object',\n        properties: {\n          subjectStatus: {\n            type: 'ref',\n            ref: 'lex:tools.ozone.moderation.defs#subjectStatusView',\n          },\n        },\n      },\n      moderationDetail: {\n        type: 'object',\n        properties: {\n          subjectStatus: {\n            type: 'ref',\n            ref: 'lex:tools.ozone.moderation.defs#subjectStatusView',\n          },\n        },\n      },\n      blobView: {\n        type: 'object',\n        required: ['cid', 'mimeType', 'size', 'createdAt'],\n        properties: {\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          mimeType: {\n            type: 'string',\n          },\n          size: {\n            type: 'integer',\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          details: {\n            type: 'union',\n            refs: [\n              'lex:tools.ozone.moderation.defs#imageDetails',\n              'lex:tools.ozone.moderation.defs#videoDetails',\n            ],\n          },\n          moderation: {\n            type: 'ref',\n            ref: 'lex:tools.ozone.moderation.defs#moderation',\n          },\n        },\n      },\n      imageDetails: {\n        type: 'object',\n        required: ['width', 'height'],\n        properties: {\n          width: {\n            type: 'integer',\n          },\n          height: {\n            type: 'integer',\n          },\n        },\n      },\n      videoDetails: {\n        type: 'object',\n        required: ['width', 'height', 'length'],\n        properties: {\n          width: {\n            type: 'integer',\n          },\n          height: {\n            type: 'integer',\n          },\n          length: {\n            type: 'integer',\n          },\n        },\n      },\n      accountHosting: {\n        type: 'object',\n        required: ['status'],\n        properties: {\n          status: {\n            type: 'string',\n            knownValues: [\n              'takendown',\n              'suspended',\n              'deleted',\n              'deactivated',\n              'unknown',\n            ],\n          },\n          updatedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          deletedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          deactivatedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          reactivatedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      recordHosting: {\n        type: 'object',\n        required: ['status'],\n        properties: {\n          status: {\n            type: 'string',\n            knownValues: ['deleted', 'unknown'],\n          },\n          updatedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          deletedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n    },\n  },\n  ToolsOzoneModerationEmitEvent: {\n    lexicon: 1,\n    id: 'tools.ozone.moderation.emitEvent',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Take a moderation action on an actor.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['event', 'subject', 'createdBy'],\n            properties: {\n              event: {\n                type: 'union',\n                refs: [\n                  'lex:tools.ozone.moderation.defs#modEventTakedown',\n                  'lex:tools.ozone.moderation.defs#modEventAcknowledge',\n                  'lex:tools.ozone.moderation.defs#modEventEscalate',\n                  'lex:tools.ozone.moderation.defs#modEventComment',\n                  'lex:tools.ozone.moderation.defs#modEventLabel',\n                  'lex:tools.ozone.moderation.defs#modEventReport',\n                  'lex:tools.ozone.moderation.defs#modEventMute',\n                  'lex:tools.ozone.moderation.defs#modEventUnmute',\n                  'lex:tools.ozone.moderation.defs#modEventMuteReporter',\n                  'lex:tools.ozone.moderation.defs#modEventUnmuteReporter',\n                  'lex:tools.ozone.moderation.defs#modEventReverseTakedown',\n                  'lex:tools.ozone.moderation.defs#modEventResolveAppeal',\n                  'lex:tools.ozone.moderation.defs#modEventEmail',\n                  'lex:tools.ozone.moderation.defs#modEventTag',\n                  'lex:tools.ozone.moderation.defs#accountEvent',\n                  'lex:tools.ozone.moderation.defs#identityEvent',\n                  'lex:tools.ozone.moderation.defs#recordEvent',\n                ],\n              },\n              subject: {\n                type: 'union',\n                refs: [\n                  'lex:com.atproto.admin.defs#repoRef',\n                  'lex:com.atproto.repo.strongRef',\n                ],\n              },\n              subjectBlobCids: {\n                type: 'array',\n                items: {\n                  type: 'string',\n                  format: 'cid',\n                },\n              },\n              createdBy: {\n                type: 'string',\n                format: 'did',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'ref',\n            ref: 'lex:tools.ozone.moderation.defs#modEventView',\n          },\n        },\n        errors: [\n          {\n            name: 'SubjectHasAction',\n          },\n        ],\n      },\n    },\n  },\n  ToolsOzoneModerationGetEvent: {\n    lexicon: 1,\n    id: 'tools.ozone.moderation.getEvent',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get details about a moderation event.',\n        parameters: {\n          type: 'params',\n          required: ['id'],\n          properties: {\n            id: {\n              type: 'integer',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'ref',\n            ref: 'lex:tools.ozone.moderation.defs#modEventViewDetail',\n          },\n        },\n      },\n    },\n  },\n  ToolsOzoneModerationGetRecord: {\n    lexicon: 1,\n    id: 'tools.ozone.moderation.getRecord',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get details about a record.',\n        parameters: {\n          type: 'params',\n          required: ['uri'],\n          properties: {\n            uri: {\n              type: 'string',\n              format: 'at-uri',\n            },\n            cid: {\n              type: 'string',\n              format: 'cid',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'ref',\n            ref: 'lex:tools.ozone.moderation.defs#recordViewDetail',\n          },\n        },\n        errors: [\n          {\n            name: 'RecordNotFound',\n          },\n        ],\n      },\n    },\n  },\n  ToolsOzoneModerationGetRecords: {\n    lexicon: 1,\n    id: 'tools.ozone.moderation.getRecords',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get details about some records.',\n        parameters: {\n          type: 'params',\n          required: ['uris'],\n          properties: {\n            uris: {\n              type: 'array',\n              maxLength: 100,\n              items: {\n                type: 'string',\n                format: 'at-uri',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['records'],\n            properties: {\n              records: {\n                type: 'array',\n                items: {\n                  type: 'union',\n                  refs: [\n                    'lex:tools.ozone.moderation.defs#recordViewDetail',\n                    'lex:tools.ozone.moderation.defs#recordViewNotFound',\n                  ],\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ToolsOzoneModerationGetRepo: {\n    lexicon: 1,\n    id: 'tools.ozone.moderation.getRepo',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get details about a repository.',\n        parameters: {\n          type: 'params',\n          required: ['did'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'ref',\n            ref: 'lex:tools.ozone.moderation.defs#repoViewDetail',\n          },\n        },\n        errors: [\n          {\n            name: 'RepoNotFound',\n          },\n        ],\n      },\n    },\n  },\n  ToolsOzoneModerationGetRepos: {\n    lexicon: 1,\n    id: 'tools.ozone.moderation.getRepos',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get details about some repositories.',\n        parameters: {\n          type: 'params',\n          required: ['dids'],\n          properties: {\n            dids: {\n              type: 'array',\n              maxLength: 100,\n              items: {\n                type: 'string',\n                format: 'did',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['repos'],\n            properties: {\n              repos: {\n                type: 'array',\n                items: {\n                  type: 'union',\n                  refs: [\n                    'lex:tools.ozone.moderation.defs#repoViewDetail',\n                    'lex:tools.ozone.moderation.defs#repoViewNotFound',\n                  ],\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ToolsOzoneModerationQueryEvents: {\n    lexicon: 1,\n    id: 'tools.ozone.moderation.queryEvents',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'List moderation events related to a subject.',\n        parameters: {\n          type: 'params',\n          properties: {\n            types: {\n              type: 'array',\n              items: {\n                type: 'string',\n              },\n              description:\n                'The types of events (fully qualified string in the format of tools.ozone.moderation.defs#modEvent<name>) to filter by. If not specified, all events are returned.',\n            },\n            createdBy: {\n              type: 'string',\n              format: 'did',\n            },\n            sortDirection: {\n              type: 'string',\n              default: 'desc',\n              enum: ['asc', 'desc'],\n              description:\n                'Sort direction for the events. Defaults to descending order of created at timestamp.',\n            },\n            createdAfter: {\n              type: 'string',\n              format: 'datetime',\n              description: 'Retrieve events created after a given timestamp',\n            },\n            createdBefore: {\n              type: 'string',\n              format: 'datetime',\n              description: 'Retrieve events created before a given timestamp',\n            },\n            subject: {\n              type: 'string',\n              format: 'uri',\n            },\n            collections: {\n              type: 'array',\n              maxLength: 20,\n              description:\n                \"If specified, only events where the subject belongs to the given collections will be returned. When subjectType is set to 'account', this will be ignored.\",\n              items: {\n                type: 'string',\n                format: 'nsid',\n              },\n            },\n            subjectType: {\n              type: 'string',\n              description:\n                \"If specified, only events where the subject is of the given type (account or record) will be returned. When this is set to 'account' the 'collections' parameter will be ignored. When includeAllUserRecords or subject is set, this will be ignored.\",\n              knownValues: ['account', 'record'],\n            },\n            includeAllUserRecords: {\n              type: 'boolean',\n              default: false,\n              description:\n                \"If true, events on all record types (posts, lists, profile etc.) or records from given 'collections' param, owned by the did are returned.\",\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            hasComment: {\n              type: 'boolean',\n              description: 'If true, only events with comments are returned',\n            },\n            comment: {\n              type: 'string',\n              description:\n                'If specified, only events with comments containing the keyword are returned. Apply || separator to use multiple keywords and match using OR condition.',\n            },\n            addedLabels: {\n              type: 'array',\n              items: {\n                type: 'string',\n              },\n              description:\n                'If specified, only events where all of these labels were added are returned',\n            },\n            removedLabels: {\n              type: 'array',\n              items: {\n                type: 'string',\n              },\n              description:\n                'If specified, only events where all of these labels were removed are returned',\n            },\n            addedTags: {\n              type: 'array',\n              items: {\n                type: 'string',\n              },\n              description:\n                'If specified, only events where all of these tags were added are returned',\n            },\n            removedTags: {\n              type: 'array',\n              items: {\n                type: 'string',\n              },\n              description:\n                'If specified, only events where all of these tags were removed are returned',\n            },\n            reportTypes: {\n              type: 'array',\n              items: {\n                type: 'string',\n              },\n            },\n            policies: {\n              type: 'array',\n              items: {\n                type: 'string',\n                description:\n                  'If specified, only events where the action policies match any of the given policies are returned',\n              },\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['events'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              events: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:tools.ozone.moderation.defs#modEventView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ToolsOzoneModerationQueryStatuses: {\n    lexicon: 1,\n    id: 'tools.ozone.moderation.queryStatuses',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'View moderation statuses of subjects (record or repo).',\n        parameters: {\n          type: 'params',\n          properties: {\n            queueCount: {\n              type: 'integer',\n              description:\n                'Number of queues being used by moderators. Subjects will be split among all queues.',\n            },\n            queueIndex: {\n              type: 'integer',\n              description:\n                'Index of the queue to fetch subjects from. Works only when queueCount value is specified.',\n            },\n            queueSeed: {\n              type: 'string',\n              description: 'A seeder to shuffle/balance the queue items.',\n            },\n            includeAllUserRecords: {\n              type: 'boolean',\n              description:\n                \"All subjects, or subjects from given 'collections' param, belonging to the account specified in the 'subject' param will be returned.\",\n            },\n            subject: {\n              type: 'string',\n              format: 'uri',\n              description: 'The subject to get the status for.',\n            },\n            comment: {\n              type: 'string',\n              description: 'Search subjects by keyword from comments',\n            },\n            reportedAfter: {\n              type: 'string',\n              format: 'datetime',\n              description: 'Search subjects reported after a given timestamp',\n            },\n            reportedBefore: {\n              type: 'string',\n              format: 'datetime',\n              description: 'Search subjects reported before a given timestamp',\n            },\n            reviewedAfter: {\n              type: 'string',\n              format: 'datetime',\n              description: 'Search subjects reviewed after a given timestamp',\n            },\n            hostingDeletedAfter: {\n              type: 'string',\n              format: 'datetime',\n              description:\n                'Search subjects where the associated record/account was deleted after a given timestamp',\n            },\n            hostingDeletedBefore: {\n              type: 'string',\n              format: 'datetime',\n              description:\n                'Search subjects where the associated record/account was deleted before a given timestamp',\n            },\n            hostingUpdatedAfter: {\n              type: 'string',\n              format: 'datetime',\n              description:\n                'Search subjects where the associated record/account was updated after a given timestamp',\n            },\n            hostingUpdatedBefore: {\n              type: 'string',\n              format: 'datetime',\n              description:\n                'Search subjects where the associated record/account was updated before a given timestamp',\n            },\n            hostingStatuses: {\n              type: 'array',\n              items: {\n                type: 'string',\n              },\n              description:\n                'Search subjects by the status of the associated record/account',\n            },\n            reviewedBefore: {\n              type: 'string',\n              format: 'datetime',\n              description: 'Search subjects reviewed before a given timestamp',\n            },\n            includeMuted: {\n              type: 'boolean',\n              description:\n                \"By default, we don't include muted subjects in the results. Set this to true to include them.\",\n            },\n            onlyMuted: {\n              type: 'boolean',\n              description:\n                'When set to true, only muted subjects and reporters will be returned.',\n            },\n            reviewState: {\n              type: 'string',\n              description: 'Specify when fetching subjects in a certain state',\n            },\n            ignoreSubjects: {\n              type: 'array',\n              items: {\n                type: 'string',\n                format: 'uri',\n              },\n            },\n            lastReviewedBy: {\n              type: 'string',\n              format: 'did',\n              description:\n                'Get all subject statuses that were reviewed by a specific moderator',\n            },\n            sortField: {\n              type: 'string',\n              default: 'lastReportedAt',\n              enum: ['lastReviewedAt', 'lastReportedAt'],\n            },\n            sortDirection: {\n              type: 'string',\n              default: 'desc',\n              enum: ['asc', 'desc'],\n            },\n            takendown: {\n              type: 'boolean',\n              description: 'Get subjects that were taken down',\n            },\n            appealed: {\n              type: 'boolean',\n              description: 'Get subjects in unresolved appealed status',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            tags: {\n              type: 'array',\n              maxLength: 25,\n              items: {\n                type: 'string',\n                description:\n                  'Items in this array are applied with OR filters. To apply AND filter, put all tags in the same string and separate using && characters',\n              },\n            },\n            excludeTags: {\n              type: 'array',\n              items: {\n                type: 'string',\n              },\n            },\n            cursor: {\n              type: 'string',\n            },\n            collections: {\n              type: 'array',\n              maxLength: 20,\n              description:\n                \"If specified, subjects belonging to the given collections will be returned. When subjectType is set to 'account', this will be ignored.\",\n              items: {\n                type: 'string',\n                format: 'nsid',\n              },\n            },\n            subjectType: {\n              type: 'string',\n              description:\n                \"If specified, subjects of the given type (account or record) will be returned. When this is set to 'account' the 'collections' parameter will be ignored. When includeAllUserRecords or subject is set, this will be ignored.\",\n              knownValues: ['account', 'record'],\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['subjectStatuses'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              subjectStatuses: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:tools.ozone.moderation.defs#subjectStatusView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ToolsOzoneModerationSearchRepos: {\n    lexicon: 1,\n    id: 'tools.ozone.moderation.searchRepos',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Find repositories based on a search term.',\n        parameters: {\n          type: 'params',\n          properties: {\n            term: {\n              type: 'string',\n              description: \"DEPRECATED: use 'q' instead\",\n            },\n            q: {\n              type: 'string',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['repos'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              repos: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:tools.ozone.moderation.defs#repoView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ToolsOzoneServerGetConfig: {\n    lexicon: 1,\n    id: 'tools.ozone.server.getConfig',\n    defs: {\n      main: {\n        type: 'query',\n        description: \"Get details about ozone's server configuration.\",\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            properties: {\n              appview: {\n                type: 'ref',\n                ref: 'lex:tools.ozone.server.getConfig#serviceConfig',\n              },\n              pds: {\n                type: 'ref',\n                ref: 'lex:tools.ozone.server.getConfig#serviceConfig',\n              },\n              blobDivert: {\n                type: 'ref',\n                ref: 'lex:tools.ozone.server.getConfig#serviceConfig',\n              },\n              chat: {\n                type: 'ref',\n                ref: 'lex:tools.ozone.server.getConfig#serviceConfig',\n              },\n              viewer: {\n                type: 'ref',\n                ref: 'lex:tools.ozone.server.getConfig#viewerConfig',\n              },\n            },\n          },\n        },\n      },\n      serviceConfig: {\n        type: 'object',\n        properties: {\n          url: {\n            type: 'string',\n            format: 'uri',\n          },\n        },\n      },\n      viewerConfig: {\n        type: 'object',\n        properties: {\n          role: {\n            type: 'string',\n            knownValues: [\n              'tools.ozone.team.defs#roleAdmin',\n              'tools.ozone.team.defs#roleModerator',\n              'tools.ozone.team.defs#roleTriage',\n            ],\n          },\n        },\n      },\n    },\n  },\n  ToolsOzoneSetAddValues: {\n    lexicon: 1,\n    id: 'tools.ozone.set.addValues',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Add values to a specific set. Attempting to add values to a set that does not exist will result in an error.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['name', 'values'],\n            properties: {\n              name: {\n                type: 'string',\n                description: 'Name of the set to add values to',\n              },\n              values: {\n                type: 'array',\n                minLength: 1,\n                maxLength: 1000,\n                items: {\n                  type: 'string',\n                },\n                description: 'Array of string values to add to the set',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ToolsOzoneSetDefs: {\n    lexicon: 1,\n    id: 'tools.ozone.set.defs',\n    defs: {\n      set: {\n        type: 'object',\n        required: ['name'],\n        properties: {\n          name: {\n            type: 'string',\n            minLength: 3,\n            maxLength: 128,\n          },\n          description: {\n            type: 'string',\n            maxGraphemes: 1024,\n            maxLength: 10240,\n          },\n        },\n      },\n      setView: {\n        type: 'object',\n        required: ['name', 'setSize', 'createdAt', 'updatedAt'],\n        properties: {\n          name: {\n            type: 'string',\n            minLength: 3,\n            maxLength: 128,\n          },\n          description: {\n            type: 'string',\n            maxGraphemes: 1024,\n            maxLength: 10240,\n          },\n          setSize: {\n            type: 'integer',\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          updatedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n    },\n  },\n  ToolsOzoneSetDeleteSet: {\n    lexicon: 1,\n    id: 'tools.ozone.set.deleteSet',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Delete an entire set. Attempting to delete a set that does not exist will result in an error.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['name'],\n            properties: {\n              name: {\n                type: 'string',\n                description: 'Name of the set to delete',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            properties: {},\n          },\n        },\n        errors: [\n          {\n            name: 'SetNotFound',\n            description: 'set with the given name does not exist',\n          },\n        ],\n      },\n    },\n  },\n  ToolsOzoneSetDeleteValues: {\n    lexicon: 1,\n    id: 'tools.ozone.set.deleteValues',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Delete values from a specific set. Attempting to delete values that are not in the set will not result in an error',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['name', 'values'],\n            properties: {\n              name: {\n                type: 'string',\n                description: 'Name of the set to delete values from',\n              },\n              values: {\n                type: 'array',\n                minLength: 1,\n                items: {\n                  type: 'string',\n                },\n                description: 'Array of string values to delete from the set',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'SetNotFound',\n            description: 'set with the given name does not exist',\n          },\n        ],\n      },\n    },\n  },\n  ToolsOzoneSetGetValues: {\n    lexicon: 1,\n    id: 'tools.ozone.set.getValues',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get a specific set and its values',\n        parameters: {\n          type: 'params',\n          required: ['name'],\n          properties: {\n            name: {\n              type: 'string',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 1000,\n              default: 100,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['set', 'values'],\n            properties: {\n              set: {\n                type: 'ref',\n                ref: 'lex:tools.ozone.set.defs#setView',\n              },\n              values: {\n                type: 'array',\n                items: {\n                  type: 'string',\n                },\n              },\n              cursor: {\n                type: 'string',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'SetNotFound',\n            description: 'set with the given name does not exist',\n          },\n        ],\n      },\n    },\n  },\n  ToolsOzoneSetQuerySets: {\n    lexicon: 1,\n    id: 'tools.ozone.set.querySets',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Query available sets',\n        parameters: {\n          type: 'params',\n          properties: {\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n            namePrefix: {\n              type: 'string',\n            },\n            sortBy: {\n              type: 'string',\n              enum: ['name', 'createdAt', 'updatedAt'],\n              default: 'name',\n            },\n            sortDirection: {\n              type: 'string',\n              default: 'asc',\n              enum: ['asc', 'desc'],\n              description: 'Defaults to ascending order of name field.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['sets'],\n            properties: {\n              sets: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:tools.ozone.set.defs#setView',\n                },\n              },\n              cursor: {\n                type: 'string',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ToolsOzoneSetUpsertSet: {\n    lexicon: 1,\n    id: 'tools.ozone.set.upsertSet',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Create or update set metadata',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'ref',\n            ref: 'lex:tools.ozone.set.defs#set',\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'ref',\n            ref: 'lex:tools.ozone.set.defs#setView',\n          },\n        },\n      },\n    },\n  },\n  ToolsOzoneSettingDefs: {\n    lexicon: 1,\n    id: 'tools.ozone.setting.defs',\n    defs: {\n      option: {\n        type: 'object',\n        required: [\n          'key',\n          'value',\n          'did',\n          'scope',\n          'createdBy',\n          'lastUpdatedBy',\n        ],\n        properties: {\n          key: {\n            type: 'string',\n            format: 'nsid',\n          },\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          value: {\n            type: 'unknown',\n          },\n          description: {\n            type: 'string',\n            maxGraphemes: 1024,\n            maxLength: 10240,\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          updatedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          managerRole: {\n            type: 'string',\n            knownValues: [\n              'tools.ozone.team.defs#roleModerator',\n              'tools.ozone.team.defs#roleTriage',\n              'tools.ozone.team.defs#roleAdmin',\n            ],\n          },\n          scope: {\n            type: 'string',\n            knownValues: ['instance', 'personal'],\n          },\n          createdBy: {\n            type: 'string',\n            format: 'did',\n          },\n          lastUpdatedBy: {\n            type: 'string',\n            format: 'did',\n          },\n        },\n      },\n    },\n  },\n  ToolsOzoneSettingListOptions: {\n    lexicon: 1,\n    id: 'tools.ozone.setting.listOptions',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'List settings with optional filtering',\n        parameters: {\n          type: 'params',\n          properties: {\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n            scope: {\n              type: 'string',\n              knownValues: ['instance', 'personal'],\n              default: 'instance',\n            },\n            prefix: {\n              type: 'string',\n              description: 'Filter keys by prefix',\n            },\n            keys: {\n              type: 'array',\n              maxLength: 100,\n              items: {\n                type: 'string',\n                format: 'nsid',\n              },\n              description:\n                'Filter for only the specified keys. Ignored if prefix is provided',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['options'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              options: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:tools.ozone.setting.defs#option',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ToolsOzoneSettingRemoveOptions: {\n    lexicon: 1,\n    id: 'tools.ozone.setting.removeOptions',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Delete settings by key',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['keys', 'scope'],\n            properties: {\n              keys: {\n                type: 'array',\n                minLength: 1,\n                maxLength: 200,\n                items: {\n                  type: 'string',\n                  format: 'nsid',\n                },\n              },\n              scope: {\n                type: 'string',\n                knownValues: ['instance', 'personal'],\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            properties: {},\n          },\n        },\n      },\n    },\n  },\n  ToolsOzoneSettingUpsertOption: {\n    lexicon: 1,\n    id: 'tools.ozone.setting.upsertOption',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Create or update setting option',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['key', 'scope', 'value'],\n            properties: {\n              key: {\n                type: 'string',\n                format: 'nsid',\n              },\n              scope: {\n                type: 'string',\n                knownValues: ['instance', 'personal'],\n              },\n              value: {\n                type: 'unknown',\n              },\n              description: {\n                type: 'string',\n                maxLength: 2000,\n              },\n              managerRole: {\n                type: 'string',\n                knownValues: [\n                  'tools.ozone.team.defs#roleModerator',\n                  'tools.ozone.team.defs#roleTriage',\n                  'tools.ozone.team.defs#roleAdmin',\n                ],\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['option'],\n            properties: {\n              option: {\n                type: 'ref',\n                ref: 'lex:tools.ozone.setting.defs#option',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ToolsOzoneSignatureDefs: {\n    lexicon: 1,\n    id: 'tools.ozone.signature.defs',\n    defs: {\n      sigDetail: {\n        type: 'object',\n        required: ['property', 'value'],\n        properties: {\n          property: {\n            type: 'string',\n          },\n          value: {\n            type: 'string',\n          },\n        },\n      },\n    },\n  },\n  ToolsOzoneSignatureFindCorrelation: {\n    lexicon: 1,\n    id: 'tools.ozone.signature.findCorrelation',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Find all correlated threat signatures between 2 or more accounts.',\n        parameters: {\n          type: 'params',\n          required: ['dids'],\n          properties: {\n            dids: {\n              type: 'array',\n              items: {\n                type: 'string',\n                format: 'did',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['details'],\n            properties: {\n              details: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:tools.ozone.signature.defs#sigDetail',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ToolsOzoneSignatureFindRelatedAccounts: {\n    lexicon: 1,\n    id: 'tools.ozone.signature.findRelatedAccounts',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get accounts that share some matching threat signatures with the root account.',\n        parameters: {\n          type: 'params',\n          required: ['did'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n            },\n            cursor: {\n              type: 'string',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['accounts'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              accounts: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:tools.ozone.signature.findRelatedAccounts#relatedAccount',\n                },\n              },\n            },\n          },\n        },\n      },\n      relatedAccount: {\n        type: 'object',\n        required: ['account'],\n        properties: {\n          account: {\n            type: 'ref',\n            ref: 'lex:com.atproto.admin.defs#accountView',\n          },\n          similarities: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:tools.ozone.signature.defs#sigDetail',\n            },\n          },\n        },\n      },\n    },\n  },\n  ToolsOzoneSignatureSearchAccounts: {\n    lexicon: 1,\n    id: 'tools.ozone.signature.searchAccounts',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Search for accounts that match one or more threat signature values.',\n        parameters: {\n          type: 'params',\n          required: ['values'],\n          properties: {\n            values: {\n              type: 'array',\n              items: {\n                type: 'string',\n              },\n            },\n            cursor: {\n              type: 'string',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['accounts'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              accounts: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:com.atproto.admin.defs#accountView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ToolsOzoneTeamAddMember: {\n    lexicon: 1,\n    id: 'tools.ozone.team.addMember',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Add a member to the ozone team. Requires admin role.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['did', 'role'],\n            properties: {\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n              role: {\n                type: 'string',\n                knownValues: [\n                  'tools.ozone.team.defs#roleAdmin',\n                  'tools.ozone.team.defs#roleModerator',\n                  'tools.ozone.team.defs#roleTriage',\n                ],\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'ref',\n            ref: 'lex:tools.ozone.team.defs#member',\n          },\n        },\n        errors: [\n          {\n            name: 'MemberAlreadyExists',\n            description: 'Member already exists in the team.',\n          },\n        ],\n      },\n    },\n  },\n  ToolsOzoneTeamDefs: {\n    lexicon: 1,\n    id: 'tools.ozone.team.defs',\n    defs: {\n      member: {\n        type: 'object',\n        required: ['did', 'role'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          disabled: {\n            type: 'boolean',\n          },\n          profile: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileViewDetailed',\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          updatedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          lastUpdatedBy: {\n            type: 'string',\n          },\n          role: {\n            type: 'string',\n            knownValues: [\n              'lex:tools.ozone.team.defs#roleAdmin',\n              'lex:tools.ozone.team.defs#roleModerator',\n              'lex:tools.ozone.team.defs#roleTriage',\n            ],\n          },\n        },\n      },\n      roleAdmin: {\n        type: 'token',\n        description:\n          'Admin role. Highest level of access, can perform all actions.',\n      },\n      roleModerator: {\n        type: 'token',\n        description: 'Moderator role. Can perform most actions.',\n      },\n      roleTriage: {\n        type: 'token',\n        description:\n          'Triage role. Mostly intended for monitoring and escalating issues.',\n      },\n    },\n  },\n  ToolsOzoneTeamDeleteMember: {\n    lexicon: 1,\n    id: 'tools.ozone.team.deleteMember',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Delete a member from ozone team. Requires admin role.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['did'],\n            properties: {\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'MemberNotFound',\n            description: 'The member being deleted does not exist',\n          },\n          {\n            name: 'CannotDeleteSelf',\n            description: 'You can not delete yourself from the team',\n          },\n        ],\n      },\n    },\n  },\n  ToolsOzoneTeamListMembers: {\n    lexicon: 1,\n    id: 'tools.ozone.team.listMembers',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'List all members with access to the ozone service.',\n        parameters: {\n          type: 'params',\n          properties: {\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['members'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              members: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:tools.ozone.team.defs#member',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ToolsOzoneTeamUpdateMember: {\n    lexicon: 1,\n    id: 'tools.ozone.team.updateMember',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Update a member in the ozone service. Requires admin role.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['did'],\n            properties: {\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n              disabled: {\n                type: 'boolean',\n              },\n              role: {\n                type: 'string',\n                knownValues: [\n                  'tools.ozone.team.defs#roleAdmin',\n                  'tools.ozone.team.defs#roleModerator',\n                  'tools.ozone.team.defs#roleTriage',\n                ],\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'ref',\n            ref: 'lex:tools.ozone.team.defs#member',\n          },\n        },\n        errors: [\n          {\n            name: 'MemberNotFound',\n            description: 'The member being updated does not exist in the team',\n          },\n        ],\n      },\n    },\n  },\n} as const satisfies Record<string, LexiconDoc>\n\nexport const schemas = Object.values(schemaDict)\nexport const lexicons: Lexicons = new Lexicons(schemas)\nexport const ids = {\n  ComAtprotoAdminDefs: 'com.atproto.admin.defs',\n  ComAtprotoAdminDeleteAccount: 'com.atproto.admin.deleteAccount',\n  ComAtprotoAdminDisableAccountInvites:\n    'com.atproto.admin.disableAccountInvites',\n  ComAtprotoAdminDisableInviteCodes: 'com.atproto.admin.disableInviteCodes',\n  ComAtprotoAdminEnableAccountInvites: 'com.atproto.admin.enableAccountInvites',\n  ComAtprotoAdminGetAccountInfo: 'com.atproto.admin.getAccountInfo',\n  ComAtprotoAdminGetAccountInfos: 'com.atproto.admin.getAccountInfos',\n  ComAtprotoAdminGetInviteCodes: 'com.atproto.admin.getInviteCodes',\n  ComAtprotoAdminGetSubjectStatus: 'com.atproto.admin.getSubjectStatus',\n  ComAtprotoAdminSearchAccounts: 'com.atproto.admin.searchAccounts',\n  ComAtprotoAdminSendEmail: 'com.atproto.admin.sendEmail',\n  ComAtprotoAdminUpdateAccountEmail: 'com.atproto.admin.updateAccountEmail',\n  ComAtprotoAdminUpdateAccountHandle: 'com.atproto.admin.updateAccountHandle',\n  ComAtprotoAdminUpdateAccountPassword:\n    'com.atproto.admin.updateAccountPassword',\n  ComAtprotoAdminUpdateSubjectStatus: 'com.atproto.admin.updateSubjectStatus',\n  ComAtprotoIdentityGetRecommendedDidCredentials:\n    'com.atproto.identity.getRecommendedDidCredentials',\n  ComAtprotoIdentityRequestPlcOperationSignature:\n    'com.atproto.identity.requestPlcOperationSignature',\n  ComAtprotoIdentityResolveHandle: 'com.atproto.identity.resolveHandle',\n  ComAtprotoIdentitySignPlcOperation: 'com.atproto.identity.signPlcOperation',\n  ComAtprotoIdentitySubmitPlcOperation:\n    'com.atproto.identity.submitPlcOperation',\n  ComAtprotoIdentityUpdateHandle: 'com.atproto.identity.updateHandle',\n  ComAtprotoLabelDefs: 'com.atproto.label.defs',\n  ComAtprotoLabelQueryLabels: 'com.atproto.label.queryLabels',\n  ComAtprotoLabelSubscribeLabels: 'com.atproto.label.subscribeLabels',\n  ComAtprotoLexiconSchema: 'com.atproto.lexicon.schema',\n  ComAtprotoModerationCreateReport: 'com.atproto.moderation.createReport',\n  ComAtprotoModerationDefs: 'com.atproto.moderation.defs',\n  ComAtprotoRepoApplyWrites: 'com.atproto.repo.applyWrites',\n  ComAtprotoRepoCreateRecord: 'com.atproto.repo.createRecord',\n  ComAtprotoRepoDefs: 'com.atproto.repo.defs',\n  ComAtprotoRepoDeleteRecord: 'com.atproto.repo.deleteRecord',\n  ComAtprotoRepoDescribeRepo: 'com.atproto.repo.describeRepo',\n  ComAtprotoRepoGetRecord: 'com.atproto.repo.getRecord',\n  ComAtprotoRepoImportRepo: 'com.atproto.repo.importRepo',\n  ComAtprotoRepoListMissingBlobs: 'com.atproto.repo.listMissingBlobs',\n  ComAtprotoRepoListRecords: 'com.atproto.repo.listRecords',\n  ComAtprotoRepoPutRecord: 'com.atproto.repo.putRecord',\n  ComAtprotoRepoStrongRef: 'com.atproto.repo.strongRef',\n  ComAtprotoRepoUploadBlob: 'com.atproto.repo.uploadBlob',\n  ComAtprotoServerActivateAccount: 'com.atproto.server.activateAccount',\n  ComAtprotoServerCheckAccountStatus: 'com.atproto.server.checkAccountStatus',\n  ComAtprotoServerConfirmEmail: 'com.atproto.server.confirmEmail',\n  ComAtprotoServerCreateAccount: 'com.atproto.server.createAccount',\n  ComAtprotoServerCreateAppPassword: 'com.atproto.server.createAppPassword',\n  ComAtprotoServerCreateInviteCode: 'com.atproto.server.createInviteCode',\n  ComAtprotoServerCreateInviteCodes: 'com.atproto.server.createInviteCodes',\n  ComAtprotoServerCreateSession: 'com.atproto.server.createSession',\n  ComAtprotoServerDeactivateAccount: 'com.atproto.server.deactivateAccount',\n  ComAtprotoServerDefs: 'com.atproto.server.defs',\n  ComAtprotoServerDeleteAccount: 'com.atproto.server.deleteAccount',\n  ComAtprotoServerDeleteSession: 'com.atproto.server.deleteSession',\n  ComAtprotoServerDescribeServer: 'com.atproto.server.describeServer',\n  ComAtprotoServerGetAccountInviteCodes:\n    'com.atproto.server.getAccountInviteCodes',\n  ComAtprotoServerGetServiceAuth: 'com.atproto.server.getServiceAuth',\n  ComAtprotoServerGetSession: 'com.atproto.server.getSession',\n  ComAtprotoServerListAppPasswords: 'com.atproto.server.listAppPasswords',\n  ComAtprotoServerRefreshSession: 'com.atproto.server.refreshSession',\n  ComAtprotoServerRequestAccountDelete:\n    'com.atproto.server.requestAccountDelete',\n  ComAtprotoServerRequestEmailConfirmation:\n    'com.atproto.server.requestEmailConfirmation',\n  ComAtprotoServerRequestEmailUpdate: 'com.atproto.server.requestEmailUpdate',\n  ComAtprotoServerRequestPasswordReset:\n    'com.atproto.server.requestPasswordReset',\n  ComAtprotoServerReserveSigningKey: 'com.atproto.server.reserveSigningKey',\n  ComAtprotoServerResetPassword: 'com.atproto.server.resetPassword',\n  ComAtprotoServerRevokeAppPassword: 'com.atproto.server.revokeAppPassword',\n  ComAtprotoServerUpdateEmail: 'com.atproto.server.updateEmail',\n  ComAtprotoSyncGetBlob: 'com.atproto.sync.getBlob',\n  ComAtprotoSyncGetBlocks: 'com.atproto.sync.getBlocks',\n  ComAtprotoSyncGetCheckout: 'com.atproto.sync.getCheckout',\n  ComAtprotoSyncGetHead: 'com.atproto.sync.getHead',\n  ComAtprotoSyncGetLatestCommit: 'com.atproto.sync.getLatestCommit',\n  ComAtprotoSyncGetRecord: 'com.atproto.sync.getRecord',\n  ComAtprotoSyncGetRepo: 'com.atproto.sync.getRepo',\n  ComAtprotoSyncGetRepoStatus: 'com.atproto.sync.getRepoStatus',\n  ComAtprotoSyncListBlobs: 'com.atproto.sync.listBlobs',\n  ComAtprotoSyncListRepos: 'com.atproto.sync.listRepos',\n  ComAtprotoSyncNotifyOfUpdate: 'com.atproto.sync.notifyOfUpdate',\n  ComAtprotoSyncRequestCrawl: 'com.atproto.sync.requestCrawl',\n  ComAtprotoSyncSubscribeRepos: 'com.atproto.sync.subscribeRepos',\n  ComAtprotoTempAddReservedHandle: 'com.atproto.temp.addReservedHandle',\n  ComAtprotoTempCheckSignupQueue: 'com.atproto.temp.checkSignupQueue',\n  ComAtprotoTempFetchLabels: 'com.atproto.temp.fetchLabels',\n  ComAtprotoTempRequestPhoneVerification:\n    'com.atproto.temp.requestPhoneVerification',\n  AppBskyActorDefs: 'app.bsky.actor.defs',\n  AppBskyActorGetPreferences: 'app.bsky.actor.getPreferences',\n  AppBskyActorGetProfile: 'app.bsky.actor.getProfile',\n  AppBskyActorGetProfiles: 'app.bsky.actor.getProfiles',\n  AppBskyActorGetSuggestions: 'app.bsky.actor.getSuggestions',\n  AppBskyActorProfile: 'app.bsky.actor.profile',\n  AppBskyActorPutPreferences: 'app.bsky.actor.putPreferences',\n  AppBskyActorSearchActors: 'app.bsky.actor.searchActors',\n  AppBskyActorSearchActorsTypeahead: 'app.bsky.actor.searchActorsTypeahead',\n  AppBskyEmbedDefs: 'app.bsky.embed.defs',\n  AppBskyEmbedExternal: 'app.bsky.embed.external',\n  AppBskyEmbedImages: 'app.bsky.embed.images',\n  AppBskyEmbedRecord: 'app.bsky.embed.record',\n  AppBskyEmbedRecordWithMedia: 'app.bsky.embed.recordWithMedia',\n  AppBskyEmbedVideo: 'app.bsky.embed.video',\n  AppBskyFeedDefs: 'app.bsky.feed.defs',\n  AppBskyFeedDescribeFeedGenerator: 'app.bsky.feed.describeFeedGenerator',\n  AppBskyFeedGenerator: 'app.bsky.feed.generator',\n  AppBskyFeedGetActorFeeds: 'app.bsky.feed.getActorFeeds',\n  AppBskyFeedGetActorLikes: 'app.bsky.feed.getActorLikes',\n  AppBskyFeedGetAuthorFeed: 'app.bsky.feed.getAuthorFeed',\n  AppBskyFeedGetFeed: 'app.bsky.feed.getFeed',\n  AppBskyFeedGetFeedGenerator: 'app.bsky.feed.getFeedGenerator',\n  AppBskyFeedGetFeedGenerators: 'app.bsky.feed.getFeedGenerators',\n  AppBskyFeedGetFeedSkeleton: 'app.bsky.feed.getFeedSkeleton',\n  AppBskyFeedGetLikes: 'app.bsky.feed.getLikes',\n  AppBskyFeedGetListFeed: 'app.bsky.feed.getListFeed',\n  AppBskyFeedGetPostThread: 'app.bsky.feed.getPostThread',\n  AppBskyFeedGetPosts: 'app.bsky.feed.getPosts',\n  AppBskyFeedGetQuotes: 'app.bsky.feed.getQuotes',\n  AppBskyFeedGetRepostedBy: 'app.bsky.feed.getRepostedBy',\n  AppBskyFeedGetSuggestedFeeds: 'app.bsky.feed.getSuggestedFeeds',\n  AppBskyFeedGetTimeline: 'app.bsky.feed.getTimeline',\n  AppBskyFeedLike: 'app.bsky.feed.like',\n  AppBskyFeedPost: 'app.bsky.feed.post',\n  AppBskyFeedPostgate: 'app.bsky.feed.postgate',\n  AppBskyFeedRepost: 'app.bsky.feed.repost',\n  AppBskyFeedSearchPosts: 'app.bsky.feed.searchPosts',\n  AppBskyFeedSendInteractions: 'app.bsky.feed.sendInteractions',\n  AppBskyFeedThreadgate: 'app.bsky.feed.threadgate',\n  AppBskyGraphBlock: 'app.bsky.graph.block',\n  AppBskyGraphDefs: 'app.bsky.graph.defs',\n  AppBskyGraphFollow: 'app.bsky.graph.follow',\n  AppBskyGraphGetActorStarterPacks: 'app.bsky.graph.getActorStarterPacks',\n  AppBskyGraphGetBlocks: 'app.bsky.graph.getBlocks',\n  AppBskyGraphGetFollowers: 'app.bsky.graph.getFollowers',\n  AppBskyGraphGetFollows: 'app.bsky.graph.getFollows',\n  AppBskyGraphGetKnownFollowers: 'app.bsky.graph.getKnownFollowers',\n  AppBskyGraphGetList: 'app.bsky.graph.getList',\n  AppBskyGraphGetListBlocks: 'app.bsky.graph.getListBlocks',\n  AppBskyGraphGetListMutes: 'app.bsky.graph.getListMutes',\n  AppBskyGraphGetLists: 'app.bsky.graph.getLists',\n  AppBskyGraphGetMutes: 'app.bsky.graph.getMutes',\n  AppBskyGraphGetRelationships: 'app.bsky.graph.getRelationships',\n  AppBskyGraphGetStarterPack: 'app.bsky.graph.getStarterPack',\n  AppBskyGraphGetStarterPacks: 'app.bsky.graph.getStarterPacks',\n  AppBskyGraphGetSuggestedFollowsByActor:\n    'app.bsky.graph.getSuggestedFollowsByActor',\n  AppBskyGraphList: 'app.bsky.graph.list',\n  AppBskyGraphListblock: 'app.bsky.graph.listblock',\n  AppBskyGraphListitem: 'app.bsky.graph.listitem',\n  AppBskyGraphMuteActor: 'app.bsky.graph.muteActor',\n  AppBskyGraphMuteActorList: 'app.bsky.graph.muteActorList',\n  AppBskyGraphMuteThread: 'app.bsky.graph.muteThread',\n  AppBskyGraphSearchStarterPacks: 'app.bsky.graph.searchStarterPacks',\n  AppBskyGraphStarterpack: 'app.bsky.graph.starterpack',\n  AppBskyGraphUnmuteActor: 'app.bsky.graph.unmuteActor',\n  AppBskyGraphUnmuteActorList: 'app.bsky.graph.unmuteActorList',\n  AppBskyGraphUnmuteThread: 'app.bsky.graph.unmuteThread',\n  AppBskyLabelerDefs: 'app.bsky.labeler.defs',\n  AppBskyLabelerGetServices: 'app.bsky.labeler.getServices',\n  AppBskyLabelerService: 'app.bsky.labeler.service',\n  AppBskyNotificationGetUnreadCount: 'app.bsky.notification.getUnreadCount',\n  AppBskyNotificationListNotifications:\n    'app.bsky.notification.listNotifications',\n  AppBskyNotificationPutPreferences: 'app.bsky.notification.putPreferences',\n  AppBskyNotificationRegisterPush: 'app.bsky.notification.registerPush',\n  AppBskyNotificationUpdateSeen: 'app.bsky.notification.updateSeen',\n  AppBskyRichtextFacet: 'app.bsky.richtext.facet',\n  AppBskyUnspeccedDefs: 'app.bsky.unspecced.defs',\n  AppBskyUnspeccedGetConfig: 'app.bsky.unspecced.getConfig',\n  AppBskyUnspeccedGetPopularFeedGenerators:\n    'app.bsky.unspecced.getPopularFeedGenerators',\n  AppBskyUnspeccedGetSuggestionsSkeleton:\n    'app.bsky.unspecced.getSuggestionsSkeleton',\n  AppBskyUnspeccedGetTaggedSuggestions:\n    'app.bsky.unspecced.getTaggedSuggestions',\n  AppBskyUnspeccedGetTrendingTopics: 'app.bsky.unspecced.getTrendingTopics',\n  AppBskyUnspeccedSearchActorsSkeleton:\n    'app.bsky.unspecced.searchActorsSkeleton',\n  AppBskyUnspeccedSearchPostsSkeleton: 'app.bsky.unspecced.searchPostsSkeleton',\n  AppBskyUnspeccedSearchStarterPacksSkeleton:\n    'app.bsky.unspecced.searchStarterPacksSkeleton',\n  AppBskyVideoDefs: 'app.bsky.video.defs',\n  AppBskyVideoGetJobStatus: 'app.bsky.video.getJobStatus',\n  AppBskyVideoGetUploadLimits: 'app.bsky.video.getUploadLimits',\n  AppBskyVideoUploadVideo: 'app.bsky.video.uploadVideo',\n  ChatBskyActorDeclaration: 'chat.bsky.actor.declaration',\n  ChatBskyActorDefs: 'chat.bsky.actor.defs',\n  ChatBskyActorDeleteAccount: 'chat.bsky.actor.deleteAccount',\n  ChatBskyActorExportAccountData: 'chat.bsky.actor.exportAccountData',\n  ChatBskyConvoDefs: 'chat.bsky.convo.defs',\n  ChatBskyConvoDeleteMessageForSelf: 'chat.bsky.convo.deleteMessageForSelf',\n  ChatBskyConvoGetConvo: 'chat.bsky.convo.getConvo',\n  ChatBskyConvoGetConvoForMembers: 'chat.bsky.convo.getConvoForMembers',\n  ChatBskyConvoGetLog: 'chat.bsky.convo.getLog',\n  ChatBskyConvoGetMessages: 'chat.bsky.convo.getMessages',\n  ChatBskyConvoLeaveConvo: 'chat.bsky.convo.leaveConvo',\n  ChatBskyConvoListConvos: 'chat.bsky.convo.listConvos',\n  ChatBskyConvoMuteConvo: 'chat.bsky.convo.muteConvo',\n  ChatBskyConvoSendMessage: 'chat.bsky.convo.sendMessage',\n  ChatBskyConvoSendMessageBatch: 'chat.bsky.convo.sendMessageBatch',\n  ChatBskyConvoUnmuteConvo: 'chat.bsky.convo.unmuteConvo',\n  ChatBskyConvoUpdateRead: 'chat.bsky.convo.updateRead',\n  ChatBskyModerationGetActorMetadata: 'chat.bsky.moderation.getActorMetadata',\n  ChatBskyModerationGetMessageContext: 'chat.bsky.moderation.getMessageContext',\n  ChatBskyModerationUpdateActorAccess: 'chat.bsky.moderation.updateActorAccess',\n  ToolsOzoneCommunicationCreateTemplate:\n    'tools.ozone.communication.createTemplate',\n  ToolsOzoneCommunicationDefs: 'tools.ozone.communication.defs',\n  ToolsOzoneCommunicationDeleteTemplate:\n    'tools.ozone.communication.deleteTemplate',\n  ToolsOzoneCommunicationListTemplates:\n    'tools.ozone.communication.listTemplates',\n  ToolsOzoneCommunicationUpdateTemplate:\n    'tools.ozone.communication.updateTemplate',\n  ToolsOzoneModerationDefs: 'tools.ozone.moderation.defs',\n  ToolsOzoneModerationEmitEvent: 'tools.ozone.moderation.emitEvent',\n  ToolsOzoneModerationGetEvent: 'tools.ozone.moderation.getEvent',\n  ToolsOzoneModerationGetRecord: 'tools.ozone.moderation.getRecord',\n  ToolsOzoneModerationGetRecords: 'tools.ozone.moderation.getRecords',\n  ToolsOzoneModerationGetRepo: 'tools.ozone.moderation.getRepo',\n  ToolsOzoneModerationGetRepos: 'tools.ozone.moderation.getRepos',\n  ToolsOzoneModerationQueryEvents: 'tools.ozone.moderation.queryEvents',\n  ToolsOzoneModerationQueryStatuses: 'tools.ozone.moderation.queryStatuses',\n  ToolsOzoneModerationSearchRepos: 'tools.ozone.moderation.searchRepos',\n  ToolsOzoneServerGetConfig: 'tools.ozone.server.getConfig',\n  ToolsOzoneSetAddValues: 'tools.ozone.set.addValues',\n  ToolsOzoneSetDefs: 'tools.ozone.set.defs',\n  ToolsOzoneSetDeleteSet: 'tools.ozone.set.deleteSet',\n  ToolsOzoneSetDeleteValues: 'tools.ozone.set.deleteValues',\n  ToolsOzoneSetGetValues: 'tools.ozone.set.getValues',\n  ToolsOzoneSetQuerySets: 'tools.ozone.set.querySets',\n  ToolsOzoneSetUpsertSet: 'tools.ozone.set.upsertSet',\n  ToolsOzoneSettingDefs: 'tools.ozone.setting.defs',\n  ToolsOzoneSettingListOptions: 'tools.ozone.setting.listOptions',\n  ToolsOzoneSettingRemoveOptions: 'tools.ozone.setting.removeOptions',\n  ToolsOzoneSettingUpsertOption: 'tools.ozone.setting.upsertOption',\n  ToolsOzoneSignatureDefs: 'tools.ozone.signature.defs',\n  ToolsOzoneSignatureFindCorrelation: 'tools.ozone.signature.findCorrelation',\n  ToolsOzoneSignatureFindRelatedAccounts:\n    'tools.ozone.signature.findRelatedAccounts',\n  ToolsOzoneSignatureSearchAccounts: 'tools.ozone.signature.searchAccounts',\n  ToolsOzoneTeamAddMember: 'tools.ozone.team.addMember',\n  ToolsOzoneTeamDefs: 'tools.ozone.team.defs',\n  ToolsOzoneTeamDeleteMember: 'tools.ozone.team.deleteMember',\n  ToolsOzoneTeamListMembers: 'tools.ozone.team.listMembers',\n  ToolsOzoneTeamUpdateMember: 'tools.ozone.team.updateMember',\n}\n"],"names":[],"mappings":";;;;;AAAA;;GAEG,CACH,MAAA,wCAAuD;AAE1C,QAAA,UAAU,GAAG;IACxB,mBAAmB,EAAE;QACnB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,wBAAwB;QAC5B,IAAI,EAAE;YACJ,UAAU,EAAE;gBACV,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,SAAS;iBAAC;gBACrB,UAAU,EAAE;oBACV,OAAO,EAAE;wBACP,IAAI,EAAE,SAAS;qBAChB;oBACD,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;YACD,WAAW,EAAE;gBACX,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,KAAK;oBAAE,QAAQ;oBAAE,WAAW;iBAAC;gBACxC,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,QAAQ;qBACjB;oBACD,KAAK,EAAE;wBACL,IAAI,EAAE,QAAQ;qBACf;oBACD,cAAc,EAAE;wBACd,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE,SAAS;yBAChB;qBACF;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,wCAAwC;qBAC9C;oBACD,OAAO,EAAE;wBACP,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE,KAAK;4BACX,GAAG,EAAE,wCAAwC;yBAC9C;qBACF;oBACD,eAAe,EAAE;wBACf,IAAI,EAAE,SAAS;qBAChB;oBACD,gBAAgB,EAAE;wBAChB,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;oBACD,UAAU,EAAE;wBACV,IAAI,EAAE,QAAQ;qBACf;oBACD,aAAa,EAAE;wBACb,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;oBACD,gBAAgB,EAAE;wBAChB,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE,KAAK;4BACX,GAAG,EAAE,4CAA4C;yBAClD;qBACF;iBACF;aACF;YACD,OAAO,EAAE;gBACP,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,KAAK;iBAAC;gBACjB,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;iBACF;aACF;YACD,WAAW,EAAE;gBACX,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,KAAK;oBAAE,KAAK;iBAAC;gBACxB,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,QAAQ;qBACjB;iBACF;aACF;YACD,eAAe,EAAE;gBACf,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,UAAU;oBAAE,OAAO;iBAAC;gBAC/B,UAAU,EAAE;oBACV,QAAQ,EAAE;wBACR,IAAI,EAAE,QAAQ;qBACf;oBACD,KAAK,EAAE;wBACL,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF;IACD,4BAA4B,EAAE;QAC5B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,iCAAiC;QACrC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EAAE,4CAA4C;gBACzD,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,KAAK;yBAAC;wBACjB,UAAU,EAAE;4BACV,GAAG,EAAE;gCACH,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,KAAK;6BACd;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,oCAAoC,EAAE;QACpC,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,yCAAyC;QAC7C,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EACT,6FAA6F;gBAC/F,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,SAAS;yBAAC;wBACrB,UAAU,EAAE;4BACV,OAAO,EAAE;gCACP,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,KAAK;6BACd;4BACD,IAAI,EAAE;gCACJ,IAAI,EAAE,QAAQ;gCACd,WAAW,EAAE,uCAAuC;6BACrD;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,iCAAiC,EAAE;QACjC,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,sCAAsC;QAC1C,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EACT,4EAA4E;gBAC9E,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,UAAU,EAAE;4BACV,KAAK,EAAE;gCACL,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,QAAQ;iCACf;6BACF;4BACD,QAAQ,EAAE;gCACR,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,QAAQ;iCACf;6BACF;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,mCAAmC,EAAE;QACnC,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,wCAAwC;QAC5C,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EAAE,yDAAyD;gBACtE,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,SAAS;yBAAC;wBACrB,UAAU,EAAE;4BACV,OAAO,EAAE;gCACP,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,KAAK;6BACd;4BACD,IAAI,EAAE;gCACJ,IAAI,EAAE,QAAQ;gCACd,WAAW,EAAE,sCAAsC;6BACpD;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,6BAA6B,EAAE;QAC7B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,kCAAkC;QACtC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,+BAA+B;gBAC5C,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,KAAK;qBAAC;oBACjB,UAAU,EAAE;wBACV,GAAG,EAAE;4BACH,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,KAAK;yBACd;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,wCAAwC;qBAC9C;iBACF;aACF;SACF;KACF;IACD,8BAA8B,EAAE;QAC9B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,mCAAmC;QACvC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,kCAAkC;gBAC/C,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,MAAM;qBAAC;oBAClB,UAAU,EAAE;wBACV,IAAI,EAAE;4BACJ,IAAI,EAAE,OAAO;4BACb,KAAK,EAAE;gCACL,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,KAAK;6BACd;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,OAAO;yBAAC;wBACnB,UAAU,EAAE;4BACV,KAAK,EAAE;gCACL,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,wCAAwC;iCAC9C;6BACF;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,6BAA6B,EAAE;QAC7B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,kCAAkC;QACtC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,oCAAoC;gBACjD,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,UAAU,EAAE;wBACV,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;4BACd,WAAW,EAAE;gCAAC,QAAQ;gCAAE,OAAO;6BAAC;4BAChC,OAAO,EAAE,QAAQ;yBAClB;wBACD,KAAK,EAAE;4BACL,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,CAAC;4BACV,OAAO,EAAE,GAAG;4BACZ,OAAO,EAAE,GAAG;yBACb;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,OAAO;yBAAC;wBACnB,UAAU,EAAE;4BACV,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;6BACf;4BACD,KAAK,EAAE;gCACL,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,wCAAwC;iCAC9C;6BACF;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,+BAA+B,EAAE;QAC/B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,oCAAoC;QACxC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,gFAAgF;gBAClF,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,UAAU,EAAE;wBACV,GAAG,EAAE;4BACH,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,KAAK;yBACd;wBACD,GAAG,EAAE;4BACH,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,QAAQ;yBACjB;wBACD,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,KAAK;yBACd;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,SAAS;yBAAC;wBACrB,UAAU,EAAE;4BACV,OAAO,EAAE;gCACP,IAAI,EAAE,OAAO;gCACb,IAAI,EAAE;oCACJ,oCAAoC;oCACpC,gCAAgC;oCAChC,wCAAwC;iCACzC;6BACF;4BACD,QAAQ,EAAE;gCACR,IAAI,EAAE,KAAK;gCACX,GAAG,EAAE,uCAAuC;6BAC7C;4BACD,WAAW,EAAE;gCACX,IAAI,EAAE,KAAK;gCACX,GAAG,EAAE,uCAAuC;6BAC7C;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,6BAA6B,EAAE;QAC7B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,kCAAkC;QACtC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,sDAAsD;gBACnE,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,UAAU,EAAE;wBACV,KAAK,EAAE;4BACL,IAAI,EAAE,QAAQ;yBACf;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;yBACf;wBACD,KAAK,EAAE;4BACL,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,CAAC;4BACV,OAAO,EAAE,GAAG;4BACZ,OAAO,EAAE,EAAE;yBACZ;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,UAAU;yBAAC;wBACtB,UAAU,EAAE;4BACV,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;6BACf;4BACD,QAAQ,EAAE;gCACR,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,wCAAwC;iCAC9C;6BACF;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,wBAAwB,EAAE;QACxB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,6BAA6B;QACjC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EAAE,+CAA+C;gBAC5D,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,cAAc;4BAAE,SAAS;4BAAE,WAAW;yBAAC;wBAClD,UAAU,EAAE;4BACV,YAAY,EAAE;gCACZ,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,KAAK;6BACd;4BACD,OAAO,EAAE;gCACP,IAAI,EAAE,QAAQ;6BACf;4BACD,OAAO,EAAE;gCACP,IAAI,EAAE,QAAQ;6BACf;4BACD,SAAS,EAAE;gCACT,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,KAAK;6BACd;4BACD,OAAO,EAAE;gCACP,IAAI,EAAE,QAAQ;gCACd,WAAW,EACT,sIAAsI;6BACzI;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,MAAM;yBAAC;wBAClB,UAAU,EAAE;4BACV,IAAI,EAAE;gCACJ,IAAI,EAAE,SAAS;6BAChB;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,iCAAiC,EAAE;QACjC,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,sCAAsC;QAC1C,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EAAE,qDAAqD;gBAClE,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,SAAS;4BAAE,OAAO;yBAAC;wBAC9B,UAAU,EAAE;4BACV,OAAO,EAAE;gCACP,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,eAAe;gCACvB,WAAW,EAAE,gCAAgC;6BAC9C;4BACD,KAAK,EAAE;gCACL,IAAI,EAAE,QAAQ;6BACf;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,kCAAkC,EAAE;QAClC,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,uCAAuC;QAC3C,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EAAE,sDAAsD;gBACnE,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,KAAK;4BAAE,QAAQ;yBAAC;wBAC3B,UAAU,EAAE;4BACV,GAAG,EAAE;gCACH,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,KAAK;6BACd;4BACD,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,QAAQ;6BACjB;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,oCAAoC,EAAE;QACpC,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,yCAAyC;QAC7C,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EACT,6DAA6D;gBAC/D,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,KAAK;4BAAE,UAAU;yBAAC;wBAC7B,UAAU,EAAE;4BACV,GAAG,EAAE;gCACH,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,KAAK;6BACd;4BACD,QAAQ,EAAE;gCACR,IAAI,EAAE,QAAQ;6BACf;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,kCAAkC,EAAE;QAClC,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,uCAAuC;QAC3C,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EACT,mFAAmF;gBACrF,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,SAAS;yBAAC;wBACrB,UAAU,EAAE;4BACV,OAAO,EAAE;gCACP,IAAI,EAAE,OAAO;gCACb,IAAI,EAAE;oCACJ,oCAAoC;oCACpC,gCAAgC;oCAChC,wCAAwC;iCACzC;6BACF;4BACD,QAAQ,EAAE;gCACR,IAAI,EAAE,KAAK;gCACX,GAAG,EAAE,uCAAuC;6BAC7C;4BACD,WAAW,EAAE;gCACX,IAAI,EAAE,KAAK;gCACX,GAAG,EAAE,uCAAuC;6BAC7C;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,SAAS;yBAAC;wBACrB,UAAU,EAAE;4BACV,OAAO,EAAE;gCACP,IAAI,EAAE,OAAO;gCACb,IAAI,EAAE;oCACJ,oCAAoC;oCACpC,gCAAgC;oCAChC,wCAAwC;iCACzC;6BACF;4BACD,QAAQ,EAAE;gCACR,IAAI,EAAE,KAAK;gCACX,GAAG,EAAE,uCAAuC;6BAC7C;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,8CAA8C,EAAE;QAC9C,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,mDAAmD;QACvD,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,kHAAkH;gBACpH,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,UAAU,EAAE;4BACV,YAAY,EAAE;gCACZ,WAAW,EACT,wFAAwF;gCAC1F,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,QAAQ;iCACf;6BACF;4BACD,WAAW,EAAE;gCACX,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,QAAQ;iCACf;6BACF;4BACD,mBAAmB,EAAE;gCACnB,IAAI,EAAE,SAAS;6BAChB;4BACD,QAAQ,EAAE;gCACR,IAAI,EAAE,SAAS;6BAChB;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,8CAA8C,EAAE;QAC9C,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,mDAAmD;QACvD,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EACT,4FAA4F;aAC/F;SACF;KACF;IACD,+BAA+B,EAAE;QAC/B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,oCAAoC;QACxC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,2CAA2C;gBACxD,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,QAAQ;qBAAC;oBACpB,UAAU,EAAE;wBACV,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,QAAQ;4BAChB,WAAW,EAAE,wBAAwB;yBACtC;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,KAAK;yBAAC;wBACjB,UAAU,EAAE;4BACV,GAAG,EAAE;gCACH,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,KAAK;6BACd;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,kCAAkC,EAAE;QAClC,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,uCAAuC;QAC3C,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EACT,iFAAiF;gBACnF,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,UAAU,EAAE;4BACV,KAAK,EAAE;gCACL,WAAW,EACT,4EAA4E;gCAC9E,IAAI,EAAE,QAAQ;6BACf;4BACD,YAAY,EAAE;gCACZ,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,QAAQ;iCACf;6BACF;4BACD,WAAW,EAAE;gCACX,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,QAAQ;iCACf;6BACF;4BACD,mBAAmB,EAAE;gCACnB,IAAI,EAAE,SAAS;6BAChB;4BACD,QAAQ,EAAE;gCACR,IAAI,EAAE,SAAS;6BAChB;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,WAAW;yBAAC;wBACvB,UAAU,EAAE;4BACV,SAAS,EAAE;gCACT,IAAI,EAAE,SAAS;gCACf,WAAW,EAAE,6BAA6B;6BAC3C;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,oCAAoC,EAAE;QACpC,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,yCAAyC;QAC7C,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EACT,+JAA+J;gBACjK,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,WAAW;yBAAC;wBACvB,UAAU,EAAE;4BACV,SAAS,EAAE;gCACT,IAAI,EAAE,SAAS;6BAChB;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,8BAA8B,EAAE;QAC9B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,mCAAmC;QACvC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EACT,mJAAmJ;gBACrJ,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,QAAQ;yBAAC;wBACpB,UAAU,EAAE;4BACV,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,QAAQ;gCAChB,WAAW,EAAE,iBAAiB;6BAC/B;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,mBAAmB,EAAE;QACnB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,wBAAwB;QAC5B,IAAI,EAAE;YACJ,KAAK,EAAE;gBACL,IAAI,EAAE,QAAQ;gBACd,WAAW,EACT,2DAA2D;gBAC7D,QAAQ,EAAE;oBAAC,KAAK;oBAAE,KAAK;oBAAE,KAAK;oBAAE,KAAK;iBAAC;gBACtC,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,SAAS;wBACf,WAAW,EAAE,8CAA8C;qBAC5D;oBACD,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;wBACb,WAAW,EAAE,0CAA0C;qBACxD;oBACD,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;wBACb,WAAW,EACT,2FAA2F;qBAC9F;oBACD,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;wBACb,WAAW,EACT,0FAA0F;qBAC7F;oBACD,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,SAAS,EAAE,GAAG;wBACd,WAAW,EACT,2DAA2D;qBAC9D;oBACD,GAAG,EAAE;wBACH,IAAI,EAAE,SAAS;wBACf,WAAW,EACT,kEAAkE;qBACrE;oBACD,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;wBAClB,WAAW,EAAE,wCAAwC;qBACtD;oBACD,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;wBAClB,WAAW,EACT,4DAA4D;qBAC/D;oBACD,GAAG,EAAE;wBACH,IAAI,EAAE,OAAO;wBACb,WAAW,EAAE,sCAAsC;qBACpD;iBACF;aACF;YACD,UAAU,EAAE;gBACV,IAAI,EAAE,QAAQ;gBACd,WAAW,EACT,gFAAgF;gBAClF,QAAQ,EAAE;oBAAC,QAAQ;iBAAC;gBACpB,UAAU,EAAE;oBACV,MAAM,EAAE;wBACN,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE,KAAK;4BACX,GAAG,EAAE,sCAAsC;yBAC5C;wBACD,SAAS,EAAE,EAAE;qBACd;iBACF;aACF;YACD,SAAS,EAAE;gBACT,IAAI,EAAE,QAAQ;gBACd,WAAW,EACT,yIAAyI;gBAC3I,QAAQ,EAAE;oBAAC,KAAK;iBAAC;gBACjB,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,SAAS,EAAE,GAAG;wBACd,WAAW,EACT,2DAA2D;qBAC9D;iBACF;aACF;YACD,oBAAoB,EAAE;gBACpB,IAAI,EAAE,QAAQ;gBACd,WAAW,EACT,wEAAwE;gBAC1E,QAAQ,EAAE;oBAAC,YAAY;oBAAE,UAAU;oBAAE,OAAO;oBAAE,SAAS;iBAAC;gBACxD,UAAU,EAAE;oBACV,UAAU,EAAE;wBACV,IAAI,EAAE,QAAQ;wBACd,WAAW,EACT,0GAA0G;wBAC5G,SAAS,EAAE,GAAG;wBACd,YAAY,EAAE,GAAG;qBAClB;oBACD,QAAQ,EAAE;wBACR,IAAI,EAAE,QAAQ;wBACd,WAAW,EACT,0JAA0J;wBAC5J,WAAW,EAAE;4BAAC,QAAQ;4BAAE,OAAO;4BAAE,MAAM;yBAAC;qBACzC;oBACD,KAAK,EAAE;wBACL,IAAI,EAAE,QAAQ;wBACd,WAAW,EACT,mJAAmJ;wBACrJ,WAAW,EAAE;4BAAC,SAAS;4BAAE,OAAO;4BAAE,MAAM;yBAAC;qBAC1C;oBACD,cAAc,EAAE;wBACd,IAAI,EAAE,QAAQ;wBACd,WAAW,EAAE,qCAAqC;wBAClD,WAAW,EAAE;4BAAC,QAAQ;4BAAE,MAAM;4BAAE,MAAM;yBAAC;wBACvC,OAAO,EAAE,MAAM;qBAChB;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,SAAS;wBACf,WAAW,EACT,oFAAoF;qBACvF;oBACD,OAAO,EAAE;wBACP,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE,KAAK;4BACX,GAAG,EAAE,wDAAwD;yBAC9D;qBACF;iBACF;aACF;YACD,2BAA2B,EAAE;gBAC3B,IAAI,EAAE,QAAQ;gBACd,WAAW,EACT,iFAAiF;gBACnF,QAAQ,EAAE;oBAAC,MAAM;oBAAE,MAAM;oBAAE,aAAa;iBAAC;gBACzC,UAAU,EAAE;oBACV,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;wBACd,WAAW,EACT,wDAAwD;wBAC1D,MAAM,EAAE,UAAU;qBACnB;oBACD,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;wBACd,WAAW,EAAE,4CAA4C;wBACzD,YAAY,EAAE,EAAE;wBAChB,SAAS,EAAE,GAAG;qBACf;oBACD,WAAW,EAAE;wBACX,IAAI,EAAE,QAAQ;wBACd,WAAW,EACT,2EAA2E;wBAC7E,YAAY,EAAE,KAAK;wBACnB,SAAS,EAAE,MAAM;qBAClB;iBACF;aACF;YACD,UAAU,EAAE;gBACV,IAAI,EAAE,QAAQ;gBACd,WAAW,EAAE;oBACX,OAAO;oBACP,aAAa;oBACb,OAAO;oBACP,qBAAqB;oBACrB,gBAAgB;oBAChB,SAAS;oBACT,MAAM;oBACN,QAAQ;oBACR,QAAQ;oBACR,MAAM;oBACN,MAAM;iBACP;aACF;SACF;KACF;IACD,0BAA0B,EAAE;QAC1B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,+BAA+B;QACnC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,6JAA6J;gBAC/J,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,aAAa;qBAAC;oBACzB,UAAU,EAAE;wBACV,WAAW,EAAE;4BACX,IAAI,EAAE,OAAO;4BACb,KAAK,EAAE;gCACL,IAAI,EAAE,QAAQ;6BACf;4BACD,WAAW,EACT,4JAA4J;yBAC/J;wBACD,OAAO,EAAE;4BACP,IAAI,EAAE,OAAO;4BACb,KAAK,EAAE;gCACL,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,KAAK;6BACd;4BACD,WAAW,EACT,qDAAqD;yBACxD;wBACD,KAAK,EAAE;4BACL,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,CAAC;4BACV,OAAO,EAAE,GAAG;4BACZ,OAAO,EAAE,EAAE;yBACZ;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,QAAQ;yBAAC;wBACpB,UAAU,EAAE;4BACV,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;6BACf;4BACD,MAAM,EAAE;gCACN,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,kCAAkC;iCACxC;6BACF;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,8BAA8B,EAAE;QAC9B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,mCAAmC;QACvC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,cAAc;gBACpB,WAAW,EACT,+IAA+I;gBACjJ,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,UAAU,EAAE;wBACV,MAAM,EAAE;4BACN,IAAI,EAAE,SAAS;4BACf,WAAW,EAAE,mDAAmD;yBACjE;qBACF;iBACF;gBACD,OAAO,EAAE;oBACP,MAAM,EAAE;wBACN,IAAI,EAAE,OAAO;wBACb,IAAI,EAAE;4BACJ,8CAA8C;4BAC9C,4CAA4C;yBAC7C;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN;wBACE,IAAI,EAAE,cAAc;qBACrB;iBACF;aACF;YACD,MAAM,EAAE;gBACN,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,KAAK;oBAAE,QAAQ;iBAAC;gBAC3B,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,SAAS;qBAChB;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE,KAAK;4BACX,GAAG,EAAE,kCAAkC;yBACxC;qBACF;iBACF;aACF;YACD,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,MAAM;iBAAC;gBAClB,UAAU,EAAE;oBACV,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;wBACd,WAAW,EAAE;4BAAC,gBAAgB;yBAAC;qBAChC;oBACD,OAAO,EAAE;wBACP,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF;IACD,uBAAuB,EAAE;QACvB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,4BAA4B;QAChC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;gBACd,WAAW,EACT,mUAAmU;gBACrU,GAAG,EAAE,MAAM;gBACX,MAAM,EAAE;oBACN,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,SAAS;qBAAC;oBACrB,UAAU,EAAE;wBACV,OAAO,EAAE;4BACP,IAAI,EAAE,SAAS;4BACf,WAAW,EACT,6GAA6G;yBAChH;qBACF;iBACF;aACF;SACF;KACF;IACD,gCAAgC,EAAE;QAChC,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,qCAAqC;QACzC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EACT,+IAA+I;gBACjJ,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,YAAY;4BAAE,SAAS;yBAAC;wBACnC,UAAU,EAAE;4BACV,UAAU,EAAE;gCACV,IAAI,EAAE,KAAK;gCACX,WAAW,EACT,8DAA8D;gCAChE,GAAG,EAAE,4CAA4C;6BAClD;4BACD,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;gCACd,YAAY,EAAE,IAAI;gCAClB,SAAS,EAAE,KAAK;gCAChB,WAAW,EACT,qDAAqD;6BACxD;4BACD,OAAO,EAAE;gCACP,IAAI,EAAE,OAAO;gCACb,IAAI,EAAE;oCACJ,oCAAoC;oCACpC,gCAAgC;iCACjC;6BACF;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BACR,IAAI;4BACJ,YAAY;4BACZ,SAAS;4BACT,YAAY;4BACZ,WAAW;yBACZ;wBACD,UAAU,EAAE;4BACV,EAAE,EAAE;gCACF,IAAI,EAAE,SAAS;6BAChB;4BACD,UAAU,EAAE;gCACV,IAAI,EAAE,KAAK;gCACX,GAAG,EAAE,4CAA4C;6BAClD;4BACD,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;gCACd,YAAY,EAAE,IAAI;gCAClB,SAAS,EAAE,KAAK;6BACjB;4BACD,OAAO,EAAE;gCACP,IAAI,EAAE,OAAO;gCACb,IAAI,EAAE;oCACJ,oCAAoC;oCACpC,gCAAgC;iCACjC;6BACF;4BACD,UAAU,EAAE;gCACV,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,KAAK;6BACd;4BACD,SAAS,EAAE;gCACT,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,UAAU;6BACnB;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,wBAAwB,EAAE;QACxB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,6BAA6B;QACjC,IAAI,EAAE;YACJ,UAAU,EAAE;gBACV,IAAI,EAAE,QAAQ;gBACd,WAAW,EAAE;oBACX,wCAAwC;oBACxC,6CAA6C;oBAC7C,8CAA8C;oBAC9C,0CAA0C;oBAC1C,wCAAwC;oBACxC,yCAAyC;oBACzC,0CAA0C;iBAC3C;aACF;YACD,UAAU,EAAE;gBACV,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,sDAAsD;aACpE;YACD,eAAe,EAAE;gBACf,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,0DAA0D;aACxE;YACD,gBAAgB,EAAE;gBAChB,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,8CAA8C;aAC5D;YACD,YAAY,EAAE;gBACZ,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,uCAAuC;aACrD;YACD,UAAU,EAAE;gBACV,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,8DAA8D;aACjE;YACD,WAAW,EAAE;gBACX,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,0DAA0D;aACxE;YACD,YAAY,EAAE;gBACZ,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,qDAAqD;aACnE;SACF;KACF;IACD,yBAAyB,EAAE;QACzB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,8BAA8B;QAClC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EACT,2GAA2G;gBAC7G,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,MAAM;4BAAE,QAAQ;yBAAC;wBAC5B,UAAU,EAAE;4BACV,IAAI,EAAE;gCACJ,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,eAAe;gCACvB,WAAW,EACT,uDAAuD;6BAC1D;4BACD,QAAQ,EAAE;gCACR,IAAI,EAAE,SAAS;gCACf,WAAW,EACT,yKAAyK;6BAC5K;4BACD,MAAM,EAAE;gCACN,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,OAAO;oCACb,IAAI,EAAE;wCACJ,yCAAyC;wCACzC,yCAAyC;wCACzC,yCAAyC;qCAC1C;oCACD,MAAM,EAAE,IAAI;iCACb;6BACF;4BACD,UAAU,EAAE;gCACV,IAAI,EAAE,QAAQ;gCACd,WAAW,EACT,mJAAmJ;gCACrJ,MAAM,EAAE,KAAK;6BACd;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE,EAAE;wBACZ,UAAU,EAAE;4BACV,MAAM,EAAE;gCACN,IAAI,EAAE,KAAK;gCACX,GAAG,EAAE,sCAAsC;6BAC5C;4BACD,OAAO,EAAE;gCACP,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,OAAO;oCACb,IAAI,EAAE;wCACJ,+CAA+C;wCAC/C,+CAA+C;wCAC/C,+CAA+C;qCAChD;oCACD,MAAM,EAAE,IAAI;iCACb;6BACF;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN;wBACE,IAAI,EAAE,aAAa;wBACnB,WAAW,EACT,yEAAyE;qBAC5E;iBACF;aACF;YACD,MAAM,EAAE;gBACN,IAAI,EAAE,QAAQ;gBACd,WAAW,EAAE,uCAAuC;gBACpD,QAAQ,EAAE;oBAAC,YAAY;oBAAE,OAAO;iBAAC;gBACjC,UAAU,EAAE;oBACV,UAAU,EAAE;wBACV,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,MAAM;qBACf;oBACD,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;wBACd,SAAS,EAAE,GAAG;qBACf;oBACD,KAAK,EAAE;wBACL,IAAI,EAAE,SAAS;qBAChB;iBACF;aACF;YACD,MAAM,EAAE;gBACN,IAAI,EAAE,QAAQ;gBACd,WAAW,EAAE,6CAA6C;gBAC1D,QAAQ,EAAE;oBAAC,YAAY;oBAAE,MAAM;oBAAE,OAAO;iBAAC;gBACzC,UAAU,EAAE;oBACV,UAAU,EAAE;wBACV,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,MAAM;qBACf;oBACD,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;oBACD,KAAK,EAAE;wBACL,IAAI,EAAE,SAAS;qBAChB;iBACF;aACF;YACD,MAAM,EAAE;gBACN,IAAI,EAAE,QAAQ;gBACd,WAAW,EAAE,6CAA6C;gBAC1D,QAAQ,EAAE;oBAAC,YAAY;oBAAE,MAAM;iBAAC;gBAChC,UAAU,EAAE;oBACV,UAAU,EAAE;wBACV,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,MAAM;qBACf;oBACD,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;YACD,YAAY,EAAE;gBACZ,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,KAAK;oBAAE,KAAK;iBAAC;gBACxB,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,QAAQ;qBACjB;oBACD,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,gBAAgB,EAAE;wBAChB,IAAI,EAAE,QAAQ;wBACd,WAAW,EAAE;4BAAC,OAAO;4BAAE,SAAS;yBAAC;qBAClC;iBACF;aACF;YACD,YAAY,EAAE;gBACZ,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,KAAK;oBAAE,KAAK;iBAAC;gBACxB,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,QAAQ;qBACjB;oBACD,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,gBAAgB,EAAE;wBAChB,IAAI,EAAE,QAAQ;wBACd,WAAW,EAAE;4BAAC,OAAO;4BAAE,SAAS;yBAAC;qBAClC;iBACF;aACF;YACD,YAAY,EAAE;gBACZ,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE,EAAE;gBACZ,UAAU,EAAE,CAAA,CAAE;aACf;SACF;KACF;IACD,0BAA0B,EAAE;QAC1B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,+BAA+B;QACnC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EACT,2EAA2E;gBAC7E,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,MAAM;4BAAE,YAAY;4BAAE,QAAQ;yBAAC;wBAC1C,UAAU,EAAE;4BACV,IAAI,EAAE;gCACJ,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,eAAe;gCACvB,WAAW,EACT,uDAAuD;6BAC1D;4BACD,UAAU,EAAE;gCACV,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,MAAM;gCACd,WAAW,EAAE,oCAAoC;6BAClD;4BACD,IAAI,EAAE;gCACJ,IAAI,EAAE,QAAQ;gCACd,WAAW,EAAE,iBAAiB;gCAC9B,SAAS,EAAE,GAAG;6BACf;4BACD,QAAQ,EAAE;gCACR,IAAI,EAAE,SAAS;gCACf,WAAW,EACT,mJAAmJ;6BACtJ;4BACD,MAAM,EAAE;gCACN,IAAI,EAAE,SAAS;gCACf,WAAW,EAAE,gDAAgD;6BAC9D;4BACD,UAAU,EAAE;gCACV,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,KAAK;gCACb,WAAW,EACT,mDAAmD;6BACtD;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,KAAK;4BAAE,KAAK;yBAAC;wBACxB,UAAU,EAAE;4BACV,GAAG,EAAE;gCACH,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,QAAQ;6BACjB;4BACD,GAAG,EAAE;gCACH,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,KAAK;6BACd;4BACD,MAAM,EAAE;gCACN,IAAI,EAAE,KAAK;gCACX,GAAG,EAAE,sCAAsC;6BAC5C;4BACD,gBAAgB,EAAE;gCAChB,IAAI,EAAE,QAAQ;gCACd,WAAW,EAAE;oCAAC,OAAO;oCAAE,SAAS;iCAAC;6BAClC;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN;wBACE,IAAI,EAAE,aAAa;wBACnB,WAAW,EACT,+DAA+D;qBAClE;iBACF;aACF;SACF;KACF;IACD,kBAAkB,EAAE;QAClB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,uBAAuB;QAC3B,IAAI,EAAE;YACJ,UAAU,EAAE;gBACV,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,KAAK;oBAAE,KAAK;iBAAC;gBACxB,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF;IACD,0BAA0B,EAAE;QAC1B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,+BAA+B;QACnC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EACT,4FAA4F;gBAC9F,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,MAAM;4BAAE,YAAY;4BAAE,MAAM;yBAAC;wBACxC,UAAU,EAAE;4BACV,IAAI,EAAE;gCACJ,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,eAAe;gCACvB,WAAW,EACT,uDAAuD;6BAC1D;4BACD,UAAU,EAAE;gCACV,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,MAAM;gCACd,WAAW,EAAE,oCAAoC;6BAClD;4BACD,IAAI,EAAE;gCACJ,IAAI,EAAE,QAAQ;gCACd,WAAW,EAAE,iBAAiB;6BAC/B;4BACD,UAAU,EAAE;gCACV,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,KAAK;gCACb,WAAW,EACT,mDAAmD;6BACtD;4BACD,UAAU,EAAE;gCACV,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,KAAK;gCACb,WAAW,EACT,mDAAmD;6BACtD;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,UAAU,EAAE;4BACV,MAAM,EAAE;gCACN,IAAI,EAAE,KAAK;gCACX,GAAG,EAAE,sCAAsC;6BAC5C;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN;wBACE,IAAI,EAAE,aAAa;qBACpB;iBACF;aACF;SACF;KACF;IACD,0BAA0B,EAAE;QAC1B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,+BAA+B;QACnC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,4GAA4G;gBAC9G,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,MAAM;qBAAC;oBAClB,UAAU,EAAE;wBACV,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,eAAe;4BACvB,WAAW,EAAE,gCAAgC;yBAC9C;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BACR,QAAQ;4BACR,KAAK;4BACL,QAAQ;4BACR,aAAa;4BACb,iBAAiB;yBAClB;wBACD,UAAU,EAAE;4BACV,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,QAAQ;6BACjB;4BACD,GAAG,EAAE;gCACH,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,KAAK;6BACd;4BACD,MAAM,EAAE;gCACN,IAAI,EAAE,SAAS;gCACf,WAAW,EAAE,6CAA6C;6BAC3D;4BACD,WAAW,EAAE;gCACX,IAAI,EAAE,OAAO;gCACb,WAAW,EACT,uFAAuF;gCACzF,KAAK,EAAE;oCACL,IAAI,EAAE,QAAQ;oCACd,MAAM,EAAE,MAAM;iCACf;6BACF;4BACD,eAAe,EAAE;gCACf,IAAI,EAAE,SAAS;gCACf,WAAW,EACT,oEAAoE;6BACvE;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,uBAAuB,EAAE;QACvB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,4BAA4B;QAChC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,+DAA+D;gBACjE,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,MAAM;wBAAE,YAAY;wBAAE,MAAM;qBAAC;oBACxC,UAAU,EAAE;wBACV,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,eAAe;4BACvB,WAAW,EAAE,gCAAgC;yBAC9C;wBACD,UAAU,EAAE;4BACV,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,MAAM;4BACd,WAAW,EAAE,oCAAoC;yBAClD;wBACD,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;4BACd,WAAW,EAAE,iBAAiB;yBAC/B;wBACD,GAAG,EAAE;4BACH,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,KAAK;4BACb,WAAW,EACT,8FAA8F;yBACjG;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,KAAK;4BAAE,OAAO;yBAAC;wBAC1B,UAAU,EAAE;4BACV,GAAG,EAAE;gCACH,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,QAAQ;6BACjB;4BACD,GAAG,EAAE;gCACH,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,KAAK;6BACd;4BACD,KAAK,EAAE;gCACL,IAAI,EAAE,SAAS;6BAChB;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN;wBACE,IAAI,EAAE,gBAAgB;qBACvB;iBACF;aACF;SACF;KACF;IACD,wBAAwB,EAAE;QACxB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,6BAA6B;QACjC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EACT,yFAAyF;gBAC3F,KAAK,EAAE;oBACL,QAAQ,EAAE,0BAA0B;iBACrC;aACF;SACF;KACF;IACD,8BAA8B,EAAE;QAC9B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,mCAAmC;QACvC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,gHAAgH;gBAClH,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,UAAU,EAAE;wBACV,KAAK,EAAE;4BACL,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,CAAC;4BACV,OAAO,EAAE,IAAI;4BACb,OAAO,EAAE,GAAG;yBACb;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,OAAO;yBAAC;wBACnB,UAAU,EAAE;4BACV,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;6BACf;4BACD,KAAK,EAAE;gCACL,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,kDAAkD;iCACxD;6BACF;yBACF;qBACF;iBACF;aACF;YACD,UAAU,EAAE;gBACV,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,KAAK;oBAAE,WAAW;iBAAC;gBAC9B,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,QAAQ;qBACjB;iBACF;aACF;SACF;KACF;IACD,yBAAyB,EAAE;QACzB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,8BAA8B;QAClC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,iGAAiG;gBACnG,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,MAAM;wBAAE,YAAY;qBAAC;oBAChC,UAAU,EAAE;wBACV,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,eAAe;4BACvB,WAAW,EAAE,gCAAgC;yBAC9C;wBACD,UAAU,EAAE;4BACV,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,MAAM;4BACd,WAAW,EAAE,8BAA8B;yBAC5C;wBACD,KAAK,EAAE;4BACL,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,CAAC;4BACV,OAAO,EAAE,GAAG;4BACZ,OAAO,EAAE,EAAE;4BACX,WAAW,EAAE,kCAAkC;yBAChD;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;yBACf;wBACD,SAAS,EAAE;4BACT,IAAI,EAAE,QAAQ;4BACd,WAAW,EACT,oEAAoE;yBACvE;wBACD,OAAO,EAAE;4BACP,IAAI,EAAE,QAAQ;4BACd,WAAW,EACT,kEAAkE;yBACrE;wBACD,OAAO,EAAE;4BACP,IAAI,EAAE,SAAS;4BACf,WAAW,EAAE,oDAAoD;yBAClE;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,SAAS;yBAAC;wBACrB,UAAU,EAAE;4BACV,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;6BACf;4BACD,OAAO,EAAE;gCACP,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,yCAAyC;iCAC/C;6BACF;yBACF;qBACF;iBACF;aACF;YACD,MAAM,EAAE;gBACN,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,KAAK;oBAAE,KAAK;oBAAE,OAAO;iBAAC;gBACjC,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,QAAQ;qBACjB;oBACD,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,KAAK,EAAE;wBACL,IAAI,EAAE,SAAS;qBAChB;iBACF;aACF;SACF;KACF;IACD,uBAAuB,EAAE;QACvB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,4BAA4B;QAChC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EACT,kGAAkG;gBACpG,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,MAAM;4BAAE,YAAY;4BAAE,MAAM;4BAAE,QAAQ;yBAAC;wBAClD,QAAQ,EAAE;4BAAC,YAAY;yBAAC;wBACxB,UAAU,EAAE;4BACV,IAAI,EAAE;gCACJ,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,eAAe;gCACvB,WAAW,EACT,uDAAuD;6BAC1D;4BACD,UAAU,EAAE;gCACV,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,MAAM;gCACd,WAAW,EAAE,oCAAoC;6BAClD;4BACD,IAAI,EAAE;gCACJ,IAAI,EAAE,QAAQ;gCACd,WAAW,EAAE,iBAAiB;gCAC9B,SAAS,EAAE,GAAG;6BACf;4BACD,QAAQ,EAAE;gCACR,IAAI,EAAE,SAAS;gCACf,WAAW,EACT,mJAAmJ;6BACtJ;4BACD,MAAM,EAAE;gCACN,IAAI,EAAE,SAAS;gCACf,WAAW,EAAE,sBAAsB;6BACpC;4BACD,UAAU,EAAE;gCACV,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,KAAK;gCACb,WAAW,EACT,uIAAuI;6BAC1I;4BACD,UAAU,EAAE;gCACV,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,KAAK;gCACb,WAAW,EACT,mDAAmD;6BACtD;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,KAAK;4BAAE,KAAK;yBAAC;wBACxB,UAAU,EAAE;4BACV,GAAG,EAAE;gCACH,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,QAAQ;6BACjB;4BACD,GAAG,EAAE;gCACH,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,KAAK;6BACd;4BACD,MAAM,EAAE;gCACN,IAAI,EAAE,KAAK;gCACX,GAAG,EAAE,sCAAsC;6BAC5C;4BACD,gBAAgB,EAAE;gCAChB,IAAI,EAAE,QAAQ;gCACd,WAAW,EAAE;oCAAC,OAAO;oCAAE,SAAS;iCAAC;6BAClC;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN;wBACE,IAAI,EAAE,aAAa;qBACpB;iBACF;aACF;SACF;KACF;IACD,uBAAuB,EAAE;QACvB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,4BAA4B;QAChC,WAAW,EAAE,wCAAwC;QACrD,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,KAAK;oBAAE,KAAK;iBAAC;gBACxB,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,QAAQ;qBACjB;oBACD,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;iBACF;aACF;SACF;KACF;IACD,wBAAwB,EAAE;QACxB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,6BAA6B;QACjC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EACT,2QAA2Q;gBAC7Q,KAAK,EAAE;oBACL,QAAQ,EAAE,KAAK;iBAChB;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,MAAM;yBAAC;wBAClB,UAAU,EAAE;4BACV,IAAI,EAAE;gCACJ,IAAI,EAAE,MAAM;6BACb;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,+BAA+B,EAAE;QAC/B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,oCAAoC;QACxC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EACT,2IAA2I;aAC9I;SACF;KACF;IACD,kCAAkC,EAAE;QAClC,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,uCAAuC;QAC3C,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,iNAAiN;gBACnN,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BACR,WAAW;4BACX,UAAU;4BACV,YAAY;4BACZ,SAAS;4BACT,YAAY;4BACZ,gBAAgB;4BAChB,oBAAoB;4BACpB,eAAe;4BACf,eAAe;yBAChB;wBACD,UAAU,EAAE;4BACV,SAAS,EAAE;gCACT,IAAI,EAAE,SAAS;6BAChB;4BACD,QAAQ,EAAE;gCACR,IAAI,EAAE,SAAS;6BAChB;4BACD,UAAU,EAAE;gCACV,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,KAAK;6BACd;4BACD,OAAO,EAAE;gCACP,IAAI,EAAE,QAAQ;6BACf;4BACD,UAAU,EAAE;gCACV,IAAI,EAAE,SAAS;6BAChB;4BACD,cAAc,EAAE;gCACd,IAAI,EAAE,SAAS;6BAChB;4BACD,kBAAkB,EAAE;gCAClB,IAAI,EAAE,SAAS;6BAChB;4BACD,aAAa,EAAE;gCACb,IAAI,EAAE,SAAS;6BAChB;4BACD,aAAa,EAAE;gCACb,IAAI,EAAE,SAAS;6BAChB;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,4BAA4B,EAAE;QAC5B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,iCAAiC;QACrC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EACT,kFAAkF;gBACpF,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,OAAO;4BAAE,OAAO;yBAAC;wBAC5B,UAAU,EAAE;4BACV,KAAK,EAAE;gCACL,IAAI,EAAE,QAAQ;6BACf;4BACD,KAAK,EAAE;gCACL,IAAI,EAAE,QAAQ;6BACf;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN;wBACE,IAAI,EAAE,iBAAiB;qBACxB;oBACD;wBACE,IAAI,EAAE,cAAc;qBACrB;oBACD;wBACE,IAAI,EAAE,cAAc;qBACrB;oBACD;wBACE,IAAI,EAAE,cAAc;qBACrB;iBACF;aACF;SACF;KACF;IACD,6BAA6B,EAAE;QAC7B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,kCAAkC;QACtC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EAAE,wCAAwC;gBACrD,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,QAAQ;yBAAC;wBACpB,UAAU,EAAE;4BACV,KAAK,EAAE;gCACL,IAAI,EAAE,QAAQ;6BACf;4BACD,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,QAAQ;gCAChB,WAAW,EAAE,mCAAmC;6BACjD;4BACD,GAAG,EAAE;gCACH,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,KAAK;gCACb,WAAW,EACT,4DAA4D;6BAC/D;4BACD,UAAU,EAAE;gCACV,IAAI,EAAE,QAAQ;6BACf;4BACD,gBAAgB,EAAE;gCAChB,IAAI,EAAE,QAAQ;6BACf;4BACD,iBAAiB,EAAE;gCACjB,IAAI,EAAE,QAAQ;6BACf;4BACD,QAAQ,EAAE;gCACR,IAAI,EAAE,QAAQ;gCACd,WAAW,EACT,8FAA8F;6BACjG;4BACD,WAAW,EAAE;gCACX,IAAI,EAAE,QAAQ;gCACd,WAAW,EACT,oFAAoF;6BACvF;4BACD,KAAK,EAAE;gCACL,IAAI,EAAE,SAAS;gCACf,WAAW,EACT,4LAA4L;6BAC/L;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,WAAW,EACT,gEAAgE;wBAClE,QAAQ,EAAE;4BAAC,WAAW;4BAAE,YAAY;4BAAE,QAAQ;4BAAE,KAAK;yBAAC;wBACtD,UAAU,EAAE;4BACV,SAAS,EAAE;gCACT,IAAI,EAAE,QAAQ;6BACf;4BACD,UAAU,EAAE;gCACV,IAAI,EAAE,QAAQ;6BACf;4BACD,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,QAAQ;6BACjB;4BACD,GAAG,EAAE;gCACH,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,KAAK;gCACb,WAAW,EAAE,6BAA6B;6BAC3C;4BACD,MAAM,EAAE;gCACN,IAAI,EAAE,SAAS;gCACf,WAAW,EAAE,wBAAwB;6BACtC;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN;wBACE,IAAI,EAAE,eAAe;qBACtB;oBACD;wBACE,IAAI,EAAE,iBAAiB;qBACxB;oBACD;wBACE,IAAI,EAAE,mBAAmB;qBAC1B;oBACD;wBACE,IAAI,EAAE,oBAAoB;qBAC3B;oBACD;wBACE,IAAI,EAAE,mBAAmB;qBAC1B;oBACD;wBACE,IAAI,EAAE,iBAAiB;qBACxB;oBACD;wBACE,IAAI,EAAE,oBAAoB;qBAC3B;iBACF;aACF;SACF;KACF;IACD,iCAAiC,EAAE;QACjC,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,sCAAsC;QAC1C,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EAAE,yBAAyB;gBACtC,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,MAAM;yBAAC;wBAClB,UAAU,EAAE;4BACV,IAAI,EAAE;gCACJ,IAAI,EAAE,QAAQ;gCACd,WAAW,EACT,8DAA8D;6BACjE;4BACD,UAAU,EAAE;gCACV,IAAI,EAAE,SAAS;gCACf,WAAW,EACT,qHAAqH;6BACxH;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,sDAAsD;qBAC5D;iBACF;gBACD,MAAM,EAAE;oBACN;wBACE,IAAI,EAAE,iBAAiB;qBACxB;iBACF;aACF;YACD,WAAW,EAAE;gBACX,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,MAAM;oBAAE,UAAU;oBAAE,WAAW;iBAAC;gBAC3C,UAAU,EAAE;oBACV,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;oBACD,QAAQ,EAAE;wBACR,IAAI,EAAE,QAAQ;qBACf;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;oBACD,UAAU,EAAE;wBACV,IAAI,EAAE,SAAS;qBAChB;iBACF;aACF;SACF;KACF;IACD,gCAAgC,EAAE;QAChC,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,qCAAqC;QACzC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EAAE,wBAAwB;gBACrC,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,UAAU;yBAAC;wBACtB,UAAU,EAAE;4BACV,QAAQ,EAAE;gCACR,IAAI,EAAE,SAAS;6BAChB;4BACD,UAAU,EAAE;gCACV,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,KAAK;6BACd;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,MAAM;yBAAC;wBAClB,UAAU,EAAE;4BACV,IAAI,EAAE;gCACJ,IAAI,EAAE,QAAQ;6BACf;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,iCAAiC,EAAE;QACjC,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,sCAAsC;QAC1C,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EAAE,sBAAsB;gBACnC,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,WAAW;4BAAE,UAAU;yBAAC;wBACnC,UAAU,EAAE;4BACV,SAAS,EAAE;gCACT,IAAI,EAAE,SAAS;gCACf,OAAO,EAAE,CAAC;6BACX;4BACD,QAAQ,EAAE;gCACR,IAAI,EAAE,SAAS;6BAChB;4BACD,WAAW,EAAE;gCACX,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,QAAQ;oCACd,MAAM,EAAE,KAAK;iCACd;6BACF;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,OAAO;yBAAC;wBACnB,UAAU,EAAE;4BACV,KAAK,EAAE;gCACL,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,uDAAuD;iCAC7D;6BACF;yBACF;qBACF;iBACF;aACF;YACD,YAAY,EAAE;gBACZ,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,SAAS;oBAAE,OAAO;iBAAC;gBAC9B,UAAU,EAAE;oBACV,OAAO,EAAE;wBACP,IAAI,EAAE,QAAQ;qBACf;oBACD,KAAK,EAAE;wBACL,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;aACF;SACF;KACF;IACD,6BAA6B,EAAE;QAC7B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,kCAAkC;QACtC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EAAE,mCAAmC;gBAChD,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,YAAY;4BAAE,UAAU;yBAAC;wBACpC,UAAU,EAAE;4BACV,UAAU,EAAE;gCACV,IAAI,EAAE,QAAQ;gCACd,WAAW,EACT,iFAAiF;6BACpF;4BACD,QAAQ,EAAE;gCACR,IAAI,EAAE,QAAQ;6BACf;4BACD,eAAe,EAAE;gCACf,IAAI,EAAE,QAAQ;6BACf;4BACD,cAAc,EAAE;gCACd,IAAI,EAAE,SAAS;gCACf,WAAW,EACT,2HAA2H;6BAC9H;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,WAAW;4BAAE,YAAY;4BAAE,QAAQ;4BAAE,KAAK;yBAAC;wBACtD,UAAU,EAAE;4BACV,SAAS,EAAE;gCACT,IAAI,EAAE,QAAQ;6BACf;4BACD,UAAU,EAAE;gCACV,IAAI,EAAE,QAAQ;6BACf;4BACD,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,QAAQ;6BACjB;4BACD,GAAG,EAAE;gCACH,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,KAAK;6BACd;4BACD,MAAM,EAAE;gCACN,IAAI,EAAE,SAAS;6BAChB;4BACD,KAAK,EAAE;gCACL,IAAI,EAAE,QAAQ;6BACf;4BACD,cAAc,EAAE;gCACd,IAAI,EAAE,SAAS;6BAChB;4BACD,eAAe,EAAE;gCACf,IAAI,EAAE,SAAS;6BAChB;4BACD,MAAM,EAAE;gCACN,IAAI,EAAE,SAAS;6BAChB;4BACD,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;gCACd,WAAW,EACT,+NAA+N;gCACjO,WAAW,EAAE;oCAAC,WAAW;oCAAE,WAAW;oCAAE,aAAa;iCAAC;6BACvD;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN;wBACE,IAAI,EAAE,iBAAiB;qBACxB;oBACD;wBACE,IAAI,EAAE,yBAAyB;qBAChC;iBACF;aACF;SACF;KACF;IACD,iCAAiC,EAAE;QACjC,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,sCAAsC;QAC1C,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EACT,wNAAwN;gBAC1N,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,UAAU,EAAE;4BACV,WAAW,EAAE;gCACX,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,UAAU;gCAClB,WAAW,EACT,0GAA0G;6BAC7G;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,oBAAoB,EAAE;QACpB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,yBAAyB;QAC7B,IAAI,EAAE;YACJ,UAAU,EAAE;gBACV,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBACR,MAAM;oBACN,WAAW;oBACX,UAAU;oBACV,YAAY;oBACZ,WAAW;oBACX,WAAW;oBACX,MAAM;iBACP;gBACD,UAAU,EAAE;oBACV,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,SAAS;qBAChB;oBACD,QAAQ,EAAE;wBACR,IAAI,EAAE,SAAS;qBAChB;oBACD,UAAU,EAAE;wBACV,IAAI,EAAE,QAAQ;qBACf;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;qBACf;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;oBACD,IAAI,EAAE;wBACJ,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE,KAAK;4BACX,GAAG,EAAE,2CAA2C;yBACjD;qBACF;iBACF;aACF;YACD,aAAa,EAAE;gBACb,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,QAAQ;oBAAE,QAAQ;iBAAC;gBAC9B,UAAU,EAAE;oBACV,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;iBACF;aACF;SACF;KACF;IACD,6BAA6B,EAAE;QAC7B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,kCAAkC;QACtC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EACT,2HAA2H;gBAC7H,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,KAAK;4BAAE,UAAU;4BAAE,OAAO;yBAAC;wBACtC,UAAU,EAAE;4BACV,GAAG,EAAE;gCACH,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,KAAK;6BACd;4BACD,QAAQ,EAAE;gCACR,IAAI,EAAE,QAAQ;6BACf;4BACD,KAAK,EAAE;gCACL,IAAI,EAAE,QAAQ;6BACf;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN;wBACE,IAAI,EAAE,cAAc;qBACrB;oBACD;wBACE,IAAI,EAAE,cAAc;qBACrB;iBACF;aACF;SACF;KACF;IACD,6BAA6B,EAAE;QAC7B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,kCAAkC;QACtC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EAAE,4CAA4C;aAC1D;SACF;KACF;IACD,8BAA8B,EAAE;QAC9B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,mCAAmC;QACvC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,4FAA4F;gBAC9F,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,KAAK;4BAAE,sBAAsB;yBAAC;wBACzC,UAAU,EAAE;4BACV,kBAAkB,EAAE;gCAClB,IAAI,EAAE,SAAS;gCACf,WAAW,EACT,iFAAiF;6BACpF;4BACD,yBAAyB,EAAE;gCACzB,IAAI,EAAE,SAAS;gCACf,WAAW,EACT,6FAA6F;6BAChG;4BACD,oBAAoB,EAAE;gCACpB,IAAI,EAAE,OAAO;gCACb,WAAW,EACT,8DAA8D;gCAChE,KAAK,EAAE;oCACL,IAAI,EAAE,QAAQ;iCACf;6BACF;4BACD,KAAK,EAAE;gCACL,IAAI,EAAE,KAAK;gCACX,WAAW,EAAE,mCAAmC;gCAChD,GAAG,EAAE,6CAA6C;6BACnD;4BACD,OAAO,EAAE;gCACP,IAAI,EAAE,KAAK;gCACX,WAAW,EAAE,qBAAqB;gCAClC,GAAG,EAAE,+CAA+C;6BACrD;4BACD,GAAG,EAAE;gCACH,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,KAAK;6BACd;yBACF;qBACF;iBACF;aACF;YACD,KAAK,EAAE;gBACL,IAAI,EAAE,QAAQ;gBACd,UAAU,EAAE;oBACV,aAAa,EAAE;wBACb,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,cAAc,EAAE;wBACd,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;iBACF;aACF;YACD,OAAO,EAAE;gBACP,IAAI,EAAE,QAAQ;gBACd,UAAU,EAAE;oBACV,KAAK,EAAE;wBACL,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF;IACD,qCAAqC,EAAE;QACrC,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,0CAA0C;QAC9C,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,8DAA8D;gBAChE,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,UAAU,EAAE;wBACV,WAAW,EAAE;4BACX,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,IAAI;yBACd;wBACD,eAAe,EAAE;4BACf,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,IAAI;4BACb,WAAW,EACT,gFAAgF;yBACnF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,OAAO;yBAAC;wBACnB,UAAU,EAAE;4BACV,KAAK,EAAE;gCACL,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,wCAAwC;iCAC9C;6BACF;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN;wBACE,IAAI,EAAE,iBAAiB;qBACxB;iBACF;aACF;SACF;KACF;IACD,8BAA8B,EAAE;QAC9B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,mCAAmC;QACvC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,+EAA+E;gBACjF,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,KAAK;qBAAC;oBACjB,UAAU,EAAE;wBACV,GAAG,EAAE;4BACH,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,KAAK;4BACb,WAAW,EACT,yEAAyE;yBAC5E;wBACD,GAAG,EAAE;4BACH,IAAI,EAAE,SAAS;4BACf,WAAW,EACT,oLAAoL;yBACvL;wBACD,GAAG,EAAE;4BACH,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,MAAM;4BACd,WAAW,EACT,sDAAsD;yBACzD;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,OAAO;yBAAC;wBACnB,UAAU,EAAE;4BACV,KAAK,EAAE;gCACL,IAAI,EAAE,QAAQ;6BACf;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN;wBACE,IAAI,EAAE,eAAe;wBACrB,WAAW,EACT,4HAA4H;qBAC/H;iBACF;aACF;SACF;KACF;IACD,0BAA0B,EAAE;QAC1B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,+BAA+B;QACnC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,gEAAgE;gBAClE,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,QAAQ;4BAAE,KAAK;yBAAC;wBAC3B,UAAU,EAAE;4BACV,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,QAAQ;6BACjB;4BACD,GAAG,EAAE;gCACH,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,KAAK;6BACd;4BACD,KAAK,EAAE;gCACL,IAAI,EAAE,QAAQ;6BACf;4BACD,cAAc,EAAE;gCACd,IAAI,EAAE,SAAS;6BAChB;4BACD,eAAe,EAAE;gCACf,IAAI,EAAE,SAAS;6BAChB;4BACD,MAAM,EAAE;gCACN,IAAI,EAAE,SAAS;6BAChB;4BACD,MAAM,EAAE;gCACN,IAAI,EAAE,SAAS;6BAChB;4BACD,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;gCACd,WAAW,EACT,+NAA+N;gCACjO,WAAW,EAAE;oCAAC,WAAW;oCAAE,WAAW;oCAAE,aAAa;iCAAC;6BACvD;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,gCAAgC,EAAE;QAChC,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,qCAAqC;QACzC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,yBAAyB;gBACtC,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,WAAW;yBAAC;wBACvB,UAAU,EAAE;4BACV,SAAS,EAAE;gCACT,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,qDAAqD;iCAC3D;6BACF;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN;wBACE,IAAI,EAAE,iBAAiB;qBACxB;iBACF;aACF;YACD,WAAW,EAAE;gBACX,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,MAAM;oBAAE,WAAW;iBAAC;gBAC/B,UAAU,EAAE;oBACV,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;oBACD,UAAU,EAAE;wBACV,IAAI,EAAE,SAAS;qBAChB;iBACF;aACF;SACF;KACF;IACD,8BAA8B,EAAE;QAC9B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,mCAAmC;QACvC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EACT,gGAAgG;gBAClG,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,WAAW;4BAAE,YAAY;4BAAE,QAAQ;4BAAE,KAAK;yBAAC;wBACtD,UAAU,EAAE;4BACV,SAAS,EAAE;gCACT,IAAI,EAAE,QAAQ;6BACf;4BACD,UAAU,EAAE;gCACV,IAAI,EAAE,QAAQ;6BACf;4BACD,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,QAAQ;6BACjB;4BACD,GAAG,EAAE;gCACH,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,KAAK;6BACd;4BACD,MAAM,EAAE;gCACN,IAAI,EAAE,SAAS;6BAChB;4BACD,MAAM,EAAE;gCACN,IAAI,EAAE,SAAS;6BAChB;4BACD,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;gCACd,WAAW,EACT,wEAAwE;gCAC1E,WAAW,EAAE;oCAAC,WAAW;oCAAE,WAAW;oCAAE,aAAa;iCAAC;6BACvD;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN;wBACE,IAAI,EAAE,iBAAiB;qBACxB;iBACF;aACF;SACF;KACF;IACD,oCAAoC,EAAE;QACpC,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,yCAAyC;QAC7C,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EAAE,6CAA6C;aAC3D;SACF;KACF;IACD,wCAAwC,EAAE;QACxC,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,6CAA6C;QACjD,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EACT,6DAA6D;aAChE;SACF;KACF;IACD,kCAAkC,EAAE;QAClC,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,uCAAuC;QAC3C,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EAAE,2CAA2C;gBACxD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,eAAe;yBAAC;wBAC3B,UAAU,EAAE;4BACV,aAAa,EAAE;gCACb,IAAI,EAAE,SAAS;6BAChB;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,oCAAoC,EAAE;QACpC,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,yCAAyC;QAC7C,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EAAE,mDAAmD;gBAChE,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,OAAO;yBAAC;wBACnB,UAAU,EAAE;4BACV,KAAK,EAAE;gCACL,IAAI,EAAE,QAAQ;6BACf;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,iCAAiC,EAAE;QACjC,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,sCAAsC;QAC1C,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EACT,0RAA0R;gBAC5R,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,UAAU,EAAE;4BACV,GAAG,EAAE;gCACH,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,KAAK;gCACb,WAAW,EAAE,+BAA+B;6BAC7C;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,YAAY;yBAAC;wBACxB,UAAU,EAAE;4BACV,UAAU,EAAE;gCACV,IAAI,EAAE,QAAQ;gCACd,WAAW,EACT,wEAAwE;6BAC3E;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,6BAA6B,EAAE;QAC7B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,kCAAkC;QACtC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EAAE,8CAA8C;gBAC3D,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,OAAO;4BAAE,UAAU;yBAAC;wBAC/B,UAAU,EAAE;4BACV,KAAK,EAAE;gCACL,IAAI,EAAE,QAAQ;6BACf;4BACD,QAAQ,EAAE;gCACR,IAAI,EAAE,QAAQ;6BACf;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN;wBACE,IAAI,EAAE,cAAc;qBACrB;oBACD;wBACE,IAAI,EAAE,cAAc;qBACrB;iBACF;aACF;SACF;KACF;IACD,iCAAiC,EAAE;QACjC,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,sCAAsC;QAC1C,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EAAE,iCAAiC;gBAC9C,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,MAAM;yBAAC;wBAClB,UAAU,EAAE;4BACV,IAAI,EAAE;gCACJ,IAAI,EAAE,QAAQ;6BACf;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,2BAA2B,EAAE;QAC3B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,gCAAgC;QACpC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EAAE,4BAA4B;gBACzC,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,OAAO;yBAAC;wBACnB,UAAU,EAAE;4BACV,KAAK,EAAE;gCACL,IAAI,EAAE,QAAQ;6BACf;4BACD,eAAe,EAAE;gCACf,IAAI,EAAE,SAAS;6BAChB;4BACD,KAAK,EAAE;gCACL,IAAI,EAAE,QAAQ;gCACd,WAAW,EACT,uGAAuG;6BAC1G;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN;wBACE,IAAI,EAAE,cAAc;qBACrB;oBACD;wBACE,IAAI,EAAE,cAAc;qBACrB;oBACD;wBACE,IAAI,EAAE,eAAe;qBACtB;iBACF;aACF;SACF;KACF;IACD,qBAAqB,EAAE;QACrB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,0BAA0B;QAC9B,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,sIAAsI;gBACxI,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,KAAK;wBAAE,KAAK;qBAAC;oBACxB,UAAU,EAAE;wBACV,GAAG,EAAE;4BACH,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,KAAK;4BACb,WAAW,EAAE,yBAAyB;yBACvC;wBACD,GAAG,EAAE;4BACH,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,KAAK;4BACb,WAAW,EAAE,8BAA8B;yBAC5C;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,KAAK;iBAChB;gBACD,MAAM,EAAE;oBACN;wBACE,IAAI,EAAE,cAAc;qBACrB;oBACD;wBACE,IAAI,EAAE,cAAc;qBACrB;oBACD;wBACE,IAAI,EAAE,eAAe;qBACtB;oBACD;wBACE,IAAI,EAAE,eAAe;qBACtB;oBACD;wBACE,IAAI,EAAE,iBAAiB;qBACxB;iBACF;aACF;SACF;KACF;IACD,uBAAuB,EAAE;QACvB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,4BAA4B;QAChC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,wIAAwI;gBAC1I,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,KAAK;wBAAE,MAAM;qBAAC;oBACzB,UAAU,EAAE;wBACV,GAAG,EAAE;4BACH,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,KAAK;4BACb,WAAW,EAAE,sBAAsB;yBACpC;wBACD,IAAI,EAAE;4BACJ,IAAI,EAAE,OAAO;4BACb,KAAK,EAAE;gCACL,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,KAAK;6BACd;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,0BAA0B;iBACrC;gBACD,MAAM,EAAE;oBACN;wBACE,IAAI,EAAE,eAAe;qBACtB;oBACD;wBACE,IAAI,EAAE,cAAc;qBACrB;oBACD;wBACE,IAAI,EAAE,eAAe;qBACtB;oBACD;wBACE,IAAI,EAAE,eAAe;qBACtB;oBACD;wBACE,IAAI,EAAE,iBAAiB;qBACxB;iBACF;aACF;SACF;KACF;IACD,yBAAyB,EAAE;QACzB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,8BAA8B;QAClC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,0DAA0D;gBACvE,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,KAAK;qBAAC;oBACjB,UAAU,EAAE;wBACV,GAAG,EAAE;4BACH,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,KAAK;4BACb,WAAW,EAAE,sBAAsB;yBACpC;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,0BAA0B;iBACrC;aACF;SACF;KACF;IACD,qBAAqB,EAAE;QACrB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,0BAA0B;QAC9B,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,kEAAkE;gBACpE,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,KAAK;qBAAC;oBACjB,UAAU,EAAE;wBACV,GAAG,EAAE;4BACH,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,KAAK;4BACb,WAAW,EAAE,sBAAsB;yBACpC;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,MAAM;yBAAC;wBAClB,UAAU,EAAE;4BACV,IAAI,EAAE;gCACJ,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,KAAK;6BACd;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN;wBACE,IAAI,EAAE,cAAc;qBACrB;iBACF;aACF;SACF;KACF;IACD,6BAA6B,EAAE;QAC7B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,kCAAkC;QACtC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,qFAAqF;gBACvF,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,KAAK;qBAAC;oBACjB,UAAU,EAAE;wBACV,GAAG,EAAE;4BACH,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,KAAK;4BACb,WAAW,EAAE,sBAAsB;yBACpC;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,KAAK;4BAAE,KAAK;yBAAC;wBACxB,UAAU,EAAE;4BACV,GAAG,EAAE;gCACH,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,KAAK;6BACd;4BACD,GAAG,EAAE;gCACH,IAAI,EAAE,QAAQ;6BACf;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN;wBACE,IAAI,EAAE,cAAc;qBACrB;oBACD;wBACE,IAAI,EAAE,eAAe;qBACtB;oBACD;wBACE,IAAI,EAAE,eAAe;qBACtB;oBACD;wBACE,IAAI,EAAE,iBAAiB;qBACxB;iBACF;aACF;SACF;KACF;IACD,uBAAuB,EAAE;QACvB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,4BAA4B;QAChC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,iIAAiI;gBACnI,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,KAAK;wBAAE,YAAY;wBAAE,MAAM;qBAAC;oBACvC,UAAU,EAAE;wBACV,GAAG,EAAE;4BACH,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,KAAK;4BACb,WAAW,EAAE,sBAAsB;yBACpC;wBACD,UAAU,EAAE;4BACV,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,MAAM;yBACf;wBACD,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;4BACd,WAAW,EAAE,YAAY;yBAC1B;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,KAAK;4BACb,WAAW,EACT,qFAAqF;yBACxF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,0BAA0B;iBACrC;gBACD,MAAM,EAAE;oBACN;wBACE,IAAI,EAAE,gBAAgB;qBACvB;oBACD;wBACE,IAAI,EAAE,cAAc;qBACrB;oBACD;wBACE,IAAI,EAAE,eAAe;qBACtB;oBACD;wBACE,IAAI,EAAE,eAAe;qBACtB;oBACD;wBACE,IAAI,EAAE,iBAAiB;qBACxB;iBACF;aACF;SACF;KACF;IACD,qBAAqB,EAAE;QACrB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,0BAA0B;QAC9B,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,0IAA0I;gBAC5I,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,KAAK;qBAAC;oBACjB,UAAU,EAAE;wBACV,GAAG,EAAE;4BACH,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,KAAK;4BACb,WAAW,EAAE,sBAAsB;yBACpC;wBACD,KAAK,EAAE;4BACL,IAAI,EAAE,QAAQ;4BACd,WAAW,EACT,yDAAyD;yBAC5D;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,0BAA0B;iBACrC;gBACD,MAAM,EAAE;oBACN;wBACE,IAAI,EAAE,cAAc;qBACrB;oBACD;wBACE,IAAI,EAAE,eAAe;qBACtB;oBACD;wBACE,IAAI,EAAE,eAAe;qBACtB;oBACD;wBACE,IAAI,EAAE,iBAAiB;qBACxB;iBACF;aACF;SACF;KACF;IACD,2BAA2B,EAAE;QAC3B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,gCAAgC;QACpC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,uGAAuG;gBACzG,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,KAAK;qBAAC;oBACjB,UAAU,EAAE;wBACV,GAAG,EAAE;4BACH,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,KAAK;4BACb,WAAW,EAAE,sBAAsB;yBACpC;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,KAAK;4BAAE,QAAQ;yBAAC;wBAC3B,UAAU,EAAE;4BACV,GAAG,EAAE;gCACH,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,KAAK;6BACd;4BACD,MAAM,EAAE;gCACN,IAAI,EAAE,SAAS;6BAChB;4BACD,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;gCACd,WAAW,EACT,+NAA+N;gCACjO,WAAW,EAAE;oCAAC,WAAW;oCAAE,WAAW;oCAAE,aAAa;iCAAC;6BACvD;4BACD,GAAG,EAAE;gCACH,IAAI,EAAE,QAAQ;gCACd,WAAW,EACT,6DAA6D;6BAChE;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN;wBACE,IAAI,EAAE,cAAc;qBACrB;iBACF;aACF;SACF;KACF;IACD,uBAAuB,EAAE;QACvB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,4BAA4B;QAChC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,qGAAqG;gBACvG,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,KAAK;qBAAC;oBACjB,UAAU,EAAE;wBACV,GAAG,EAAE;4BACH,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,KAAK;4BACb,WAAW,EAAE,sBAAsB;yBACpC;wBACD,KAAK,EAAE;4BACL,IAAI,EAAE,QAAQ;4BACd,WAAW,EAAE,oDAAoD;yBAClE;wBACD,KAAK,EAAE;4BACL,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,CAAC;4BACV,OAAO,EAAE,IAAI;4BACb,OAAO,EAAE,GAAG;yBACb;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,MAAM;yBAAC;wBAClB,UAAU,EAAE;4BACV,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;6BACf;4BACD,IAAI,EAAE;gCACJ,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,QAAQ;oCACd,MAAM,EAAE,KAAK;iCACd;6BACF;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN;wBACE,IAAI,EAAE,cAAc;qBACrB;oBACD;wBACE,IAAI,EAAE,eAAe;qBACtB;oBACD;wBACE,IAAI,EAAE,eAAe;qBACtB;oBACD;wBACE,IAAI,EAAE,iBAAiB;qBACxB;iBACF;aACF;SACF;KACF;IACD,uBAAuB,EAAE;QACvB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,4BAA4B;QAChC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,wIAAwI;gBAC1I,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,UAAU,EAAE;wBACV,KAAK,EAAE;4BACL,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,CAAC;4BACV,OAAO,EAAE,IAAI;4BACb,OAAO,EAAE,GAAG;yBACb;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,OAAO;yBAAC;wBACnB,UAAU,EAAE;4BACV,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;6BACf;4BACD,KAAK,EAAE;gCACL,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,qCAAqC;iCAC3C;6BACF;yBACF;qBACF;iBACF;aACF;YACD,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,KAAK;oBAAE,MAAM;oBAAE,KAAK;iBAAC;gBAChC,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;wBACb,WAAW,EAAE,yBAAyB;qBACvC;oBACD,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;qBACf;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,SAAS;qBAChB;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,WAAW,EACT,+NAA+N;wBACjO,WAAW,EAAE;4BAAC,WAAW;4BAAE,WAAW;4BAAE,aAAa;yBAAC;qBACvD;iBACF;aACF;SACF;KACF;IACD,4BAA4B,EAAE;QAC5B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,iCAAiC;QACrC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EACT,+NAA+N;gBACjO,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,UAAU;yBAAC;wBACtB,UAAU,EAAE;4BACV,QAAQ,EAAE;gCACR,IAAI,EAAE,QAAQ;gCACd,WAAW,EACT,8EAA8E;6BACjF;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,0BAA0B,EAAE;QAC1B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,+BAA+B;QACnC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EACT,qJAAqJ;gBACvJ,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,UAAU;yBAAC;wBACtB,UAAU,EAAE;4BACV,QAAQ,EAAE;gCACR,IAAI,EAAE,QAAQ;gCACd,WAAW,EACT,6EAA6E;6BAChF;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,4BAA4B,EAAE;QAC5B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,iCAAiC;QACrC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,cAAc;gBACpB,WAAW,EACT,+UAA+U;gBACjV,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,UAAU,EAAE;wBACV,MAAM,EAAE;4BACN,IAAI,EAAE,SAAS;4BACf,WAAW,EAAE,mDAAmD;yBACjE;qBACF;iBACF;gBACD,OAAO,EAAE;oBACP,MAAM,EAAE;wBACN,IAAI,EAAE,OAAO;wBACb,IAAI,EAAE;4BACJ,4CAA4C;4BAC5C,8CAA8C;4BAC9C,6CAA6C;4BAC7C,4CAA4C;4BAC5C,6CAA6C;4BAC7C,+CAA+C;4BAC/C,0CAA0C;yBAC3C;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN;wBACE,IAAI,EAAE,cAAc;qBACrB;oBACD;wBACE,IAAI,EAAE,iBAAiB;wBACvB,WAAW,EACT,+HAA+H;qBAClI;iBACF;aACF;YACD,MAAM,EAAE;gBACN,IAAI,EAAE,QAAQ;gBACd,WAAW,EACT,wJAAwJ;gBAC1J,QAAQ,EAAE;oBACR,KAAK;oBACL,QAAQ;oBACR,QAAQ;oBACR,MAAM;oBACN,QAAQ;oBACR,KAAK;oBACL,OAAO;oBACP,QAAQ;oBACR,KAAK;oBACL,OAAO;oBACP,MAAM;iBACP;gBACD,QAAQ,EAAE;oBAAC,MAAM;oBAAE,OAAO;iBAAC;gBAC3B,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,SAAS;wBACf,WAAW,EAAE,6CAA6C;qBAC3D;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,SAAS;wBACf,WAAW,EAAE,sBAAsB;qBACpC;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,SAAS;wBACf,WAAW,EACT,oJAAoJ;qBACvJ;oBACD,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;wBACb,WAAW,EAAE,iCAAiC;qBAC/C;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,UAAU;wBAChB,WAAW,EAAE,yBAAyB;qBACvC;oBACD,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;wBAChB,WAAW,EACT,gHAAgH;qBACnH;oBACD,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,WAAW,EACT,2IAA2I;qBAC9I;oBACD,KAAK,EAAE;wBACL,IAAI,EAAE,QAAQ;wBACd,WAAW,EACT,6DAA6D;qBAChE;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,OAAO;wBACb,WAAW,EACT,+EAA+E;wBACjF,SAAS,EAAE,OAAO;qBACnB;oBACD,GAAG,EAAE;wBACH,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE,KAAK;4BACX,GAAG,EAAE,4CAA4C;4BACjD,WAAW,EACT,6FAA6F;yBAChG;wBACD,SAAS,EAAE,GAAG;qBACf;oBACD,KAAK,EAAE;wBACL,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE,UAAU;4BAChB,WAAW,EACT,kEAAkE;yBACrE;qBACF;oBACD,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;wBAClB,WAAW,EACT,0DAA0D;qBAC7D;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,IAAI,EAAE,QAAQ;gBACd,WAAW,EACT,8LAA8L;gBAChM,QAAQ,EAAE;oBAAC,KAAK;oBAAE,KAAK;oBAAE,MAAM;iBAAC;gBAChC,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,SAAS;qBAChB;oBACD,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,QAAQ;wBAChB,WAAW,EACT,kRAAkR;qBACrR;iBACF;aACF;YACD,OAAO,EAAE;gBACP,IAAI,EAAE,QAAQ;gBACd,WAAW,EACT,mTAAmT;gBACrT,QAAQ,EAAE;oBAAC,KAAK;oBAAE,KAAK;oBAAE,MAAM;oBAAE,QAAQ;iBAAC;gBAC1C,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,SAAS;qBAChB;oBACD,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,SAAS;wBACf,WAAW,EACT,yGAAyG;qBAC5G;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,WAAW,EACT,4FAA4F;wBAC9F,WAAW,EAAE;4BAAC,WAAW;4BAAE,WAAW;4BAAE,SAAS;4BAAE,aAAa;yBAAC;qBAClE;iBACF;aACF;YACD,MAAM,EAAE;gBACN,IAAI,EAAE,QAAQ;gBACd,WAAW,EAAE,2CAA2C;gBACxD,QAAQ,EAAE;oBAAC,KAAK;oBAAE,KAAK;oBAAE,QAAQ;oBAAE,MAAM;iBAAC;gBAC1C,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,SAAS;qBAChB;oBACD,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,QAAQ;qBACjB;oBACD,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;iBACF;aACF;YACD,OAAO,EAAE;gBACP,IAAI,EAAE,QAAQ;gBACd,WAAW,EAAE,0CAA0C;gBACvD,QAAQ,EAAE;oBAAC,KAAK;oBAAE,KAAK;oBAAE,WAAW;oBAAE,MAAM;iBAAC;gBAC7C,QAAQ,EAAE;oBAAC,WAAW;iBAAC;gBACvB,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,SAAS;qBAChB;oBACD,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;qBACf;oBACD,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;iBACF;aACF;YACD,SAAS,EAAE;gBACT,IAAI,EAAE,QAAQ;gBACd,WAAW,EAAE,0CAA0C;gBACvD,QAAQ,EAAE;oBAAC,KAAK;oBAAE,KAAK;oBAAE,MAAM;iBAAC;gBAChC,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,SAAS;qBAChB;oBACD,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;iBACF;aACF;YACD,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,MAAM;iBAAC;gBAClB,UAAU,EAAE;oBACV,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;wBACd,WAAW,EAAE;4BAAC,gBAAgB;yBAAC;qBAChC;oBACD,OAAO,EAAE;wBACP,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;YACD,MAAM,EAAE;gBACN,IAAI,EAAE,QAAQ;gBACd,WAAW,EAAE,qDAAqD;gBAClE,QAAQ,EAAE;oBAAC,QAAQ;oBAAE,MAAM;oBAAE,KAAK;iBAAC;gBACnC,QAAQ,EAAE;oBAAC,KAAK;iBAAC;gBACjB,UAAU,EAAE;oBACV,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,WAAW,EAAE;4BAAC,QAAQ;4BAAE,QAAQ;4BAAE,QAAQ;yBAAC;qBAC5C;oBACD,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;oBACD,GAAG,EAAE;wBACH,IAAI,EAAE,UAAU;wBAChB,WAAW,EACT,mEAAmE;qBACtE;iBACF;aACF;SACF;KACF;IACD,+BAA+B,EAAE;QAC/B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,oCAAoC;QACxC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EAAE,8CAA8C;gBAC3D,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,QAAQ;yBAAC;wBACpB,UAAU,EAAE;4BACV,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;6BACf;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,UAAU,EAAE,CAAA,CAAE;qBACf;iBACF;aACF;SACF;KACF;IACD,8BAA8B,EAAE;QAC9B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,mCAAmC;QACvC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,0CAA0C;gBACvD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,WAAW;yBAAC;wBACvB,UAAU,EAAE;4BACV,SAAS,EAAE;gCACT,IAAI,EAAE,SAAS;6BAChB;4BACD,YAAY,EAAE;gCACZ,IAAI,EAAE,SAAS;6BAChB;4BACD,eAAe,EAAE;gCACf,IAAI,EAAE,SAAS;6BAChB;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,yBAAyB,EAAE;QACzB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,8BAA8B;QAClC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,yHAAyH;gBAC3H,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,UAAU,EAAE;wBACV,KAAK,EAAE;4BACL,IAAI,EAAE,SAAS;yBAChB;wBACD,KAAK,EAAE;4BACL,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,CAAC;4BACV,OAAO,EAAE,GAAG;4BACZ,OAAO,EAAE,EAAE;yBACZ;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,QAAQ;yBAAC;wBACpB,UAAU,EAAE;4BACV,MAAM,EAAE;gCACN,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,kCAAkC;iCACxC;6BACF;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,sCAAsC,EAAE;QACtC,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,2CAA2C;QAC/C,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EACT,qEAAqE;gBACvE,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,aAAa;yBAAC;wBACzB,UAAU,EAAE;4BACV,WAAW,EAAE;gCACX,IAAI,EAAE,QAAQ;6BACf;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,gBAAgB,EAAE;QAChB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,qBAAqB;QACzB,IAAI,EAAE;YACJ,gBAAgB,EAAE;gBAChB,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,KAAK;oBAAE,QAAQ;iBAAC;gBAC3B,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,QAAQ;qBACjB;oBACD,WAAW,EAAE;wBACX,IAAI,EAAE,QAAQ;wBACd,YAAY,EAAE,EAAE;wBAChB,SAAS,EAAE,GAAG;qBACf;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,UAAU,EAAE;wBACV,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,2CAA2C;qBACjD;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,qCAAqC;qBAC3C;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE,KAAK;4BACX,GAAG,EAAE,kCAAkC;yBACxC;qBACF;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;iBACF;aACF;YACD,WAAW,EAAE;gBACX,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,KAAK;oBAAE,QAAQ;iBAAC;gBAC3B,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,QAAQ;qBACjB;oBACD,WAAW,EAAE;wBACX,IAAI,EAAE,QAAQ;wBACd,YAAY,EAAE,EAAE;wBAChB,SAAS,EAAE,GAAG;qBACf;oBACD,WAAW,EAAE;wBACX,IAAI,EAAE,QAAQ;wBACd,YAAY,EAAE,GAAG;wBACjB,SAAS,EAAE,IAAI;qBAChB;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,UAAU,EAAE;wBACV,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,2CAA2C;qBACjD;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,qCAAqC;qBAC3C;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE,KAAK;4BACX,GAAG,EAAE,kCAAkC;yBACxC;qBACF;iBACF;aACF;YACD,mBAAmB,EAAE;gBACnB,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,KAAK;oBAAE,QAAQ;iBAAC;gBAC3B,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,QAAQ;qBACjB;oBACD,WAAW,EAAE;wBACX,IAAI,EAAE,QAAQ;wBACd,YAAY,EAAE,EAAE;wBAChB,SAAS,EAAE,GAAG;qBACf;oBACD,WAAW,EAAE;wBACX,IAAI,EAAE,QAAQ;wBACd,YAAY,EAAE,GAAG;wBACjB,SAAS,EAAE,IAAI;qBAChB;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,cAAc,EAAE;wBACd,IAAI,EAAE,SAAS;qBAChB;oBACD,YAAY,EAAE;wBACZ,IAAI,EAAE,SAAS;qBAChB;oBACD,UAAU,EAAE;wBACV,IAAI,EAAE,SAAS;qBAChB;oBACD,UAAU,EAAE;wBACV,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,2CAA2C;qBACjD;oBACD,oBAAoB,EAAE;wBACpB,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,8CAA8C;qBACpD;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,qCAAqC;qBAC3C;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE,KAAK;4BACX,GAAG,EAAE,kCAAkC;yBACxC;qBACF;oBACD,UAAU,EAAE;wBACV,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,gCAAgC;qBACtC;iBACF;aACF;YACD,iBAAiB,EAAE;gBACjB,IAAI,EAAE,QAAQ;gBACd,UAAU,EAAE;oBACV,KAAK,EAAE;wBACL,IAAI,EAAE,SAAS;qBAChB;oBACD,QAAQ,EAAE;wBACR,IAAI,EAAE,SAAS;qBAChB;oBACD,YAAY,EAAE;wBACZ,IAAI,EAAE,SAAS;qBAChB;oBACD,OAAO,EAAE;wBACP,IAAI,EAAE,SAAS;qBAChB;oBACD,IAAI,EAAE;wBACJ,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,+CAA+C;qBACrD;iBACF;aACF;YACD,qBAAqB,EAAE;gBACrB,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,eAAe;iBAAC;gBAC3B,UAAU,EAAE;oBACV,aAAa,EAAE;wBACb,IAAI,EAAE,QAAQ;wBACd,WAAW,EAAE;4BAAC,KAAK;4BAAE,MAAM;4BAAE,WAAW;yBAAC;qBAC1C;iBACF;aACF;YACD,WAAW,EAAE;gBACX,IAAI,EAAE,QAAQ;gBACd,WAAW,EACT,iIAAiI;gBACnI,UAAU,EAAE;oBACV,KAAK,EAAE;wBACL,IAAI,EAAE,SAAS;qBAChB;oBACD,WAAW,EAAE;wBACX,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,uCAAuC;qBAC7C;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,SAAS;qBAChB;oBACD,QAAQ,EAAE;wBACR,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,QAAQ;qBACjB;oBACD,cAAc,EAAE;wBACd,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,uCAAuC;qBAC7C;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,QAAQ;qBACjB;oBACD,UAAU,EAAE;wBACV,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,QAAQ;qBACjB;oBACD,cAAc,EAAE;wBACd,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,wCAAwC;qBAC9C;iBACF;aACF;YACD,cAAc,EAAE;gBACd,IAAI,EAAE,QAAQ;gBACd,WAAW,EAAE,8CAA8C;gBAC3D,QAAQ,EAAE;oBAAC,OAAO;oBAAE,WAAW;iBAAC;gBAChC,UAAU,EAAE;oBACV,KAAK,EAAE;wBACL,IAAI,EAAE,SAAS;qBAChB;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,OAAO;wBACb,SAAS,EAAE,CAAC;wBACZ,SAAS,EAAE,CAAC;wBACZ,KAAK,EAAE;4BACL,IAAI,EAAE,KAAK;4BACX,GAAG,EAAE,0CAA0C;yBAChD;qBACF;iBACF;aACF;YACD,WAAW,EAAE;gBACX,IAAI,EAAE,OAAO;gBACb,KAAK,EAAE;oBACL,IAAI,EAAE,OAAO;oBACb,IAAI,EAAE;wBACJ,0CAA0C;wBAC1C,0CAA0C;wBAC1C,wCAAwC;wBACxC,0CAA0C;wBAC1C,6CAA6C;wBAC7C,sCAAsC;wBACtC,wCAAwC;wBACxC,uCAAuC;wBACvC,wCAAwC;wBACxC,yCAAyC;wBACzC,0CAA0C;wBAC1C,sCAAsC;qBACvC;iBACF;aACF;YACD,gBAAgB,EAAE;gBAChB,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,SAAS;iBAAC;gBACrB,UAAU,EAAE;oBACV,OAAO,EAAE;wBACP,IAAI,EAAE,SAAS;wBACf,OAAO,EAAE,KAAK;qBACf;iBACF;aACF;YACD,gBAAgB,EAAE;gBAChB,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,OAAO;oBAAE,YAAY;iBAAC;gBACjC,UAAU,EAAE;oBACV,UAAU,EAAE;wBACV,IAAI,EAAE,QAAQ;wBACd,WAAW,EACT,8EAA8E;wBAChF,MAAM,EAAE,KAAK;qBACd;oBACD,KAAK,EAAE;wBACL,IAAI,EAAE,QAAQ;qBACf;oBACD,UAAU,EAAE;wBACV,IAAI,EAAE,QAAQ;wBACd,WAAW,EAAE;4BAAC,QAAQ;4BAAE,MAAM;4BAAE,MAAM;4BAAE,MAAM;yBAAC;qBAChD;iBACF;aACF;YACD,SAAS,EAAE;gBACT,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,IAAI;oBAAE,MAAM;oBAAE,OAAO;oBAAE,QAAQ;iBAAC;gBAC3C,UAAU,EAAE;oBACV,EAAE,EAAE;wBACF,IAAI,EAAE,QAAQ;qBACf;oBACD,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;wBACd,WAAW,EAAE;4BAAC,MAAM;4BAAE,MAAM;4BAAE,UAAU;yBAAC;qBAC1C;oBACD,KAAK,EAAE;wBACL,IAAI,EAAE,QAAQ;qBACf;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,SAAS;qBAChB;iBACF;aACF;YACD,gBAAgB,EAAE;gBAChB,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,OAAO;iBAAC;gBACnB,UAAU,EAAE;oBACV,KAAK,EAAE;wBACL,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE,KAAK;4BACX,GAAG,EAAE,mCAAmC;yBACzC;qBACF;iBACF;aACF;YACD,cAAc,EAAE;gBACd,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,QAAQ;oBAAE,OAAO;iBAAC;gBAC7B,UAAU,EAAE;oBACV,MAAM,EAAE;wBACN,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,QAAQ;yBACjB;qBACF;oBACD,KAAK,EAAE;wBACL,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,QAAQ;yBACjB;qBACF;oBACD,aAAa,EAAE;wBACb,IAAI,EAAE,SAAS;qBAChB;iBACF;aACF;YACD,mBAAmB,EAAE;gBACnB,IAAI,EAAE,QAAQ;gBACd,UAAU,EAAE;oBACV,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;wBAClB,WAAW,EAAE,kCAAkC;qBAChD;iBACF;aACF;YACD,YAAY,EAAE;gBACZ,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,MAAM;iBAAC;gBAClB,UAAU,EAAE;oBACV,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;wBACd,WAAW,EACT,iEAAiE;qBACpE;oBACD,WAAW,EAAE;wBACX,IAAI,EAAE,SAAS;wBACf,WAAW,EAAE,2BAA2B;qBACzC;oBACD,uBAAuB,EAAE;wBACvB,IAAI,EAAE,SAAS;wBACf,WAAW,EACT,6DAA6D;wBAC/D,OAAO,EAAE,IAAI;qBACd;oBACD,sBAAsB,EAAE;wBACtB,IAAI,EAAE,SAAS;wBACf,WAAW,EACT,oEAAoE;qBACvE;oBACD,WAAW,EAAE;wBACX,IAAI,EAAE,SAAS;wBACf,WAAW,EAAE,2BAA2B;qBACzC;oBACD,cAAc,EAAE;wBACd,IAAI,EAAE,SAAS;wBACf,WAAW,EAAE,+BAA+B;qBAC7C;iBACF;aACF;YACD,cAAc,EAAE;gBACd,IAAI,EAAE,QAAQ;gBACd,UAAU,EAAE;oBACV,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;wBACd,WAAW,EAAE,2BAA2B;wBACxC,WAAW,EAAE;4BACX,QAAQ;4BACR,QAAQ;4BACR,YAAY;4BACZ,QAAQ;4BACR,SAAS;yBACV;qBACF;oBACD,uBAAuB,EAAE;wBACvB,IAAI,EAAE,SAAS;wBACf,WAAW,EAAE,gDAAgD;qBAC9D;iBACF;aACF;YACD,aAAa,EAAE;gBACb,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,MAAM;iBAAC;gBAClB,UAAU,EAAE;oBACV,IAAI,EAAE;wBACJ,IAAI,EAAE,OAAO;wBACb,SAAS,EAAE,GAAG;wBACd,KAAK,EAAE;4BACL,IAAI,EAAE,QAAQ;4BACd,SAAS,EAAE,GAAG;4BACd,YAAY,EAAE,EAAE;yBACjB;wBACD,WAAW,EACT,yFAAyF;qBAC5F;iBACF;aACF;YACD,eAAe,EAAE;gBACf,IAAI,EAAE,QAAQ;gBACd,WAAW,EAAE;oBAAC,SAAS;oBAAE,KAAK;iBAAC;gBAC/B,SAAS,EAAE,GAAG;gBACd,YAAY,EAAE,EAAE;aACjB;YACD,SAAS,EAAE;gBACT,IAAI,EAAE,QAAQ;gBACd,WAAW,EAAE,0CAA0C;gBACvD,QAAQ,EAAE;oBAAC,OAAO;oBAAE,SAAS;iBAAC;gBAC9B,UAAU,EAAE;oBACV,EAAE,EAAE;wBACF,IAAI,EAAE,QAAQ;qBACf;oBACD,KAAK,EAAE;wBACL,IAAI,EAAE,QAAQ;wBACd,WAAW,EAAE,wBAAwB;wBACrC,SAAS,EAAE,KAAK;wBAChB,YAAY,EAAE,IAAI;qBACnB;oBACD,OAAO,EAAE;wBACP,IAAI,EAAE,OAAO;wBACb,WAAW,EAAE,yCAAyC;wBACtD,KAAK,EAAE;4BACL,IAAI,EAAE,KAAK;4BACX,GAAG,EAAE,yCAAyC;yBAC/C;qBACF;oBACD,WAAW,EAAE;wBACX,IAAI,EAAE,QAAQ;wBACd,WAAW,EACT,iFAAiF;wBACnF,WAAW,EAAE;4BAAC,KAAK;4BAAE,mBAAmB;yBAAC;wBACzC,OAAO,EAAE,KAAK;qBACf;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;wBAClB,WAAW,EACT,iFAAiF;qBACpF;iBACF;aACF;YACD,cAAc,EAAE;gBACd,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,OAAO;iBAAC;gBACnB,UAAU,EAAE;oBACV,KAAK,EAAE;wBACL,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE,KAAK;4BACX,GAAG,EAAE,mCAAmC;yBACzC;wBACD,WAAW,EAAE,8CAA8C;qBAC5D;iBACF;aACF;YACD,eAAe,EAAE;gBACf,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,OAAO;iBAAC;gBACnB,UAAU,EAAE;oBACV,KAAK,EAAE;wBACL,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,QAAQ;yBACjB;wBACD,WAAW,EACT,uDAAuD;qBAC1D;iBACF;aACF;YACD,YAAY,EAAE;gBACZ,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,UAAU;iBAAC;gBACtB,UAAU,EAAE;oBACV,QAAQ,EAAE;wBACR,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE,KAAK;4BACX,GAAG,EAAE,yCAAyC;yBAC/C;qBACF;iBACF;aACF;YACD,eAAe,EAAE;gBACf,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,KAAK;iBAAC;gBACjB,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;iBACF;aACF;YACD,gBAAgB,EAAE;gBAChB,WAAW,EACT,mGAAmG;gBACrG,IAAI,EAAE,QAAQ;gBACd,UAAU,EAAE;oBACV,mBAAmB,EAAE;wBACnB,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,8CAA8C;qBACpD;oBACD,YAAY,EAAE;wBACZ,WAAW,EACT,oHAAoH;wBACtH,IAAI,EAAE,OAAO;wBACb,SAAS,EAAE,IAAI;wBACf,KAAK,EAAE;4BACL,IAAI,EAAE,QAAQ;4BACd,SAAS,EAAE,GAAG;yBACf;qBACF;oBACD,IAAI,EAAE;wBACJ,WAAW,EAAE,4CAA4C;wBACzD,IAAI,EAAE,OAAO;wBACb,SAAS,EAAE,GAAG;wBACd,KAAK,EAAE;4BACL,IAAI,EAAE,KAAK;4BACX,GAAG,EAAE,6BAA6B;yBACnC;qBACF;iBACF;aACF;YACD,oBAAoB,EAAE;gBACpB,WAAW,EACT,4HAA4H;gBAC9H,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,OAAO;iBAAC;gBACnB,UAAU,EAAE;oBACV,KAAK,EAAE;wBACL,IAAI,EAAE,QAAQ;wBACd,SAAS,EAAE,GAAG;qBACf;iBACF;aACF;YACD,GAAG,EAAE;gBACH,IAAI,EAAE,QAAQ;gBACd,WAAW,EAAE,6CAA6C;gBAC1D,QAAQ,EAAE;oBAAC,IAAI;oBAAE,WAAW;iBAAC;gBAC7B,UAAU,EAAE;oBACV,EAAE,EAAE;wBACF,IAAI,EAAE,QAAQ;wBACd,SAAS,EAAE,GAAG;qBACf;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,SAAS;wBACf,OAAO,EAAE,KAAK;qBACf;oBACD,IAAI,EAAE;wBACJ,WAAW,EACT,oGAAoG;wBACtG,IAAI,EAAE,QAAQ;wBACd,SAAS,EAAE,IAAI;wBACf,YAAY,EAAE,GAAG;qBAClB;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;wBAClB,WAAW,EACT,oFAAoF;qBACvF;iBACF;aACF;SACF;KACF;IACD,0BAA0B,EAAE;QAC1B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,+BAA+B;QACnC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,+KAA+K;gBACjL,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,UAAU,EAAE,CAAA,CAAE;iBACf;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,aAAa;yBAAC;wBACzB,UAAU,EAAE;4BACV,WAAW,EAAE;gCACX,IAAI,EAAE,KAAK;gCACX,GAAG,EAAE,qCAAqC;6BAC3C;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,sBAAsB,EAAE;QACtB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,2BAA2B;QAC/B,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,yGAAyG;gBAC3G,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,OAAO;qBAAC;oBACnB,UAAU,EAAE;wBACV,KAAK,EAAE;4BACL,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,eAAe;4BACvB,WAAW,EAAE,+CAA+C;yBAC7D;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,6CAA6C;qBACnD;iBACF;aACF;SACF;KACF;IACD,uBAAuB,EAAE;QACvB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,4BAA4B;QAChC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,gDAAgD;gBAC7D,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,QAAQ;qBAAC;oBACpB,UAAU,EAAE;wBACV,MAAM,EAAE;4BACN,IAAI,EAAE,OAAO;4BACb,KAAK,EAAE;gCACL,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,eAAe;6BACxB;4BACD,SAAS,EAAE,EAAE;yBACd;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,UAAU;yBAAC;wBACtB,UAAU,EAAE;4BACV,QAAQ,EAAE;gCACR,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,6CAA6C;iCACnD;6BACF;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,0BAA0B,EAAE;QAC1B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,+BAA+B;QACnC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,gHAAgH;gBAClH,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,UAAU,EAAE;wBACV,KAAK,EAAE;4BACL,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,CAAC;4BACV,OAAO,EAAE,GAAG;4BACZ,OAAO,EAAE,EAAE;yBACZ;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,QAAQ;yBAAC;wBACpB,UAAU,EAAE;4BACV,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;6BACf;4BACD,MAAM,EAAE;gCACN,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,qCAAqC;iCAC3C;6BACF;4BACD,KAAK,EAAE;gCACL,IAAI,EAAE,SAAS;gCACf,WAAW,EACT,+EAA+E;6BAClF;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,mBAAmB,EAAE;QACnB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,wBAAwB;QAC5B,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;gBACd,WAAW,EAAE,6CAA6C;gBAC1D,GAAG,EAAE,cAAc;gBACnB,MAAM,EAAE;oBACN,IAAI,EAAE,QAAQ;oBACd,UAAU,EAAE;wBACV,WAAW,EAAE;4BACX,IAAI,EAAE,QAAQ;4BACd,YAAY,EAAE,EAAE;4BAChB,SAAS,EAAE,GAAG;yBACf;wBACD,WAAW,EAAE;4BACX,IAAI,EAAE,QAAQ;4BACd,WAAW,EAAE,qCAAqC;4BAClD,YAAY,EAAE,GAAG;4BACjB,SAAS,EAAE,IAAI;yBAChB;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,MAAM;4BACZ,WAAW,EACT,gFAAgF;4BAClF,MAAM,EAAE;gCAAC,WAAW;gCAAE,YAAY;6BAAC;4BACnC,OAAO,EAAE,OAAO;yBACjB;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,MAAM;4BACZ,WAAW,EACT,yDAAyD;4BAC3D,MAAM,EAAE;gCAAC,WAAW;gCAAE,YAAY;6BAAC;4BACnC,OAAO,EAAE,OAAO;yBACjB;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,OAAO;4BACb,WAAW,EACT,iFAAiF;4BACnF,IAAI,EAAE;gCAAC,uCAAuC;6BAAC;yBAChD;wBACD,oBAAoB,EAAE;4BACpB,IAAI,EAAE,KAAK;4BACX,GAAG,EAAE,gCAAgC;yBACtC;wBACD,UAAU,EAAE;4BACV,IAAI,EAAE,KAAK;4BACX,GAAG,EAAE,gCAAgC;yBACtC;wBACD,SAAS,EAAE;4BACT,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,UAAU;yBACnB;qBACF;iBACF;aACF;SACF;KACF;IACD,0BAA0B,EAAE;QAC1B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,+BAA+B;QACnC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EAAE,sDAAsD;gBACnE,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,aAAa;yBAAC;wBACzB,UAAU,EAAE;4BACV,WAAW,EAAE;gCACX,IAAI,EAAE,KAAK;gCACX,GAAG,EAAE,qCAAqC;6BAC3C;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,wBAAwB,EAAE;QACxB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,6BAA6B;QACjC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,yEAAyE;gBAC3E,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,UAAU,EAAE;wBACV,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;4BACd,WAAW,EAAE,8BAA8B;yBAC5C;wBACD,CAAC,EAAE;4BACD,IAAI,EAAE,QAAQ;4BACd,WAAW,EACT,oHAAoH;yBACvH;wBACD,KAAK,EAAE;4BACL,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,CAAC;4BACV,OAAO,EAAE,GAAG;4BACZ,OAAO,EAAE,EAAE;yBACZ;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,QAAQ;yBAAC;wBACpB,UAAU,EAAE;4BACV,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;6BACf;4BACD,MAAM,EAAE;gCACN,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,qCAAqC;iCAC3C;6BACF;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,iCAAiC,EAAE;QACjC,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,sCAAsC;QAC1C,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,sIAAsI;gBACxI,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,UAAU,EAAE;wBACV,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;4BACd,WAAW,EAAE,8BAA8B;yBAC5C;wBACD,CAAC,EAAE;4BACD,IAAI,EAAE,QAAQ;4BACd,WAAW,EAAE,+CAA+C;yBAC7D;wBACD,KAAK,EAAE;4BACL,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,CAAC;4BACV,OAAO,EAAE,GAAG;4BACZ,OAAO,EAAE,EAAE;yBACZ;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,QAAQ;yBAAC;wBACpB,UAAU,EAAE;4BACV,MAAM,EAAE;gCACN,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,0CAA0C;iCAChD;6BACF;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,gBAAgB,EAAE;QAChB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,qBAAqB;QACzB,IAAI,EAAE;YACJ,WAAW,EAAE;gBACX,IAAI,EAAE,QAAQ;gBACd,WAAW,EACT,kIAAkI;gBACpI,QAAQ,EAAE;oBAAC,OAAO;oBAAE,QAAQ;iBAAC;gBAC7B,UAAU,EAAE;oBACV,KAAK,EAAE;wBACL,IAAI,EAAE,SAAS;wBACf,OAAO,EAAE,CAAC;qBACX;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,SAAS;wBACf,OAAO,EAAE,CAAC;qBACX;iBACF;aACF;SACF;KACF;IACD,oBAAoB,EAAE;QACpB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,yBAAyB;QAC7B,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;gBACd,WAAW,EACT,uHAAuH;gBACzH,QAAQ,EAAE;oBAAC,UAAU;iBAAC;gBACtB,UAAU,EAAE;oBACV,QAAQ,EAAE;wBACR,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,sCAAsC;qBAC5C;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,KAAK;oBAAE,OAAO;oBAAE,aAAa;iBAAC;gBACzC,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,KAAK,EAAE;wBACL,IAAI,EAAE,QAAQ;qBACf;oBACD,WAAW,EAAE;wBACX,IAAI,EAAE,QAAQ;qBACf;oBACD,KAAK,EAAE;wBACL,IAAI,EAAE,MAAM;wBACZ,MAAM,EAAE;4BAAC,SAAS;yBAAC;wBACnB,OAAO,EAAE,OAAO;qBACjB;iBACF;aACF;YACD,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,UAAU;iBAAC;gBACtB,UAAU,EAAE;oBACV,QAAQ,EAAE;wBACR,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,0CAA0C;qBAChD;iBACF;aACF;YACD,YAAY,EAAE;gBACZ,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,KAAK;oBAAE,OAAO;oBAAE,aAAa;iBAAC;gBACzC,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,KAAK,EAAE;wBACL,IAAI,EAAE,QAAQ;qBACf;oBACD,WAAW,EAAE;wBACX,IAAI,EAAE,QAAQ;qBACf;oBACD,KAAK,EAAE;wBACL,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;iBACF;aACF;SACF;KACF;IACD,kBAAkB,EAAE;QAClB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,uBAAuB;QAC3B,WAAW,EAAE,4DAA4D;QACzE,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,QAAQ;iBAAC;gBACpB,UAAU,EAAE;oBACV,MAAM,EAAE;wBACN,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE,KAAK;4BACX,GAAG,EAAE,iCAAiC;yBACvC;wBACD,SAAS,EAAE,CAAC;qBACb;iBACF;aACF;YACD,KAAK,EAAE;gBACL,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,OAAO;oBAAE,KAAK;iBAAC;gBAC1B,UAAU,EAAE;oBACV,KAAK,EAAE;wBACL,IAAI,EAAE,MAAM;wBACZ,MAAM,EAAE;4BAAC,SAAS;yBAAC;wBACnB,OAAO,EAAE,OAAO;qBACjB;oBACD,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,WAAW,EACT,uDAAuD;qBAC1D;oBACD,WAAW,EAAE;wBACX,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,qCAAqC;qBAC3C;iBACF;aACF;YACD,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,QAAQ;iBAAC;gBACpB,UAAU,EAAE;oBACV,MAAM,EAAE;wBACN,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE,KAAK;4BACX,GAAG,EAAE,qCAAqC;yBAC3C;wBACD,SAAS,EAAE,CAAC;qBACb;iBACF;aACF;YACD,SAAS,EAAE;gBACT,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,OAAO;oBAAE,UAAU;oBAAE,KAAK;iBAAC;gBACtC,UAAU,EAAE;oBACV,KAAK,EAAE;wBACL,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;wBACb,WAAW,EACT,wHAAwH;qBAC3H;oBACD,QAAQ,EAAE;wBACR,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;wBACb,WAAW,EACT,uKAAuK;qBAC1K;oBACD,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,WAAW,EACT,uDAAuD;qBAC1D;oBACD,WAAW,EAAE;wBACX,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,qCAAqC;qBAC3C;iBACF;aACF;SACF;KACF;IACD,kBAAkB,EAAE;QAClB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,uBAAuB;QAC3B,WAAW,EACT,wIAAwI;QAC1I,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,QAAQ;iBAAC;gBACpB,UAAU,EAAE;oBACV,MAAM,EAAE;wBACN,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,gCAAgC;qBACtC;iBACF;aACF;YACD,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,QAAQ;iBAAC;gBACpB,UAAU,EAAE;oBACV,MAAM,EAAE;wBACN,IAAI,EAAE,OAAO;wBACb,IAAI,EAAE;4BACJ,sCAAsC;4BACtC,wCAAwC;4BACxC,uCAAuC;4BACvC,wCAAwC;4BACxC,sCAAsC;4BACtC,kCAAkC;4BAClC,uCAAuC;4BACvC,8CAA8C;yBAC/C;qBACF;iBACF;aACF;YACD,UAAU,EAAE;gBACV,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,KAAK;oBAAE,KAAK;oBAAE,QAAQ;oBAAE,OAAO;oBAAE,WAAW;iBAAC;gBACxD,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,QAAQ;qBACjB;oBACD,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,0CAA0C;qBAChD;oBACD,KAAK,EAAE;wBACL,IAAI,EAAE,SAAS;wBACf,WAAW,EAAE,yBAAyB;qBACvC;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE,KAAK;4BACX,GAAG,EAAE,kCAAkC;yBACxC;qBACF;oBACD,UAAU,EAAE;wBACV,IAAI,EAAE,SAAS;qBAChB;oBACD,WAAW,EAAE;wBACX,IAAI,EAAE,SAAS;qBAChB;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,SAAS;qBAChB;oBACD,UAAU,EAAE;wBACV,IAAI,EAAE,SAAS;qBAChB;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE,OAAO;4BACb,IAAI,EAAE;gCACJ,gCAAgC;gCAChC,+BAA+B;gCAC/B,kCAAkC;gCAClC,gCAAgC;gCAChC,yCAAyC;6BAC1C;yBACF;qBACF;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;iBACF;aACF;YACD,YAAY,EAAE;gBACZ,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,KAAK;oBAAE,UAAU;iBAAC;gBAC7B,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,QAAQ;qBACjB;oBACD,QAAQ,EAAE;wBACR,IAAI,EAAE,SAAS;wBACf,KAAK,EAAE,IAAI;qBACZ;iBACF;aACF;YACD,WAAW,EAAE;gBACX,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,KAAK;oBAAE,SAAS;oBAAE,QAAQ;iBAAC;gBACtC,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,QAAQ;qBACjB;oBACD,OAAO,EAAE;wBACP,IAAI,EAAE,SAAS;wBACf,KAAK,EAAE,IAAI;qBACZ;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,sCAAsC;qBAC5C;iBACF;aACF;YACD,YAAY,EAAE;gBACZ,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,KAAK;oBAAE,UAAU;iBAAC;gBAC7B,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,QAAQ;qBACjB;oBACD,QAAQ,EAAE;wBACR,IAAI,EAAE,SAAS;wBACf,KAAK,EAAE,IAAI;qBACZ;iBACF;aACF;SACF;KACF;IACD,2BAA2B,EAAE;QAC3B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,gCAAgC;QACpC,WAAW,EACT,wLAAwL;QAC1L,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,QAAQ;oBAAE,OAAO;iBAAC;gBAC7B,UAAU,EAAE;oBACV,MAAM,EAAE;wBACN,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,2BAA2B;qBACjC;oBACD,KAAK,EAAE;wBACL,IAAI,EAAE,OAAO;wBACb,IAAI,EAAE;4BACJ,2BAA2B;4BAC3B,0BAA0B;4BAC1B,6BAA6B;yBAC9B;qBACF;iBACF;aACF;YACD,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,QAAQ;oBAAE,OAAO;iBAAC;gBAC7B,UAAU,EAAE;oBACV,MAAM,EAAE;wBACN,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,gCAAgC;qBACtC;oBACD,KAAK,EAAE;wBACL,IAAI,EAAE,OAAO;wBACb,IAAI,EAAE;4BACJ,gCAAgC;4BAChC,+BAA+B;4BAC/B,kCAAkC;yBACnC;qBACF;iBACF;aACF;SACF;KACF;IACD,iBAAiB,EAAE;QACjB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,sBAAsB;QAC1B,WAAW,EAAE,oDAAoD;QACjE,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,OAAO;iBAAC;gBACnB,UAAU,EAAE;oBACV,KAAK,EAAE;wBACL,IAAI,EAAE,MAAM;wBACZ,MAAM,EAAE;4BAAC,WAAW;yBAAC;wBACrB,OAAO,EAAE,QAAQ;qBAClB;oBACD,QAAQ,EAAE;wBACR,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE,KAAK;4BACX,GAAG,EAAE,kCAAkC;yBACxC;wBACD,SAAS,EAAE,EAAE;qBACd;oBACD,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,WAAW,EACT,uDAAuD;wBACzD,YAAY,EAAE,IAAI;wBAClB,SAAS,EAAE,KAAK;qBACjB;oBACD,WAAW,EAAE;wBACX,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,qCAAqC;qBAC3C;iBACF;aACF;YACD,OAAO,EAAE;gBACP,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,MAAM;oBAAE,MAAM;iBAAC;gBAC1B,UAAU,EAAE;oBACV,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;oBACD,IAAI,EAAE;wBACJ,IAAI,EAAE,MAAM;wBACZ,MAAM,EAAE;4BAAC,UAAU;yBAAC;wBACpB,OAAO,EAAE,KAAK;qBACf;iBACF;aACF;YACD,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,KAAK;oBAAE,UAAU;iBAAC;gBAC7B,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,QAAQ,EAAE;wBACR,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,YAAY,EAAE,IAAI;wBAClB,SAAS,EAAE,KAAK;qBACjB;oBACD,WAAW,EAAE;wBACX,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,qCAAqC;qBAC3C;iBACF;aACF;SACF;KACF;IACD,eAAe,EAAE;QACf,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,oBAAoB;QACxB,IAAI,EAAE;YACJ,QAAQ,EAAE;gBACR,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,KAAK;oBAAE,KAAK;oBAAE,QAAQ;oBAAE,QAAQ;oBAAE,WAAW;iBAAC;gBACzD,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,QAAQ;qBACjB;oBACD,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,0CAA0C;qBAChD;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,SAAS;qBAChB;oBACD,KAAK,EAAE;wBACL,IAAI,EAAE,OAAO;wBACb,IAAI,EAAE;4BACJ,gCAAgC;4BAChC,+BAA+B;4BAC/B,kCAAkC;4BAClC,gCAAgC;4BAChC,yCAAyC;yBAC1C;qBACF;oBACD,UAAU,EAAE;wBACV,IAAI,EAAE,SAAS;qBAChB;oBACD,WAAW,EAAE;wBACX,IAAI,EAAE,SAAS;qBAChB;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,SAAS;qBAChB;oBACD,UAAU,EAAE;wBACV,IAAI,EAAE,SAAS;qBAChB;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,oCAAoC;qBAC1C;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE,KAAK;4BACX,GAAG,EAAE,kCAAkC;yBACxC;qBACF;oBACD,UAAU,EAAE;wBACV,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,uCAAuC;qBAC7C;iBACF;aACF;YACD,WAAW,EAAE;gBACX,IAAI,EAAE,QAAQ;gBACd,WAAW,EACT,iIAAiI;gBACnI,UAAU,EAAE;oBACV,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,QAAQ;qBACjB;oBACD,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,QAAQ;qBACjB;oBACD,WAAW,EAAE;wBACX,IAAI,EAAE,SAAS;qBAChB;oBACD,aAAa,EAAE;wBACb,IAAI,EAAE,SAAS;qBAChB;oBACD,iBAAiB,EAAE;wBACjB,IAAI,EAAE,SAAS;qBAChB;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,SAAS;qBAChB;iBACF;aACF;YACD,YAAY,EAAE;gBACZ,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,MAAM;iBAAC;gBAClB,UAAU,EAAE;oBACV,IAAI,EAAE;wBACJ,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,iCAAiC;qBACvC;oBACD,KAAK,EAAE;wBACL,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,iCAAiC;qBACvC;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,OAAO;wBACb,IAAI,EAAE;4BACJ,qCAAqC;4BACrC,kCAAkC;yBACnC;qBACF;oBACD,WAAW,EAAE;wBACX,IAAI,EAAE,QAAQ;wBACd,WAAW,EACT,oFAAoF;wBACtF,SAAS,EAAE,IAAI;qBAChB;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,MAAM;oBAAE,QAAQ;iBAAC;gBAC5B,UAAU,EAAE;oBACV,IAAI,EAAE;wBACJ,IAAI,EAAE,OAAO;wBACb,IAAI,EAAE;4BACJ,iCAAiC;4BACjC,qCAAqC;4BACrC,oCAAoC;yBACrC;qBACF;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,OAAO;wBACb,IAAI,EAAE;4BACJ,iCAAiC;4BACjC,qCAAqC;4BACrC,oCAAoC;yBACrC;qBACF;oBACD,iBAAiB,EAAE;wBACjB,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,0CAA0C;wBAC/C,WAAW,EACT,0EAA0E;qBAC7E;iBACF;aACF;YACD,YAAY,EAAE;gBACZ,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,IAAI;oBAAE,WAAW;iBAAC;gBAC7B,UAAU,EAAE;oBACV,EAAE,EAAE;wBACF,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,0CAA0C;qBAChD;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;iBACF;aACF;YACD,SAAS,EAAE;gBACT,IAAI,EAAE,QAAQ;gBACd,UAAU,EAAE,CAAA,CAAE;aACf;YACD,cAAc,EAAE;gBACd,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,MAAM;iBAAC;gBAClB,UAAU,EAAE;oBACV,IAAI,EAAE;wBACJ,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,iCAAiC;qBACvC;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,OAAO;wBACb,IAAI,EAAE;4BACJ,uCAAuC;4BACvC,qCAAqC;4BACrC,oCAAoC;yBACrC;qBACF;oBACD,OAAO,EAAE;wBACP,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE,OAAO;4BACb,IAAI,EAAE;gCACJ,uCAAuC;gCACvC,qCAAqC;gCACrC,oCAAoC;6BACrC;yBACF;qBACF;iBACF;aACF;YACD,YAAY,EAAE;gBACZ,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,KAAK;oBAAE,UAAU;iBAAC;gBAC7B,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,QAAQ;qBACjB;oBACD,QAAQ,EAAE;wBACR,IAAI,EAAE,SAAS;wBACf,KAAK,EAAE,IAAI;qBACZ;iBACF;aACF;YACD,WAAW,EAAE;gBACX,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,KAAK;oBAAE,SAAS;oBAAE,QAAQ;iBAAC;gBACtC,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,QAAQ;qBACjB;oBACD,OAAO,EAAE;wBACP,IAAI,EAAE,SAAS;wBACf,KAAK,EAAE,IAAI;qBACZ;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,sCAAsC;qBAC5C;iBACF;aACF;YACD,aAAa,EAAE;gBACb,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,KAAK;iBAAC;gBACjB,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,qCAAqC;qBAC3C;iBACF;aACF;YACD,aAAa,EAAE;gBACb,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,KAAK;oBAAE,KAAK;oBAAE,KAAK;oBAAE,SAAS;oBAAE,aAAa;oBAAE,WAAW;iBAAC;gBACtE,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,QAAQ;qBACjB;oBACD,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,OAAO,EAAE;wBACP,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,qCAAqC;qBAC3C;oBACD,WAAW,EAAE;wBACX,IAAI,EAAE,QAAQ;qBACf;oBACD,WAAW,EAAE;wBACX,IAAI,EAAE,QAAQ;wBACd,YAAY,EAAE,GAAG;wBACjB,SAAS,EAAE,IAAI;qBAChB;oBACD,iBAAiB,EAAE;wBACjB,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE,KAAK;4BACX,GAAG,EAAE,6BAA6B;yBACnC;qBACF;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,SAAS;wBACf,OAAO,EAAE,CAAC;qBACX;oBACD,mBAAmB,EAAE;wBACnB,IAAI,EAAE,SAAS;qBAChB;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE,KAAK;4BACX,GAAG,EAAE,kCAAkC;yBACxC;qBACF;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,6CAA6C;qBACnD;oBACD,WAAW,EAAE;wBACX,IAAI,EAAE,QAAQ;wBACd,WAAW,EAAE;4BACX,2CAA2C;4BAC3C,qCAAqC;yBACtC;qBACF;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;iBACF;aACF;YACD,oBAAoB,EAAE;gBACpB,IAAI,EAAE,QAAQ;gBACd,UAAU,EAAE;oBACV,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,QAAQ;qBACjB;iBACF;aACF;YACD,gBAAgB,EAAE;gBAChB,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,MAAM;iBAAC;gBAClB,UAAU,EAAE;oBACV,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,QAAQ;qBACjB;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,OAAO;wBACb,IAAI,EAAE;4BACJ,6CAA6C;4BAC7C,0CAA0C;yBAC3C;qBACF;oBACD,WAAW,EAAE;wBACX,IAAI,EAAE,QAAQ;wBACd,WAAW,EACT,gHAAgH;wBAClH,SAAS,EAAE,IAAI;qBAChB;iBACF;aACF;YACD,oBAAoB,EAAE;gBACpB,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,QAAQ;iBAAC;gBACpB,UAAU,EAAE;oBACV,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,QAAQ;qBACjB;iBACF;aACF;YACD,iBAAiB,EAAE;gBACjB,IAAI,EAAE,QAAQ;gBACd,UAAU,EAAE,CAAA,CAAE;aACf;YACD,cAAc,EAAE;gBACd,IAAI,EAAE,QAAQ;gBACd,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,QAAQ;qBACjB;oBACD,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,SAAS;qBAChB;oBACD,KAAK,EAAE;wBACL,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE,KAAK;4BACX,GAAG,EAAE,uCAAuC;yBAC7C;qBACF;iBACF;aACF;YACD,WAAW,EAAE;gBACX,IAAI,EAAE,QAAQ;gBACd,UAAU,EAAE;oBACV,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,QAAQ;qBACjB;oBACD,KAAK,EAAE;wBACL,IAAI,EAAE,QAAQ;wBACd,WAAW,EAAE;4BACX,gCAAgC;4BAChC,gCAAgC;4BAChC,qCAAqC;4BACrC,uCAAuC;4BACvC,yCAAyC;4BACzC,sCAAsC;4BACtC,oCAAoC;4BACpC,oCAAoC;4BACpC,sCAAsC;4BACtC,qCAAqC;4BACrC,qCAAqC;4BACrC,qCAAqC;yBACtC;qBACF;oBACD,WAAW,EAAE;wBACX,IAAI,EAAE,QAAQ;wBACd,WAAW,EACT,+FAA+F;wBACjG,SAAS,EAAE,IAAI;qBAChB;iBACF;aACF;YACD,WAAW,EAAE;gBACX,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,yEAAyE;aAC5E;YACD,WAAW,EAAE;gBACX,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,yEAAyE;aAC5E;YACD,gBAAgB,EAAE;gBAChB,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,uCAAuC;aACrD;YACD,kBAAkB,EAAE;gBAClB,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,qDAAqD;aACnE;YACD,oBAAoB,EAAE;gBACpB,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,uDAAuD;aACrE;YACD,iBAAiB,EAAE;gBACjB,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,+DAA+D;aAClE;YACD,sBAAsB,EAAE;gBACtB,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,yDAAyD;aACvE;YACD,gBAAgB,EAAE;gBAChB,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,mFAAmF;aACtF;YACD,eAAe,EAAE;gBACf,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,4BAA4B;aAC1C;YACD,eAAe,EAAE;gBACf,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,0BAA0B;aACxC;YACD,iBAAiB,EAAE;gBACjB,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,6BAA6B;aAC3C;YACD,gBAAgB,EAAE;gBAChB,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,+BAA+B;aAC7C;YACD,gBAAgB,EAAE;gBAChB,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,2BAA2B;aACzC;YACD,gBAAgB,EAAE;gBAChB,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,2BAA2B;aACzC;SACF;KACF;IACD,gCAAgC,EAAE;QAChC,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,qCAAqC;QACzC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,iKAAiK;gBACnK,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,KAAK;4BAAE,OAAO;yBAAC;wBAC1B,UAAU,EAAE;4BACV,GAAG,EAAE;gCACH,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,KAAK;6BACd;4BACD,KAAK,EAAE;gCACL,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,8CAA8C;iCACpD;6BACF;4BACD,KAAK,EAAE;gCACL,IAAI,EAAE,KAAK;gCACX,GAAG,EAAE,+CAA+C;6BACrD;yBACF;qBACF;iBACF;aACF;YACD,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,KAAK;iBAAC;gBACjB,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,QAAQ;qBACjB;iBACF;aACF;YACD,KAAK,EAAE;gBACL,IAAI,EAAE,QAAQ;gBACd,UAAU,EAAE;oBACV,aAAa,EAAE;wBACb,IAAI,EAAE,QAAQ;qBACf;oBACD,cAAc,EAAE;wBACd,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF;IACD,oBAAoB,EAAE;QACpB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,yBAAyB;QAC7B,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;gBACd,WAAW,EACT,kIAAkI;gBACpI,GAAG,EAAE,KAAK;gBACV,MAAM,EAAE;oBACN,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,KAAK;wBAAE,aAAa;wBAAE,WAAW;qBAAC;oBAC7C,UAAU,EAAE;wBACV,GAAG,EAAE;4BACH,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,KAAK;yBACd;wBACD,WAAW,EAAE;4BACX,IAAI,EAAE,QAAQ;4BACd,YAAY,EAAE,EAAE;4BAChB,SAAS,EAAE,GAAG;yBACf;wBACD,WAAW,EAAE;4BACX,IAAI,EAAE,QAAQ;4BACd,YAAY,EAAE,GAAG;4BACjB,SAAS,EAAE,IAAI;yBAChB;wBACD,iBAAiB,EAAE;4BACjB,IAAI,EAAE,OAAO;4BACb,KAAK,EAAE;gCACL,IAAI,EAAE,KAAK;gCACX,GAAG,EAAE,6BAA6B;6BACnC;yBACF;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,MAAM;4BACZ,MAAM,EAAE;gCAAC,WAAW;gCAAE,YAAY;6BAAC;4BACnC,OAAO,EAAE,OAAO;yBACjB;wBACD,mBAAmB,EAAE;4BACnB,IAAI,EAAE,SAAS;4BACf,WAAW,EACT,4GAA4G;yBAC/G;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,OAAO;4BACb,WAAW,EAAE,mBAAmB;4BAChC,IAAI,EAAE;gCAAC,uCAAuC;6BAAC;yBAChD;wBACD,WAAW,EAAE;4BACX,IAAI,EAAE,QAAQ;4BACd,WAAW,EAAE;gCACX,2CAA2C;gCAC3C,qCAAqC;6BACtC;yBACF;wBACD,SAAS,EAAE;4BACT,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,UAAU;yBACnB;qBACF;iBACF;aACF;SACF;KACF;IACD,wBAAwB,EAAE;QACxB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,6BAA6B;QACjC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,0FAA0F;gBAC5F,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,OAAO;qBAAC;oBACnB,UAAU,EAAE;wBACV,KAAK,EAAE;4BACL,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,eAAe;yBACxB;wBACD,KAAK,EAAE;4BACL,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,CAAC;4BACV,OAAO,EAAE,GAAG;4BACZ,OAAO,EAAE,EAAE;yBACZ;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,OAAO;yBAAC;wBACnB,UAAU,EAAE;4BACV,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;6BACf;4BACD,KAAK,EAAE;gCACL,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,sCAAsC;iCAC5C;6BACF;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,wBAAwB,EAAE;QACxB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,6BAA6B;QACjC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,6FAA6F;gBAC/F,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,OAAO;qBAAC;oBACnB,UAAU,EAAE;wBACV,KAAK,EAAE;4BACL,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,eAAe;yBACxB;wBACD,KAAK,EAAE;4BACL,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,CAAC;4BACV,OAAO,EAAE,GAAG;4BACZ,OAAO,EAAE,EAAE;yBACZ;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,MAAM;yBAAC;wBAClB,UAAU,EAAE;4BACV,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;6BACf;4BACD,IAAI,EAAE;gCACJ,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,qCAAqC;iCAC3C;6BACF;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN;wBACE,IAAI,EAAE,cAAc;qBACrB;oBACD;wBACE,IAAI,EAAE,gBAAgB;qBACvB;iBACF;aACF;SACF;KACF;IACD,wBAAwB,EAAE;QACxB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,6BAA6B;QACjC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,iGAAiG;gBACnG,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,OAAO;qBAAC;oBACnB,UAAU,EAAE;wBACV,KAAK,EAAE;4BACL,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,eAAe;yBACxB;wBACD,KAAK,EAAE;4BACL,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,CAAC;4BACV,OAAO,EAAE,GAAG;4BACZ,OAAO,EAAE,EAAE;yBACZ;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;yBACf;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;4BACd,WAAW,EACT,2DAA2D;4BAC7D,WAAW,EAAE;gCACX,oBAAoB;gCACpB,kBAAkB;gCAClB,kBAAkB;gCAClB,0BAA0B;6BAC3B;4BACD,OAAO,EAAE,oBAAoB;yBAC9B;wBACD,WAAW,EAAE;4BACX,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,KAAK;yBACf;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,MAAM;yBAAC;wBAClB,UAAU,EAAE;4BACV,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;6BACf;4BACD,IAAI,EAAE;gCACJ,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,qCAAqC;iCAC3C;6BACF;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN;wBACE,IAAI,EAAE,cAAc;qBACrB;oBACD;wBACE,IAAI,EAAE,gBAAgB;qBACvB;iBACF;aACF;SACF;KACF;IACD,kBAAkB,EAAE;QAClB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,uBAAuB;QAC3B,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,uFAAuF;gBACzF,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,MAAM;qBAAC;oBAClB,UAAU,EAAE;wBACV,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,QAAQ;yBACjB;wBACD,KAAK,EAAE;4BACL,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,CAAC;4BACV,OAAO,EAAE,GAAG;4BACZ,OAAO,EAAE,EAAE;yBACZ;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,MAAM;yBAAC;wBAClB,UAAU,EAAE;4BACV,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;6BACf;4BACD,IAAI,EAAE;gCACJ,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,qCAAqC;iCAC3C;6BACF;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN;wBACE,IAAI,EAAE,aAAa;qBACpB;iBACF;aACF;SACF;KACF;IACD,2BAA2B,EAAE;QAC3B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,gCAAgC;QACpC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,iEAAiE;gBACnE,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,MAAM;qBAAC;oBAClB,UAAU,EAAE;wBACV,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,QAAQ;4BAChB,WAAW,EAAE,sCAAsC;yBACpD;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,MAAM;4BAAE,UAAU;4BAAE,SAAS;yBAAC;wBACzC,UAAU,EAAE;4BACV,IAAI,EAAE;gCACJ,IAAI,EAAE,KAAK;gCACX,GAAG,EAAE,sCAAsC;6BAC5C;4BACD,QAAQ,EAAE;gCACR,IAAI,EAAE,SAAS;gCACf,WAAW,EACT,sGAAsG;6BACzG;4BACD,OAAO,EAAE;gCACP,IAAI,EAAE,SAAS;gCACf,WAAW,EACT,yFAAyF;6BAC5F;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,4BAA4B,EAAE;QAC5B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,iCAAiC;QACrC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,kDAAkD;gBAC/D,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,OAAO;qBAAC;oBACnB,UAAU,EAAE;wBACV,KAAK,EAAE;4BACL,IAAI,EAAE,OAAO;4BACb,KAAK,EAAE;gCACL,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,QAAQ;6BACjB;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,OAAO;yBAAC;wBACnB,UAAU,EAAE;4BACV,KAAK,EAAE;gCACL,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,sCAAsC;iCAC5C;6BACF;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,0BAA0B,EAAE;QAC1B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,+BAA+B;QACnC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,4LAA4L;gBAC9L,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,MAAM;qBAAC;oBAClB,UAAU,EAAE;wBACV,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,QAAQ;4BAChB,WAAW,EACT,kFAAkF;yBACrF;wBACD,KAAK,EAAE;4BACL,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,CAAC;4BACV,OAAO,EAAE,GAAG;4BACZ,OAAO,EAAE,EAAE;yBACZ;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,MAAM;yBAAC;wBAClB,UAAU,EAAE;4BACV,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;6BACf;4BACD,IAAI,EAAE;gCACJ,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,yCAAyC;iCAC/C;6BACF;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN;wBACE,IAAI,EAAE,aAAa;qBACpB;iBACF;aACF;SACF;KACF;IACD,mBAAmB,EAAE;QACnB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,wBAAwB;QAC5B,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,iEAAiE;gBACnE,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,KAAK;qBAAC;oBACjB,UAAU,EAAE;wBACV,GAAG,EAAE;4BACH,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,QAAQ;4BAChB,WAAW,EAAE,4CAA4C;yBAC1D;wBACD,GAAG,EAAE;4BACH,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,KAAK;4BACb,WAAW,EACT,+EAA+E;yBAClF;wBACD,KAAK,EAAE;4BACL,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,CAAC;4BACV,OAAO,EAAE,GAAG;4BACZ,OAAO,EAAE,EAAE;yBACZ;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,KAAK;4BAAE,OAAO;yBAAC;wBAC1B,UAAU,EAAE;4BACV,GAAG,EAAE;gCACH,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,QAAQ;6BACjB;4BACD,GAAG,EAAE;gCACH,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,KAAK;6BACd;4BACD,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;6BACf;4BACD,KAAK,EAAE;gCACL,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,iCAAiC;iCACvC;6BACF;yBACF;qBACF;iBACF;aACF;YACD,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,WAAW;oBAAE,WAAW;oBAAE,OAAO;iBAAC;gBAC7C,UAAU,EAAE;oBACV,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;oBACD,KAAK,EAAE;wBACL,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,qCAAqC;qBAC3C;iBACF;aACF;SACF;KACF;IACD,sBAAsB,EAAE;QACtB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,2BAA2B;QAC/B,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,gHAAgH;gBAClH,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,MAAM;qBAAC;oBAClB,UAAU,EAAE;wBACV,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,QAAQ;4BAChB,WAAW,EAAE,wCAAwC;yBACtD;wBACD,KAAK,EAAE;4BACL,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,CAAC;4BACV,OAAO,EAAE,GAAG;4BACZ,OAAO,EAAE,EAAE;yBACZ;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,MAAM;yBAAC;wBAClB,UAAU,EAAE;4BACV,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;6BACf;4BACD,IAAI,EAAE;gCACJ,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,qCAAqC;iCAC3C;6BACF;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN;wBACE,IAAI,EAAE,aAAa;qBACpB;iBACF;aACF;SACF;KACF;IACD,wBAAwB,EAAE;QACxB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,6BAA6B;QACjC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,0HAA0H;gBAC5H,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,KAAK;qBAAC;oBACjB,UAAU,EAAE;wBACV,GAAG,EAAE;4BACH,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,QAAQ;4BAChB,WAAW,EAAE,oCAAoC;yBAClD;wBACD,KAAK,EAAE;4BACL,IAAI,EAAE,SAAS;4BACf,WAAW,EACT,gEAAgE;4BAClE,OAAO,EAAE,CAAC;4BACV,OAAO,EAAE,CAAC;4BACV,OAAO,EAAE,IAAI;yBACd;wBACD,YAAY,EAAE;4BACZ,IAAI,EAAE,SAAS;4BACf,WAAW,EACT,mEAAmE;4BACrE,OAAO,EAAE,EAAE;4BACX,OAAO,EAAE,CAAC;4BACV,OAAO,EAAE,IAAI;yBACd;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,QAAQ;yBAAC;wBACpB,UAAU,EAAE;4BACV,MAAM,EAAE;gCACN,IAAI,EAAE,OAAO;gCACb,IAAI,EAAE;oCACJ,uCAAuC;oCACvC,qCAAqC;oCACrC,oCAAoC;iCACrC;6BACF;4BACD,UAAU,EAAE;gCACV,IAAI,EAAE,KAAK;gCACX,GAAG,EAAE,uCAAuC;6BAC7C;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN;wBACE,IAAI,EAAE,UAAU;qBACjB;iBACF;aACF;SACF;KACF;IACD,mBAAmB,EAAE;QACnB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,wBAAwB;QAC5B,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,4HAA4H;gBAC9H,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,MAAM;qBAAC;oBAClB,UAAU,EAAE;wBACV,IAAI,EAAE;4BACJ,IAAI,EAAE,OAAO;4BACb,WAAW,EAAE,oDAAoD;4BACjE,KAAK,EAAE;gCACL,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,QAAQ;6BACjB;4BACD,SAAS,EAAE,EAAE;yBACd;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,OAAO;yBAAC;wBACnB,UAAU,EAAE;4BACV,KAAK,EAAE;gCACL,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,iCAAiC;iCACvC;6BACF;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,oBAAoB,EAAE;QACpB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,yBAAyB;QAC7B,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,wCAAwC;gBACrD,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,KAAK;qBAAC;oBACjB,UAAU,EAAE;wBACV,GAAG,EAAE;4BACH,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,QAAQ;4BAChB,WAAW,EAAE,mCAAmC;yBACjD;wBACD,GAAG,EAAE;4BACH,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,KAAK;4BACb,WAAW,EACT,iFAAiF;yBACpF;wBACD,KAAK,EAAE;4BACL,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,CAAC;4BACV,OAAO,EAAE,GAAG;4BACZ,OAAO,EAAE,EAAE;yBACZ;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,KAAK;4BAAE,OAAO;yBAAC;wBAC1B,UAAU,EAAE;4BACV,GAAG,EAAE;gCACH,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,QAAQ;6BACjB;4BACD,GAAG,EAAE;gCACH,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,KAAK;6BACd;4BACD,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;6BACf;4BACD,KAAK,EAAE;gCACL,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,iCAAiC;iCACvC;6BACF;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,wBAAwB,EAAE;QACxB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,6BAA6B;QACjC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,yCAAyC;gBACtD,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,KAAK;qBAAC;oBACjB,UAAU,EAAE;wBACV,GAAG,EAAE;4BACH,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,QAAQ;4BAChB,WAAW,EAAE,mCAAmC;yBACjD;wBACD,GAAG,EAAE;4BACH,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,KAAK;4BACb,WAAW,EACT,kFAAkF;yBACrF;wBACD,KAAK,EAAE;4BACL,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,CAAC;4BACV,OAAO,EAAE,GAAG;4BACZ,OAAO,EAAE,EAAE;yBACZ;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,KAAK;4BAAE,YAAY;yBAAC;wBAC/B,UAAU,EAAE;4BACV,GAAG,EAAE;gCACH,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,QAAQ;6BACjB;4BACD,GAAG,EAAE;gCACH,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,KAAK;6BACd;4BACD,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;6BACf;4BACD,UAAU,EAAE;gCACV,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,qCAAqC;iCAC3C;6BACF;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,4BAA4B,EAAE;QAC5B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,iCAAiC;QACrC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,6EAA6E;gBAC/E,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,UAAU,EAAE;wBACV,KAAK,EAAE;4BACL,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,CAAC;4BACV,OAAO,EAAE,GAAG;4BACZ,OAAO,EAAE,EAAE;yBACZ;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,OAAO;yBAAC;wBACnB,UAAU,EAAE;4BACV,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;6BACf;4BACD,KAAK,EAAE;gCACL,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,sCAAsC;iCAC5C;6BACF;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,sBAAsB,EAAE;QACtB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,2BAA2B;QAC/B,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,uHAAuH;gBACzH,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,UAAU,EAAE;wBACV,SAAS,EAAE;4BACT,IAAI,EAAE,QAAQ;4BACd,WAAW,EACT,oIAAoI;yBACvI;wBACD,KAAK,EAAE;4BACL,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,CAAC;4BACV,OAAO,EAAE,GAAG;4BACZ,OAAO,EAAE,EAAE;yBACZ;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,MAAM;yBAAC;wBAClB,UAAU,EAAE;4BACV,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;6BACf;4BACD,IAAI,EAAE;gCACJ,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,qCAAqC;iCAC3C;6BACF;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,eAAe,EAAE;QACf,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,oBAAoB;QACxB,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;gBACd,WAAW,EAAE,0DAA0D;gBACvE,GAAG,EAAE,KAAK;gBACV,MAAM,EAAE;oBACN,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,SAAS;wBAAE,WAAW;qBAAC;oBAClC,UAAU,EAAE;wBACV,OAAO,EAAE;4BACP,IAAI,EAAE,KAAK;4BACX,GAAG,EAAE,gCAAgC;yBACtC;wBACD,SAAS,EAAE;4BACT,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,UAAU;yBACnB;qBACF;iBACF;aACF;SACF;KACF;IACD,eAAe,EAAE;QACf,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,oBAAoB;QACxB,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;gBACd,WAAW,EAAE,mCAAmC;gBAChD,GAAG,EAAE,KAAK;gBACV,MAAM,EAAE;oBACN,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,MAAM;wBAAE,WAAW;qBAAC;oBAC/B,UAAU,EAAE;wBACV,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;4BACd,SAAS,EAAE,IAAI;4BACf,YAAY,EAAE,GAAG;4BACjB,WAAW,EACT,wEAAwE;yBAC3E;wBACD,QAAQ,EAAE;4BACR,IAAI,EAAE,OAAO;4BACb,WAAW,EAAE,kDAAkD;4BAC/D,KAAK,EAAE;gCACL,IAAI,EAAE,KAAK;gCACX,GAAG,EAAE,+BAA+B;6BACrC;yBACF;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,OAAO;4BACb,WAAW,EACT,qDAAqD;4BACvD,KAAK,EAAE;gCACL,IAAI,EAAE,KAAK;gCACX,GAAG,EAAE,6BAA6B;6BACnC;yBACF;wBACD,KAAK,EAAE;4BACL,IAAI,EAAE,KAAK;4BACX,GAAG,EAAE,iCAAiC;yBACvC;wBACD,KAAK,EAAE;4BACL,IAAI,EAAE,OAAO;4BACb,IAAI,EAAE;gCACJ,2BAA2B;gCAC3B,0BAA0B;gCAC1B,6BAA6B;gCAC7B,2BAA2B;gCAC3B,oCAAoC;6BACrC;yBACF;wBACD,KAAK,EAAE;4BACL,IAAI,EAAE,OAAO;4BACb,WAAW,EACT,wDAAwD;4BAC1D,SAAS,EAAE,CAAC;4BACZ,KAAK,EAAE;gCACL,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,UAAU;6BACnB;yBACF;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,OAAO;4BACb,WAAW,EACT,gEAAgE;4BAClE,IAAI,EAAE;gCAAC,uCAAuC;6BAAC;yBAChD;wBACD,IAAI,EAAE;4BACJ,IAAI,EAAE,OAAO;4BACb,WAAW,EACT,2EAA2E;4BAC7E,SAAS,EAAE,CAAC;4BACZ,KAAK,EAAE;gCACL,IAAI,EAAE,QAAQ;gCACd,SAAS,EAAE,GAAG;gCACd,YAAY,EAAE,EAAE;6BACjB;yBACF;wBACD,SAAS,EAAE;4BACT,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,UAAU;4BAClB,WAAW,EACT,kEAAkE;yBACrE;qBACF;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,MAAM;oBAAE,QAAQ;iBAAC;gBAC5B,UAAU,EAAE;oBACV,IAAI,EAAE;wBACJ,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,gCAAgC;qBACtC;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,gCAAgC;qBACtC;iBACF;aACF;YACD,MAAM,EAAE;gBACN,IAAI,EAAE,QAAQ;gBACd,WAAW,EAAE,iCAAiC;gBAC9C,QAAQ,EAAE;oBAAC,OAAO;oBAAE,MAAM;oBAAE,OAAO;iBAAC;gBACpC,UAAU,EAAE;oBACV,KAAK,EAAE;wBACL,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,kCAAkC;qBACxC;oBACD,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;wBACd,WAAW,EAAE,2CAA2C;qBACzD;oBACD,KAAK,EAAE;wBACL,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;YACD,SAAS,EAAE;gBACT,IAAI,EAAE,QAAQ;gBACd,WAAW,EACT,2IAA2I;gBAC7I,QAAQ,EAAE;oBAAC,OAAO;oBAAE,KAAK;iBAAC;gBAC1B,UAAU,EAAE;oBACV,KAAK,EAAE;wBACL,IAAI,EAAE,SAAS;wBACf,OAAO,EAAE,CAAC;qBACX;oBACD,GAAG,EAAE;wBACH,IAAI,EAAE,SAAS;wBACf,OAAO,EAAE,CAAC;qBACX;iBACF;aACF;SACF;KACF;IACD,mBAAmB,EAAE;QACnB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,wBAAwB;QAC5B,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;gBACd,GAAG,EAAE,KAAK;gBACV,WAAW,EACT,mLAAmL;gBACrL,MAAM,EAAE;oBACN,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,MAAM;wBAAE,WAAW;qBAAC;oBAC/B,UAAU,EAAE;wBACV,SAAS,EAAE;4BACT,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,UAAU;yBACnB;wBACD,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,QAAQ;4BAChB,WAAW,EAAE,wCAAwC;yBACtD;wBACD,qBAAqB,EAAE;4BACrB,IAAI,EAAE,OAAO;4BACb,SAAS,EAAE,EAAE;4BACb,KAAK,EAAE;gCACL,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,QAAQ;6BACjB;4BACD,WAAW,EACT,wEAAwE;yBAC3E;wBACD,cAAc,EAAE;4BACd,IAAI,EAAE,OAAO;4BACb,SAAS,EAAE,CAAC;4BACZ,KAAK,EAAE;gCACL,IAAI,EAAE,OAAO;gCACb,IAAI,EAAE;oCAAC,wCAAwC;iCAAC;6BACjD;yBACF;qBACF;iBACF;aACF;YACD,WAAW,EAAE;gBACX,IAAI,EAAE,QAAQ;gBACd,WAAW,EAAE,kCAAkC;gBAC/C,UAAU,EAAE,CAAA,CAAE;aACf;SACF;KACF;IACD,iBAAiB,EAAE;QACjB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,sBAAsB;QAC1B,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,WAAW,EACT,6DAA6D;gBAC/D,IAAI,EAAE,QAAQ;gBACd,GAAG,EAAE,KAAK;gBACV,MAAM,EAAE;oBACN,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,SAAS;wBAAE,WAAW;qBAAC;oBAClC,UAAU,EAAE;wBACV,OAAO,EAAE;4BACP,IAAI,EAAE,KAAK;4BACX,GAAG,EAAE,gCAAgC;yBACtC;wBACD,SAAS,EAAE;4BACT,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,UAAU;yBACnB;qBACF;iBACF;aACF;SACF;KACF;IACD,sBAAsB,EAAE;QACtB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,2BAA2B;QAC/B,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,sEAAsE;gBACxE,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,GAAG;qBAAC;oBACf,UAAU,EAAE;wBACV,CAAC,EAAE;4BACD,IAAI,EAAE,QAAQ;4BACd,WAAW,EACT,oHAAoH;yBACvH;wBACD,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;4BACd,WAAW,EAAE;gCAAC,KAAK;gCAAE,QAAQ;6BAAC;4BAC9B,OAAO,EAAE,QAAQ;4BACjB,WAAW,EAAE,yCAAyC;yBACvD;wBACD,KAAK,EAAE;4BACL,IAAI,EAAE,QAAQ;4BACd,WAAW,EACT,8LAA8L;yBACjM;wBACD,KAAK,EAAE;4BACL,IAAI,EAAE,QAAQ;4BACd,WAAW,EACT,kMAAkM;yBACrM;wBACD,QAAQ,EAAE;4BACR,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,eAAe;4BACvB,WAAW,EACT,wIAAwI;yBAC3I;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,eAAe;4BACvB,WAAW,EACT,sFAAsF;yBACzF;wBACD,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,UAAU;4BAClB,WAAW,EACT,oIAAoI;yBACvI;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;4BACd,WAAW,EACT,oIAAoI;yBACvI;wBACD,GAAG,EAAE;4BACH,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,KAAK;4BACb,WAAW,EACT,gIAAgI;yBACnI;wBACD,GAAG,EAAE;4BACH,IAAI,EAAE,OAAO;4BACb,KAAK,EAAE;gCACL,IAAI,EAAE,QAAQ;gCACd,SAAS,EAAE,GAAG;gCACd,YAAY,EAAE,EAAE;6BACjB;4BACD,WAAW,EACT,+KAA+K;yBAClL;wBACD,KAAK,EAAE;4BACL,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,CAAC;4BACV,OAAO,EAAE,GAAG;4BACZ,OAAO,EAAE,EAAE;yBACZ;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;4BACd,WAAW,EACT,+FAA+F;yBAClG;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,OAAO;yBAAC;wBACnB,UAAU,EAAE;4BACV,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;6BACf;4BACD,SAAS,EAAE;gCACT,IAAI,EAAE,SAAS;gCACf,WAAW,EACT,iHAAiH;6BACpH;4BACD,KAAK,EAAE;gCACL,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,iCAAiC;iCACvC;6BACF;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN;wBACE,IAAI,EAAE,gBAAgB;qBACvB;iBACF;aACF;SACF;KACF;IACD,2BAA2B,EAAE;QAC3B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,gCAAgC;QACpC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EACT,kGAAkG;gBACpG,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,cAAc;yBAAC;wBAC1B,UAAU,EAAE;4BACV,YAAY,EAAE;gCACZ,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,oCAAoC;iCAC1C;6BACF;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,UAAU,EAAE,CAAA,CAAE;qBACf;iBACF;aACF;SACF;KACF;IACD,qBAAqB,EAAE;QACrB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,0BAA0B;QAC9B,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;gBACd,GAAG,EAAE,KAAK;gBACV,WAAW,EACT,kOAAkO;gBACpO,MAAM,EAAE;oBACN,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,MAAM;wBAAE,WAAW;qBAAC;oBAC/B,UAAU,EAAE;wBACV,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,QAAQ;4BAChB,WAAW,EAAE,wCAAwC;yBACtD;wBACD,KAAK,EAAE;4BACL,IAAI,EAAE,OAAO;4BACb,SAAS,EAAE,CAAC;4BACZ,KAAK,EAAE;gCACL,IAAI,EAAE,OAAO;gCACb,IAAI,EAAE;oCACJ,0CAA0C;oCAC1C,4CAA4C;oCAC5C,uCAAuC;iCACxC;6BACF;yBACF;wBACD,SAAS,EAAE;4BACT,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,UAAU;yBACnB;wBACD,aAAa,EAAE;4BACb,IAAI,EAAE,OAAO;4BACb,SAAS,EAAE,EAAE;4BACb,KAAK,EAAE;gCACL,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,QAAQ;6BACjB;4BACD,WAAW,EAAE,4BAA4B;yBAC1C;qBACF;iBACF;aACF;YACD,WAAW,EAAE;gBACX,IAAI,EAAE,QAAQ;gBACd,WAAW,EAAE,mDAAmD;gBAChE,UAAU,EAAE,CAAA,CAAE;aACf;YACD,aAAa,EAAE;gBACb,IAAI,EAAE,QAAQ;gBACd,WAAW,EAAE,uCAAuC;gBACpD,UAAU,EAAE,CAAA,CAAE;aACf;YACD,QAAQ,EAAE;gBACR,IAAI,EAAE,QAAQ;gBACd,WAAW,EAAE,sCAAsC;gBACnD,QAAQ,EAAE;oBAAC,MAAM;iBAAC;gBAClB,UAAU,EAAE;oBACV,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,QAAQ;qBACjB;iBACF;aACF;SACF;KACF;IACD,iBAAiB,EAAE;QACjB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,sBAAsB;QAC1B,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;gBACd,WAAW,EACT,kIAAkI;gBACpI,GAAG,EAAE,KAAK;gBACV,MAAM,EAAE;oBACN,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,SAAS;wBAAE,WAAW;qBAAC;oBAClC,UAAU,EAAE;wBACV,OAAO,EAAE;4BACP,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,KAAK;4BACb,WAAW,EAAE,mCAAmC;yBACjD;wBACD,SAAS,EAAE;4BACT,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,UAAU;yBACnB;qBACF;iBACF;aACF;SACF;KACF;IACD,gBAAgB,EAAE;QAChB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,qBAAqB;QACzB,IAAI,EAAE;YACJ,aAAa,EAAE;gBACb,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,KAAK;oBAAE,KAAK;oBAAE,MAAM;oBAAE,SAAS;iBAAC;gBAC3C,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,QAAQ;qBACjB;oBACD,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;wBACd,SAAS,EAAE,EAAE;wBACb,SAAS,EAAE,CAAC;qBACb;oBACD,OAAO,EAAE;wBACP,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,qCAAqC;qBAC3C;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,aAAa,EAAE;wBACb,IAAI,EAAE,SAAS;wBACf,OAAO,EAAE,CAAC;qBACX;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE,KAAK;4BACX,GAAG,EAAE,kCAAkC;yBACxC;qBACF;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,yCAAyC;qBAC/C;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,KAAK;oBAAE,KAAK;oBAAE,SAAS;oBAAE,MAAM;oBAAE,SAAS;oBAAE,WAAW;iBAAC;gBACnE,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,QAAQ;qBACjB;oBACD,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,OAAO,EAAE;wBACP,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,qCAAqC;qBAC3C;oBACD,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;wBACd,SAAS,EAAE,EAAE;wBACb,SAAS,EAAE,CAAC;qBACb;oBACD,OAAO,EAAE;wBACP,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,qCAAqC;qBAC3C;oBACD,WAAW,EAAE;wBACX,IAAI,EAAE,QAAQ;wBACd,YAAY,EAAE,GAAG;wBACjB,SAAS,EAAE,IAAI;qBAChB;oBACD,iBAAiB,EAAE;wBACjB,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE,KAAK;4BACX,GAAG,EAAE,6BAA6B;yBACnC;qBACF;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,aAAa,EAAE;wBACb,IAAI,EAAE,SAAS;wBACf,OAAO,EAAE,CAAC;qBACX;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE,KAAK;4BACX,GAAG,EAAE,kCAAkC;yBACxC;qBACF;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,yCAAyC;qBAC/C;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;iBACF;aACF;YACD,YAAY,EAAE;gBACZ,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,KAAK;oBAAE,SAAS;iBAAC;gBAC5B,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,QAAQ;qBACjB;oBACD,OAAO,EAAE;wBACP,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,qCAAqC;qBAC3C;iBACF;aACF;YACD,eAAe,EAAE;gBACf,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,KAAK;oBAAE,KAAK;oBAAE,QAAQ;oBAAE,SAAS;oBAAE,WAAW;iBAAC;gBAC1D,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,QAAQ;qBACjB;oBACD,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,SAAS;qBAChB;oBACD,OAAO,EAAE;wBACP,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,0CAA0C;qBAChD;oBACD,IAAI,EAAE;wBACJ,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,uCAAuC;qBAC7C;oBACD,eAAe,EAAE;wBACf,IAAI,EAAE,OAAO;wBACb,SAAS,EAAE,EAAE;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE,KAAK;4BACX,GAAG,EAAE,sCAAsC;yBAC5C;qBACF;oBACD,KAAK,EAAE;wBACL,IAAI,EAAE,OAAO;wBACb,SAAS,EAAE,CAAC;wBACZ,KAAK,EAAE;4BACL,IAAI,EAAE,KAAK;4BACX,GAAG,EAAE,sCAAsC;yBAC5C;qBACF;oBACD,eAAe,EAAE;wBACf,IAAI,EAAE,SAAS;wBACf,OAAO,EAAE,CAAC;qBACX;oBACD,kBAAkB,EAAE;wBAClB,IAAI,EAAE,SAAS;wBACf,OAAO,EAAE,CAAC;qBACX;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE,KAAK;4BACX,GAAG,EAAE,kCAAkC;yBACxC;qBACF;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;iBACF;aACF;YACD,oBAAoB,EAAE;gBACpB,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,KAAK;oBAAE,KAAK;oBAAE,QAAQ;oBAAE,SAAS;oBAAE,WAAW;iBAAC;gBAC1D,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,QAAQ;qBACjB;oBACD,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,SAAS;qBAChB;oBACD,OAAO,EAAE;wBACP,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,0CAA0C;qBAChD;oBACD,aAAa,EAAE;wBACb,IAAI,EAAE,SAAS;wBACf,OAAO,EAAE,CAAC;qBACX;oBACD,eAAe,EAAE;wBACf,IAAI,EAAE,SAAS;wBACf,OAAO,EAAE,CAAC;qBACX;oBACD,kBAAkB,EAAE;wBAClB,IAAI,EAAE,SAAS;wBACf,OAAO,EAAE,CAAC;qBACX;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE,KAAK;4BACX,GAAG,EAAE,kCAAkC;yBACxC;qBACF;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;iBACF;aACF;YACD,WAAW,EAAE;gBACX,IAAI,EAAE,QAAQ;gBACd,WAAW,EAAE;oBACX,6BAA6B;oBAC7B,gCAAgC;oBAChC,mCAAmC;iBACpC;aACF;YACD,OAAO,EAAE;gBACP,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,2EAA2E;aAC9E;YACD,UAAU,EAAE;gBACV,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,uFAAuF;aAC1F;YACD,aAAa,EAAE;gBACb,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,sFAAsF;aACzF;YACD,eAAe,EAAE;gBACf,IAAI,EAAE,QAAQ;gBACd,UAAU,EAAE;oBACV,KAAK,EAAE;wBACL,IAAI,EAAE,SAAS;qBAChB;oBACD,OAAO,EAAE;wBACP,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,QAAQ;qBACjB;iBACF;aACF;YACD,aAAa,EAAE;gBACb,IAAI,EAAE,QAAQ;gBACd,WAAW,EAAE,sDAAsD;gBACnE,QAAQ,EAAE;oBAAC,OAAO;oBAAE,UAAU;iBAAC;gBAC/B,UAAU,EAAE;oBACV,KAAK,EAAE;wBACL,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,eAAe;qBACxB;oBACD,QAAQ,EAAE;wBACR,IAAI,EAAE,SAAS;wBACf,KAAK,EAAE,IAAI;qBACZ;iBACF;aACF;YACD,YAAY,EAAE;gBACZ,IAAI,EAAE,QAAQ;gBACd,WAAW,EACT,sJAAsJ;gBACxJ,QAAQ,EAAE;oBAAC,KAAK;iBAAC;gBACjB,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,QAAQ;wBAChB,WAAW,EACT,wEAAwE;qBAC3E;oBACD,UAAU,EAAE;wBACV,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,QAAQ;wBAChB,WAAW,EACT,gFAAgF;qBACnF;iBACF;aACF;SACF;KACF;IACD,kBAAkB,EAAE;QAClB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,uBAAuB;QAC3B,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;gBACd,WAAW,EACT,uHAAuH;gBACzH,GAAG,EAAE,KAAK;gBACV,MAAM,EAAE;oBACN,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,SAAS;wBAAE,WAAW;qBAAC;oBAClC,UAAU,EAAE;wBACV,OAAO,EAAE;4BACP,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,KAAK;yBACd;wBACD,SAAS,EAAE;4BACT,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,UAAU;yBACnB;qBACF;iBACF;aACF;SACF;KACF;IACD,gCAAgC,EAAE;QAChC,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,qCAAqC;QACzC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,mDAAmD;gBAChE,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,OAAO;qBAAC;oBACnB,UAAU,EAAE;wBACV,KAAK,EAAE;4BACL,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,eAAe;yBACxB;wBACD,KAAK,EAAE;4BACL,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,CAAC;4BACV,OAAO,EAAE,GAAG;4BACZ,OAAO,EAAE,EAAE;yBACZ;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,cAAc;yBAAC;wBAC1B,UAAU,EAAE;4BACV,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;6BACf;4BACD,YAAY,EAAE;gCACZ,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,8CAA8C;iCACpD;6BACF;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,qBAAqB,EAAE;QACrB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,0BAA0B;QAC9B,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,wFAAwF;gBAC1F,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,UAAU,EAAE;wBACV,KAAK,EAAE;4BACL,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,CAAC;4BACV,OAAO,EAAE,GAAG;4BACZ,OAAO,EAAE,EAAE;yBACZ;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,QAAQ;yBAAC;wBACpB,UAAU,EAAE;4BACV,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;6BACf;4BACD,MAAM,EAAE;gCACN,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,qCAAqC;iCAC3C;6BACF;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,wBAAwB,EAAE;QACxB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,6BAA6B;QACjC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,+DAA+D;gBACjE,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,OAAO;qBAAC;oBACnB,UAAU,EAAE;wBACV,KAAK,EAAE;4BACL,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,eAAe;yBACxB;wBACD,KAAK,EAAE;4BACL,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,CAAC;4BACV,OAAO,EAAE,GAAG;4BACZ,OAAO,EAAE,EAAE;yBACZ;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,SAAS;4BAAE,WAAW;yBAAC;wBAClC,UAAU,EAAE;4BACV,OAAO,EAAE;gCACP,IAAI,EAAE,KAAK;gCACX,GAAG,EAAE,qCAAqC;6BAC3C;4BACD,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;6BACf;4BACD,SAAS,EAAE;gCACT,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,qCAAqC;iCAC3C;6BACF;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,sBAAsB,EAAE;QACtB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,2BAA2B;QAC/B,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,gEAAgE;gBAClE,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,OAAO;qBAAC;oBACnB,UAAU,EAAE;wBACV,KAAK,EAAE;4BACL,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,eAAe;yBACxB;wBACD,KAAK,EAAE;4BACL,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,CAAC;4BACV,OAAO,EAAE,GAAG;4BACZ,OAAO,EAAE,EAAE;yBACZ;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,SAAS;4BAAE,SAAS;yBAAC;wBAChC,UAAU,EAAE;4BACV,OAAO,EAAE;gCACP,IAAI,EAAE,KAAK;gCACX,GAAG,EAAE,qCAAqC;6BAC3C;4BACD,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;6BACf;4BACD,OAAO,EAAE;gCACP,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,qCAAqC;iCAC3C;6BACF;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,6BAA6B,EAAE;QAC7B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,kCAAkC;QACtC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,8FAA8F;gBAChG,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,OAAO;qBAAC;oBACnB,UAAU,EAAE;wBACV,KAAK,EAAE;4BACL,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,eAAe;yBACxB;wBACD,KAAK,EAAE;4BACL,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,CAAC;4BACV,OAAO,EAAE,GAAG;4BACZ,OAAO,EAAE,EAAE;yBACZ;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,SAAS;4BAAE,WAAW;yBAAC;wBAClC,UAAU,EAAE;4BACV,OAAO,EAAE;gCACP,IAAI,EAAE,KAAK;gCACX,GAAG,EAAE,qCAAqC;6BAC3C;4BACD,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;6BACf;4BACD,SAAS,EAAE;gCACT,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,qCAAqC;iCAC3C;6BACF;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,mBAAmB,EAAE;QACnB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,wBAAwB;QAC5B,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,8DAA8D;gBAChE,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,MAAM;qBAAC;oBAClB,UAAU,EAAE;wBACV,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,QAAQ;4BAChB,WAAW,EAAE,mDAAmD;yBACjE;wBACD,KAAK,EAAE;4BACL,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,CAAC;4BACV,OAAO,EAAE,GAAG;4BACZ,OAAO,EAAE,EAAE;yBACZ;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,MAAM;4BAAE,OAAO;yBAAC;wBAC3B,UAAU,EAAE;4BACV,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;6BACf;4BACD,IAAI,EAAE;gCACJ,IAAI,EAAE,KAAK;gCACX,GAAG,EAAE,kCAAkC;6BACxC;4BACD,KAAK,EAAE;gCACL,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,sCAAsC;iCAC5C;6BACF;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,yBAAyB,EAAE;QACzB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,8BAA8B;QAClC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,+EAA+E;gBACjF,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,UAAU,EAAE;wBACV,KAAK,EAAE;4BACL,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,CAAC;4BACV,OAAO,EAAE,GAAG;4BACZ,OAAO,EAAE,EAAE;yBACZ;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,OAAO;yBAAC;wBACnB,UAAU,EAAE;4BACV,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;6BACf;4BACD,KAAK,EAAE;gCACL,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,kCAAkC;iCACxC;6BACF;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,wBAAwB,EAAE;QACxB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,6BAA6B;QACjC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,8FAA8F;gBAChG,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,UAAU,EAAE;wBACV,KAAK,EAAE;4BACL,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,CAAC;4BACV,OAAO,EAAE,GAAG;4BACZ,OAAO,EAAE,EAAE;yBACZ;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,OAAO;yBAAC;wBACnB,UAAU,EAAE;4BACV,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;6BACf;4BACD,KAAK,EAAE;gCACL,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,kCAAkC;iCACxC;6BACF;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,oBAAoB,EAAE;QACpB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,yBAAyB;QAC7B,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,8DAA8D;gBAChE,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,OAAO;qBAAC;oBACnB,UAAU,EAAE;wBACV,KAAK,EAAE;4BACL,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,eAAe;4BACvB,WAAW,EAAE,8CAA8C;yBAC5D;wBACD,KAAK,EAAE;4BACL,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,CAAC;4BACV,OAAO,EAAE,GAAG;4BACZ,OAAO,EAAE,EAAE;yBACZ;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,OAAO;yBAAC;wBACnB,UAAU,EAAE;4BACV,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;6BACf;4BACD,KAAK,EAAE;gCACL,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,kCAAkC;iCACxC;6BACF;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,oBAAoB,EAAE;QACpB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,yBAAyB;QAC7B,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,6FAA6F;gBAC/F,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,UAAU,EAAE;wBACV,KAAK,EAAE;4BACL,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,CAAC;4BACV,OAAO,EAAE,GAAG;4BACZ,OAAO,EAAE,EAAE;yBACZ;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,OAAO;yBAAC;wBACnB,UAAU,EAAE;4BACV,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;6BACf;4BACD,KAAK,EAAE;gCACL,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,qCAAqC;iCAC3C;6BACF;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,4BAA4B,EAAE;QAC5B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,iCAAiC;QACrC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,2GAA2G;gBAC7G,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,OAAO;qBAAC;oBACnB,UAAU,EAAE;wBACV,KAAK,EAAE;4BACL,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,eAAe;4BACvB,WAAW,EAAE,+CAA+C;yBAC7D;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,OAAO;4BACb,WAAW,EACT,6DAA6D;4BAC/D,SAAS,EAAE,EAAE;4BACb,KAAK,EAAE;gCACL,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,eAAe;6BACxB;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,eAAe;yBAAC;wBAC3B,UAAU,EAAE;4BACV,KAAK,EAAE;gCACL,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,KAAK;6BACd;4BACD,aAAa,EAAE;gCACb,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,OAAO;oCACb,IAAI,EAAE;wCACJ,sCAAsC;wCACtC,uCAAuC;qCACxC;iCACF;6BACF;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN;wBACE,IAAI,EAAE,eAAe;wBACrB,WAAW,EACT,uDAAuD;qBAC1D;iBACF;aACF;SACF;KACF;IACD,0BAA0B,EAAE;QAC1B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,+BAA+B;QACnC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,gCAAgC;gBAC7C,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,aAAa;qBAAC;oBACzB,UAAU,EAAE;wBACV,WAAW,EAAE;4BACX,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,QAAQ;4BAChB,WAAW,EAAE,gDAAgD;yBAC9D;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,aAAa;yBAAC;wBACzB,UAAU,EAAE;4BACV,WAAW,EAAE;gCACX,IAAI,EAAE,KAAK;gCACX,GAAG,EAAE,yCAAyC;6BAC/C;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,2BAA2B,EAAE;QAC3B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,gCAAgC;QACpC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,wCAAwC;gBACrD,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,MAAM;qBAAC;oBAClB,UAAU,EAAE;wBACV,IAAI,EAAE;4BACJ,IAAI,EAAE,OAAO;4BACb,KAAK,EAAE;gCACL,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,QAAQ;6BACjB;4BACD,SAAS,EAAE,EAAE;yBACd;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,cAAc;yBAAC;wBAC1B,UAAU,EAAE;4BACV,YAAY,EAAE;gCACZ,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,8CAA8C;iCACpD;6BACF;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,sCAAsC,EAAE;QACtC,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,2CAA2C;QAC/C,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,kJAAkJ;gBACpJ,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,OAAO;qBAAC;oBACnB,UAAU,EAAE;wBACV,KAAK,EAAE;4BACL,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,eAAe;yBACxB;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,aAAa;yBAAC;wBACzB,UAAU,EAAE;4BACV,WAAW,EAAE;gCACX,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,qCAAqC;iCAC3C;6BACF;4BACD,UAAU,EAAE;gCACV,IAAI,EAAE,SAAS;gCACf,WAAW,EACT,6FAA6F;gCAC/F,OAAO,EAAE,KAAK;6BACf;4BACD,KAAK,EAAE;gCACL,IAAI,EAAE,SAAS;gCACf,WAAW,EACT,+EAA+E;6BAClF;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,gBAAgB,EAAE;QAChB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,qBAAqB;QACzB,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;gBACd,WAAW,EACT,8HAA8H;gBAChI,GAAG,EAAE,KAAK;gBACV,MAAM,EAAE;oBACN,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,MAAM;wBAAE,SAAS;wBAAE,WAAW;qBAAC;oBAC1C,UAAU,EAAE;wBACV,OAAO,EAAE;4BACP,IAAI,EAAE,KAAK;4BACX,WAAW,EACT,kFAAkF;4BACpF,GAAG,EAAE,qCAAqC;yBAC3C;wBACD,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;4BACd,SAAS,EAAE,EAAE;4BACb,SAAS,EAAE,CAAC;4BACZ,WAAW,EAAE,0CAA0C;yBACxD;wBACD,WAAW,EAAE;4BACX,IAAI,EAAE,QAAQ;4BACd,YAAY,EAAE,GAAG;4BACjB,SAAS,EAAE,IAAI;yBAChB;wBACD,iBAAiB,EAAE;4BACjB,IAAI,EAAE,OAAO;4BACb,KAAK,EAAE;gCACL,IAAI,EAAE,KAAK;gCACX,GAAG,EAAE,6BAA6B;6BACnC;yBACF;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,MAAM;4BACZ,MAAM,EAAE;gCAAC,WAAW;gCAAE,YAAY;6BAAC;4BACnC,OAAO,EAAE,OAAO;yBACjB;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,OAAO;4BACb,IAAI,EAAE;gCAAC,uCAAuC;6BAAC;yBAChD;wBACD,SAAS,EAAE;4BACT,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,UAAU;yBACnB;qBACF;iBACF;aACF;SACF;KACF;IACD,qBAAqB,EAAE;QACrB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,0BAA0B;QAC9B,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;gBACd,WAAW,EACT,iGAAiG;gBACnG,GAAG,EAAE,KAAK;gBACV,MAAM,EAAE;oBACN,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,SAAS;wBAAE,WAAW;qBAAC;oBAClC,UAAU,EAAE;wBACV,OAAO,EAAE;4BACP,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,QAAQ;4BAChB,WAAW,EAAE,4CAA4C;yBAC1D;wBACD,SAAS,EAAE;4BACT,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,UAAU;yBACnB;qBACF;iBACF;aACF;SACF;KACF;IACD,oBAAoB,EAAE;QACpB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,yBAAyB;QAC7B,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;gBACd,WAAW,EACT,oHAAoH;gBACtH,GAAG,EAAE,KAAK;gBACV,MAAM,EAAE;oBACN,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,SAAS;wBAAE,MAAM;wBAAE,WAAW;qBAAC;oBAC1C,UAAU,EAAE;wBACV,OAAO,EAAE;4BACP,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,KAAK;4BACb,WAAW,EAAE,4CAA4C;yBAC1D;wBACD,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,QAAQ;4BAChB,WAAW,EACT,8DAA8D;yBACjE;wBACD,SAAS,EAAE;4BACT,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,UAAU;yBACnB;qBACF;iBACF;aACF;SACF;KACF;IACD,qBAAqB,EAAE;QACrB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,0BAA0B;QAC9B,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EACT,qGAAqG;gBACvG,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,OAAO;yBAAC;wBACnB,UAAU,EAAE;4BACV,KAAK,EAAE;gCACL,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,eAAe;6BACxB;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,yBAAyB,EAAE;QACzB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,8BAA8B;QAClC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EACT,8GAA8G;gBAChH,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,MAAM;yBAAC;wBAClB,UAAU,EAAE;4BACV,IAAI,EAAE;gCACJ,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,QAAQ;6BACjB;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,sBAAsB,EAAE;QACtB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,2BAA2B;QAC/B,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EACT,+HAA+H;gBACjI,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,MAAM;yBAAC;wBAClB,UAAU,EAAE;4BACV,IAAI,EAAE;gCACJ,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,QAAQ;6BACjB;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,8BAA8B,EAAE;QAC9B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,mCAAmC;QACvC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,qEAAqE;gBACvE,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,GAAG;qBAAC;oBACf,UAAU,EAAE;wBACV,CAAC,EAAE;4BACD,IAAI,EAAE,QAAQ;4BACd,WAAW,EACT,oHAAoH;yBACvH;wBACD,KAAK,EAAE;4BACL,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,CAAC;4BACV,OAAO,EAAE,GAAG;4BACZ,OAAO,EAAE,EAAE;yBACZ;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,cAAc;yBAAC;wBAC1B,UAAU,EAAE;4BACV,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;6BACf;4BACD,YAAY,EAAE;gCACZ,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,8CAA8C;iCACpD;6BACF;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,uBAAuB,EAAE;QACvB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,4BAA4B;QAChC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;gBACd,WAAW,EACT,mEAAmE;gBACrE,GAAG,EAAE,KAAK;gBACV,MAAM,EAAE;oBACN,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,MAAM;wBAAE,MAAM;wBAAE,WAAW;qBAAC;oBACvC,UAAU,EAAE;wBACV,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;4BACd,YAAY,EAAE,EAAE;4BAChB,SAAS,EAAE,GAAG;4BACd,SAAS,EAAE,CAAC;4BACZ,WAAW,EAAE,kDAAkD;yBAChE;wBACD,WAAW,EAAE;4BACX,IAAI,EAAE,QAAQ;4BACd,YAAY,EAAE,GAAG;4BACjB,SAAS,EAAE,IAAI;yBAChB;wBACD,iBAAiB,EAAE;4BACjB,IAAI,EAAE,OAAO;4BACb,KAAK,EAAE;gCACL,IAAI,EAAE,KAAK;gCACX,GAAG,EAAE,6BAA6B;6BACnC;yBACF;wBACD,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,QAAQ;4BAChB,WAAW,EAAE,wCAAwC;yBACtD;wBACD,KAAK,EAAE;4BACL,IAAI,EAAE,OAAO;4BACb,SAAS,EAAE,CAAC;4BACZ,KAAK,EAAE;gCACL,IAAI,EAAE,KAAK;gCACX,GAAG,EAAE,yCAAyC;6BAC/C;yBACF;wBACD,SAAS,EAAE;4BACT,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,UAAU;yBACnB;qBACF;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,KAAK;iBAAC;gBACjB,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,QAAQ;qBACjB;iBACF;aACF;SACF;KACF;IACD,uBAAuB,EAAE;QACvB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,4BAA4B;QAChC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EAAE,+CAA+C;gBAC5D,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,OAAO;yBAAC;wBACnB,UAAU,EAAE;4BACV,KAAK,EAAE;gCACL,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,eAAe;6BACxB;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,2BAA2B,EAAE;QAC3B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,gCAAgC;QACpC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EAAE,wDAAwD;gBACrE,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,MAAM;yBAAC;wBAClB,UAAU,EAAE;4BACV,IAAI,EAAE;gCACJ,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,QAAQ;6BACjB;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,wBAAwB,EAAE;QACxB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,6BAA6B;QACjC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EAAE,8CAA8C;gBAC3D,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,MAAM;yBAAC;wBAClB,UAAU,EAAE;4BACV,IAAI,EAAE;gCACJ,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,QAAQ;6BACjB;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,kBAAkB,EAAE;QAClB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,uBAAuB;QAC3B,IAAI,EAAE;YACJ,WAAW,EAAE;gBACX,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,KAAK;oBAAE,KAAK;oBAAE,SAAS;oBAAE,WAAW;iBAAC;gBAChD,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,QAAQ;qBACjB;oBACD,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,OAAO,EAAE;wBACP,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,qCAAqC;qBAC3C;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,SAAS;wBACf,OAAO,EAAE,CAAC;qBACX;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,8CAA8C;qBACpD;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE,KAAK;4BACX,GAAG,EAAE,kCAAkC;yBACxC;qBACF;iBACF;aACF;YACD,mBAAmB,EAAE;gBACnB,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,KAAK;oBAAE,KAAK;oBAAE,SAAS;oBAAE,UAAU;oBAAE,WAAW;iBAAC;gBAC5D,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,QAAQ;qBACjB;oBACD,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,OAAO,EAAE;wBACP,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,qCAAqC;qBAC3C;oBACD,QAAQ,EAAE;wBACR,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,2CAA2C;qBACjD;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,SAAS;wBACf,OAAO,EAAE,CAAC;qBACX;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,8CAA8C;qBACpD;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE,KAAK;4BACX,GAAG,EAAE,kCAAkC;yBACxC;qBACF;iBACF;aACF;YACD,kBAAkB,EAAE;gBAClB,IAAI,EAAE,QAAQ;gBACd,UAAU,EAAE;oBACV,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,QAAQ;qBACjB;iBACF;aACF;YACD,eAAe,EAAE;gBACf,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,aAAa;iBAAC;gBACzB,UAAU,EAAE;oBACV,WAAW,EAAE;wBACX,IAAI,EAAE,OAAO;wBACb,WAAW,EACT,qFAAqF;wBACvF,KAAK,EAAE;4BACL,IAAI,EAAE,KAAK;4BACX,GAAG,EAAE,uCAAuC;yBAC7C;qBACF;oBACD,qBAAqB,EAAE;wBACrB,IAAI,EAAE,OAAO;wBACb,WAAW,EACT,iJAAiJ;wBACnJ,KAAK,EAAE;4BACL,IAAI,EAAE,KAAK;4BACX,GAAG,EAAE,iDAAiD;yBACvD;qBACF;iBACF;aACF;SACF;KACF;IACD,yBAAyB,EAAE;QACzB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,8BAA8B;QAClC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,mDAAmD;gBAChE,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,MAAM;qBAAC;oBAClB,UAAU,EAAE;wBACV,IAAI,EAAE;4BACJ,IAAI,EAAE,OAAO;4BACb,KAAK,EAAE;gCACL,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,KAAK;6BACd;yBACF;wBACD,QAAQ,EAAE;4BACR,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,KAAK;yBACf;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,OAAO;yBAAC;wBACnB,UAAU,EAAE;4BACV,KAAK,EAAE;gCACL,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,OAAO;oCACb,IAAI,EAAE;wCACJ,uCAAuC;wCACvC,+CAA+C;qCAChD;iCACF;6BACF;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,qBAAqB,EAAE;QACrB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,0BAA0B;QAC9B,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;gBACd,WAAW,EAAE,oDAAoD;gBACjE,GAAG,EAAE,cAAc;gBACnB,MAAM,EAAE;oBACN,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,UAAU;wBAAE,WAAW;qBAAC;oBACnC,UAAU,EAAE;wBACV,QAAQ,EAAE;4BACR,IAAI,EAAE,KAAK;4BACX,GAAG,EAAE,2CAA2C;yBACjD;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,OAAO;4BACb,IAAI,EAAE;gCAAC,uCAAuC;6BAAC;yBAChD;wBACD,SAAS,EAAE;4BACT,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,UAAU;yBACnB;qBACF;iBACF;aACF;SACF;KACF;IACD,iCAAiC,EAAE;QACjC,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,sCAAsC;QAC1C,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,qFAAqF;gBACvF,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,UAAU,EAAE;wBACV,QAAQ,EAAE;4BACR,IAAI,EAAE,SAAS;yBAChB;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,UAAU;yBACnB;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,OAAO;yBAAC;wBACnB,UAAU,EAAE;4BACV,KAAK,EAAE;gCACL,IAAI,EAAE,SAAS;6BAChB;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,oCAAoC,EAAE;QACpC,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,yCAAyC;QAC7C,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,oEAAoE;gBACtE,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,UAAU,EAAE;wBACV,OAAO,EAAE;4BACP,WAAW,EAAE,8CAA8C;4BAC3D,IAAI,EAAE,OAAO;4BACb,KAAK,EAAE;gCACL,IAAI,EAAE,QAAQ;gCACd,WAAW,EACT,6DAA6D;6BAChE;yBACF;wBACD,KAAK,EAAE;4BACL,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,CAAC;4BACV,OAAO,EAAE,GAAG;4BACZ,OAAO,EAAE,EAAE;yBACZ;wBACD,QAAQ,EAAE;4BACR,IAAI,EAAE,SAAS;yBAChB;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;yBACf;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,UAAU;yBACnB;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,eAAe;yBAAC;wBAC3B,UAAU,EAAE;4BACV,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;6BACf;4BACD,aAAa,EAAE;gCACb,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,0DAA0D;iCAChE;6BACF;4BACD,QAAQ,EAAE;gCACR,IAAI,EAAE,SAAS;6BAChB;4BACD,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,UAAU;6BACnB;yBACF;qBACF;iBACF;aACF;YACD,YAAY,EAAE;gBACZ,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBACR,KAAK;oBACL,KAAK;oBACL,QAAQ;oBACR,QAAQ;oBACR,QAAQ;oBACR,QAAQ;oBACR,WAAW;iBACZ;gBACD,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,QAAQ;qBACjB;oBACD,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,qCAAqC;qBAC3C;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,WAAW,EACT,wGAAwG;wBAC1G,WAAW,EAAE;4BACX,MAAM;4BACN,QAAQ;4BACR,QAAQ;4BACR,SAAS;4BACT,OAAO;4BACP,OAAO;4BACP,oBAAoB;yBACrB;qBACF;oBACD,aAAa,EAAE;wBACb,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,QAAQ;qBACjB;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,SAAS;qBAChB;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,SAAS;qBAChB;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE,KAAK;4BACX,GAAG,EAAE,kCAAkC;yBACxC;qBACF;iBACF;aACF;SACF;KACF;IACD,iCAAiC,EAAE;QACjC,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,sCAAsC;QAC1C,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EACT,qEAAqE;gBACvE,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,UAAU;yBAAC;wBACtB,UAAU,EAAE;4BACV,QAAQ,EAAE;gCACR,IAAI,EAAE,SAAS;6BAChB;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,+BAA+B,EAAE;QAC/B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,oCAAoC;QACxC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EACT,6GAA6G;gBAC/G,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,YAAY;4BAAE,OAAO;4BAAE,UAAU;4BAAE,OAAO;yBAAC;wBACtD,UAAU,EAAE;4BACV,UAAU,EAAE;gCACV,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,KAAK;6BACd;4BACD,KAAK,EAAE;gCACL,IAAI,EAAE,QAAQ;6BACf;4BACD,QAAQ,EAAE;gCACR,IAAI,EAAE,QAAQ;gCACd,WAAW,EAAE;oCAAC,KAAK;oCAAE,SAAS;oCAAE,KAAK;iCAAC;6BACvC;4BACD,KAAK,EAAE;gCACL,IAAI,EAAE,QAAQ;6BACf;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,6BAA6B,EAAE;QAC7B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,kCAAkC;QACtC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EACT,kFAAkF;gBACpF,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,QAAQ;yBAAC;wBACpB,UAAU,EAAE;4BACV,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,UAAU;6BACnB;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,oBAAoB,EAAE;QACpB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,yBAAyB;QAC7B,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;gBACd,WAAW,EAAE,8CAA8C;gBAC3D,QAAQ,EAAE;oBAAC,OAAO;oBAAE,UAAU;iBAAC;gBAC/B,UAAU,EAAE;oBACV,KAAK,EAAE;wBACL,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,uCAAuC;qBAC7C;oBACD,QAAQ,EAAE;wBACR,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE,OAAO;4BACb,IAAI,EAAE;gCACJ,qCAAqC;gCACrC,kCAAkC;gCAClC,iCAAiC;6BAClC;yBACF;qBACF;iBACF;aACF;YACD,OAAO,EAAE;gBACP,IAAI,EAAE,QAAQ;gBACd,WAAW,EACT,uIAAuI;gBACzI,QAAQ,EAAE;oBAAC,KAAK;iBAAC;gBACjB,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;iBACF;aACF;YACD,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;gBACd,WAAW,EACT,gIAAgI;gBAClI,QAAQ,EAAE;oBAAC,KAAK;iBAAC;gBACjB,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;iBACF;aACF;YACD,GAAG,EAAE;gBACH,IAAI,EAAE,QAAQ;gBACd,WAAW,EACT,qJAAqJ;gBACvJ,QAAQ,EAAE;oBAAC,KAAK;iBAAC;gBACjB,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,SAAS,EAAE,GAAG;wBACd,YAAY,EAAE,EAAE;qBACjB;iBACF;aACF;YACD,SAAS,EAAE;gBACT,IAAI,EAAE,QAAQ;gBACd,WAAW,EACT,4VAA4V;gBAC9V,QAAQ,EAAE;oBAAC,WAAW;oBAAE,SAAS;iBAAC;gBAClC,UAAU,EAAE;oBACV,SAAS,EAAE;wBACT,IAAI,EAAE,SAAS;wBACf,OAAO,EAAE,CAAC;qBACX;oBACD,OAAO,EAAE;wBACP,IAAI,EAAE,SAAS;wBACf,OAAO,EAAE,CAAC;qBACX;iBACF;aACF;SACF;KACF;IACD,oBAAoB,EAAE;QACpB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,yBAAyB;QAC7B,IAAI,EAAE;YACJ,kBAAkB,EAAE;gBAClB,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,KAAK;iBAAC;gBACjB,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,QAAQ;qBACjB;iBACF;aACF;YACD,mBAAmB,EAAE;gBACnB,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,KAAK;iBAAC;gBACjB,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;iBACF;aACF;YACD,yBAAyB,EAAE;gBACzB,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,KAAK;iBAAC;gBACjB,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,QAAQ;qBACjB;iBACF;aACF;YACD,aAAa,EAAE;gBACb,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,OAAO;oBAAE,MAAM;iBAAC;gBAC3B,UAAU,EAAE;oBACV,KAAK,EAAE;wBACL,IAAI,EAAE,QAAQ;qBACf;oBACD,WAAW,EAAE;wBACX,IAAI,EAAE,QAAQ;qBACf;oBACD,WAAW,EAAE;wBACX,IAAI,EAAE,QAAQ;qBACf;oBACD,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF;IACD,yBAAyB,EAAE;QACzB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,8BAA8B;QAClC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,0CAA0C;gBACvD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE,EAAE;wBACZ,UAAU,EAAE;4BACV,mBAAmB,EAAE;gCACnB,IAAI,EAAE,SAAS;6BAChB;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,wCAAwC,EAAE;QACxC,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,6CAA6C;QACjD,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,wDAAwD;gBACrE,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,UAAU,EAAE;wBACV,KAAK,EAAE;4BACL,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,CAAC;4BACV,OAAO,EAAE,GAAG;4BACZ,OAAO,EAAE,EAAE;yBACZ;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;yBACf;wBACD,KAAK,EAAE;4BACL,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,OAAO;yBAAC;wBACnB,UAAU,EAAE;4BACV,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;6BACf;4BACD,KAAK,EAAE;gCACL,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,sCAAsC;iCAC5C;6BACF;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,sCAAsC,EAAE;QACtC,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,2CAA2C;QAC/C,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,mHAAmH;gBACrH,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,UAAU,EAAE;wBACV,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,KAAK;4BACb,WAAW,EACT,sIAAsI;yBACzI;wBACD,KAAK,EAAE;4BACL,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,CAAC;4BACV,OAAO,EAAE,GAAG;4BACZ,OAAO,EAAE,EAAE;yBACZ;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;yBACf;wBACD,aAAa,EAAE;4BACb,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,KAAK;4BACb,WAAW,EACT,8GAA8G;yBACjH;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,QAAQ;yBAAC;wBACpB,UAAU,EAAE;4BACV,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;6BACf;4BACD,MAAM,EAAE;gCACN,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,iDAAiD;iCACvD;6BACF;4BACD,aAAa,EAAE;gCACb,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,KAAK;gCACb,WAAW,EACT,2HAA2H;6BAC9H;4BACD,KAAK,EAAE;gCACL,IAAI,EAAE,SAAS;gCACf,WAAW,EACT,+EAA+E;6BAClF;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,oCAAoC,EAAE;QACpC,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,yCAAyC;QAC7C,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,oEAAoE;gBACtE,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,UAAU,EAAE,CAAA,CAAE;iBACf;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,aAAa;yBAAC;wBACzB,UAAU,EAAE;4BACV,WAAW,EAAE;gCACX,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,wDAAwD;iCAC9D;6BACF;yBACF;qBACF;iBACF;aACF;YACD,UAAU,EAAE;gBACV,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,KAAK;oBAAE,aAAa;oBAAE,SAAS;iBAAC;gBAC3C,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;qBACf;oBACD,WAAW,EAAE;wBACX,IAAI,EAAE,QAAQ;wBACd,WAAW,EAAE;4BAAC,OAAO;4BAAE,MAAM;yBAAC;qBAC/B;oBACD,OAAO,EAAE;wBACP,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;iBACF;aACF;SACF;KACF;IACD,iCAAiC,EAAE;QACjC,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,sCAAsC;QAC1C,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,+BAA+B;gBAC5C,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,UAAU,EAAE;wBACV,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,KAAK;4BACb,WAAW,EACT,sIAAsI;yBACzI;wBACD,KAAK,EAAE;4BACL,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,CAAC;4BACV,OAAO,EAAE,EAAE;4BACX,OAAO,EAAE,EAAE;yBACZ;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,QAAQ;4BAAE,WAAW;yBAAC;wBACjC,UAAU,EAAE;4BACV,MAAM,EAAE;gCACN,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,2CAA2C;iCACjD;6BACF;4BACD,SAAS,EAAE;gCACT,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,2CAA2C;iCACjD;6BACF;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,oCAAoC,EAAE;QACpC,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,yCAAyC;QAC7C,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,yDAAyD;gBACtE,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,GAAG;qBAAC;oBACf,UAAU,EAAE;wBACV,CAAC,EAAE;4BACD,IAAI,EAAE,QAAQ;4BACd,WAAW,EACT,gMAAgM;yBACnM;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,KAAK;4BACb,WAAW,EACT,sIAAsI;yBACzI;wBACD,SAAS,EAAE;4BACT,IAAI,EAAE,SAAS;4BACf,WAAW,EAAE,iDAAiD;yBAC/D;wBACD,KAAK,EAAE;4BACL,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,CAAC;4BACV,OAAO,EAAE,GAAG;4BACZ,OAAO,EAAE,EAAE;yBACZ;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;4BACd,WAAW,EACT,+FAA+F;yBAClG;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,QAAQ;yBAAC;wBACpB,UAAU,EAAE;4BACV,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;6BACf;4BACD,SAAS,EAAE;gCACT,IAAI,EAAE,SAAS;gCACf,WAAW,EACT,iHAAiH;6BACpH;4BACD,MAAM,EAAE;gCACN,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,iDAAiD;iCACvD;6BACF;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN;wBACE,IAAI,EAAE,gBAAgB;qBACvB;iBACF;aACF;SACF;KACF;IACD,mCAAmC,EAAE;QACnC,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,wCAAwC;QAC5C,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,6CAA6C;gBAC1D,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,GAAG;qBAAC;oBACf,UAAU,EAAE;wBACV,CAAC,EAAE;4BACD,IAAI,EAAE,QAAQ;4BACd,WAAW,EACT,oHAAoH;yBACvH;wBACD,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;4BACd,WAAW,EAAE;gCAAC,KAAK;gCAAE,QAAQ;6BAAC;4BAC9B,OAAO,EAAE,QAAQ;4BACjB,WAAW,EAAE,yCAAyC;yBACvD;wBACD,KAAK,EAAE;4BACL,IAAI,EAAE,QAAQ;4BACd,WAAW,EACT,8LAA8L;yBACjM;wBACD,KAAK,EAAE;4BACL,IAAI,EAAE,QAAQ;4BACd,WAAW,EACT,kMAAkM;yBACrM;wBACD,QAAQ,EAAE;4BACR,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,eAAe;4BACvB,WAAW,EACT,wIAAwI;yBAC3I;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,eAAe;4BACvB,WAAW,EACT,sFAAsF;yBACzF;wBACD,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,UAAU;4BAClB,WAAW,EACT,oIAAoI;yBACvI;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;4BACd,WAAW,EACT,oIAAoI;yBACvI;wBACD,GAAG,EAAE;4BACH,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,KAAK;4BACb,WAAW,EACT,gIAAgI;yBACnI;wBACD,GAAG,EAAE;4BACH,IAAI,EAAE,OAAO;4BACb,KAAK,EAAE;gCACL,IAAI,EAAE,QAAQ;gCACd,SAAS,EAAE,GAAG;gCACd,YAAY,EAAE,EAAE;6BACjB;4BACD,WAAW,EACT,+KAA+K;yBAClL;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,KAAK;4BACb,WAAW,EACT,sHAAsH;yBACzH;wBACD,KAAK,EAAE;4BACL,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,CAAC;4BACV,OAAO,EAAE,GAAG;4BACZ,OAAO,EAAE,EAAE;yBACZ;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;4BACd,WAAW,EACT,+FAA+F;yBAClG;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,OAAO;yBAAC;wBACnB,UAAU,EAAE;4BACV,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;6BACf;4BACD,SAAS,EAAE;gCACT,IAAI,EAAE,SAAS;gCACf,WAAW,EACT,iHAAiH;6BACpH;4BACD,KAAK,EAAE;gCACL,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,gDAAgD;iCACtD;6BACF;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN;wBACE,IAAI,EAAE,gBAAgB;qBACvB;iBACF;aACF;SACF;KACF;IACD,0CAA0C,EAAE;QAC1C,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,+CAA+C;QACnD,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,qDAAqD;gBAClE,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,GAAG;qBAAC;oBACf,UAAU,EAAE;wBACV,CAAC,EAAE;4BACD,IAAI,EAAE,QAAQ;4BACd,WAAW,EACT,oHAAoH;yBACvH;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,KAAK;4BACb,WAAW,EACT,0FAA0F;yBAC7F;wBACD,KAAK,EAAE;4BACL,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,CAAC;4BACV,OAAO,EAAE,GAAG;4BACZ,OAAO,EAAE,EAAE;yBACZ;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;4BACd,WAAW,EACT,+FAA+F;yBAClG;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,cAAc;yBAAC;wBAC1B,UAAU,EAAE;4BACV,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;6BACf;4BACD,SAAS,EAAE;gCACT,IAAI,EAAE,SAAS;gCACf,WAAW,EACT,iHAAiH;6BACpH;4BACD,YAAY,EAAE;gCACZ,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,uDAAuD;iCAC7D;6BACF;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN;wBACE,IAAI,EAAE,gBAAgB;qBACvB;iBACF;aACF;SACF;KACF;IACD,gBAAgB,EAAE;QAChB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,qBAAqB;QACzB,IAAI,EAAE;YACJ,SAAS,EAAE;gBACT,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,OAAO;oBAAE,KAAK;oBAAE,OAAO;iBAAC;gBACnC,UAAU,EAAE;oBACV,KAAK,EAAE;wBACL,IAAI,EAAE,QAAQ;qBACf;oBACD,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,KAAK,EAAE;wBACL,IAAI,EAAE,QAAQ;wBACd,WAAW,EACT,oHAAoH;wBACtH,WAAW,EAAE;4BAAC,qBAAqB;4BAAE,kBAAkB;yBAAC;qBACzD;oBACD,QAAQ,EAAE;wBACR,IAAI,EAAE,SAAS;wBACf,OAAO,EAAE,CAAC;wBACV,OAAO,EAAE,GAAG;wBACZ,WAAW,EAAE,+CAA+C;qBAC7D;oBACD,IAAI,EAAE;wBACJ,IAAI,EAAE,MAAM;qBACb;oBACD,KAAK,EAAE;wBACL,IAAI,EAAE,QAAQ;qBACf;oBACD,OAAO,EAAE;wBACP,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF;IACD,wBAAwB,EAAE;QACxB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,6BAA6B;QACjC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,gDAAgD;gBAC7D,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,OAAO;qBAAC;oBACnB,UAAU,EAAE;wBACV,KAAK,EAAE;4BACL,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,WAAW;yBAAC;wBACvB,UAAU,EAAE;4BACV,SAAS,EAAE;gCACT,IAAI,EAAE,KAAK;gCACX,GAAG,EAAE,mCAAmC;6BACzC;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,2BAA2B,EAAE;QAC3B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,gCAAgC;QACpC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,qDAAqD;gBAClE,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,WAAW;yBAAC;wBACvB,UAAU,EAAE;4BACV,SAAS,EAAE;gCACT,IAAI,EAAE,SAAS;6BAChB;4BACD,oBAAoB,EAAE;gCACpB,IAAI,EAAE,SAAS;6BAChB;4BACD,mBAAmB,EAAE;gCACnB,IAAI,EAAE,SAAS;6BAChB;4BACD,OAAO,EAAE;gCACP,IAAI,EAAE,QAAQ;6BACf;4BACD,KAAK,EAAE;gCACL,IAAI,EAAE,QAAQ;6BACf;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,uBAAuB,EAAE;QACvB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,4BAA4B;QAChC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EAAE,wDAAwD;gBACrE,KAAK,EAAE;oBACL,QAAQ,EAAE,WAAW;iBACtB;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,WAAW;yBAAC;wBACvB,UAAU,EAAE;4BACV,SAAS,EAAE;gCACT,IAAI,EAAE,KAAK;gCACX,GAAG,EAAE,mCAAmC;6BACzC;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,wBAAwB,EAAE;QACxB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,6BAA6B;QACjC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;gBACd,WAAW,EAAE,0CAA0C;gBACvD,GAAG,EAAE,cAAc;gBACnB,MAAM,EAAE;oBACN,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,eAAe;qBAAC;oBAC3B,UAAU,EAAE;wBACV,aAAa,EAAE;4BACb,IAAI,EAAE,QAAQ;4BACd,WAAW,EAAE;gCAAC,KAAK;gCAAE,MAAM;gCAAE,WAAW;6BAAC;yBAC1C;qBACF;iBACF;aACF;SACF;KACF;IACD,iBAAiB,EAAE;QACjB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,sBAAsB;QAC1B,IAAI,EAAE;YACJ,gBAAgB,EAAE;gBAChB,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,KAAK;oBAAE,QAAQ;iBAAC;gBAC3B,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,QAAQ;qBACjB;oBACD,WAAW,EAAE;wBACX,IAAI,EAAE,QAAQ;wBACd,YAAY,EAAE,EAAE;wBAChB,SAAS,EAAE,GAAG;qBACf;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,UAAU,EAAE;wBACV,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,2CAA2C;qBACjD;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,qCAAqC;qBAC3C;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE,KAAK;4BACX,GAAG,EAAE,kCAAkC;yBACxC;qBACF;oBACD,YAAY,EAAE;wBACZ,IAAI,EAAE,SAAS;wBACf,WAAW,EACT,wEAAwE;qBAC3E;iBACF;aACF;SACF;KACF;IACD,0BAA0B,EAAE;QAC1B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,+BAA+B;QACnC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,UAAU,EAAE,CAAA,CAAE;qBACf;iBACF;aACF;SACF;KACF;IACD,8BAA8B,EAAE;QAC9B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,mCAAmC;QACvC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,MAAM,EAAE;oBACN,QAAQ,EAAE,mBAAmB;iBAC9B;aACF;SACF;KACF;IACD,iBAAiB,EAAE;QACjB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,sBAAsB;QAC1B,IAAI,EAAE;YACJ,UAAU,EAAE;gBACV,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,KAAK;oBAAE,WAAW;oBAAE,SAAS;iBAAC;gBACzC,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,OAAO,EAAE;wBACP,IAAI,EAAE,QAAQ;qBACf;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;YACD,YAAY,EAAE;gBACZ,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,MAAM;iBAAC;gBAClB,UAAU,EAAE;oBACV,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;wBACd,SAAS,EAAE,KAAK;wBAChB,YAAY,EAAE,IAAI;qBACnB;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,OAAO;wBACb,WAAW,EAAE,qDAAqD;wBAClE,KAAK,EAAE;4BACL,IAAI,EAAE,KAAK;4BACX,GAAG,EAAE,6BAA6B;yBACnC;qBACF;oBACD,KAAK,EAAE;wBACL,IAAI,EAAE,OAAO;wBACb,IAAI,EAAE;4BAAC,2BAA2B;yBAAC;qBACpC;iBACF;aACF;YACD,WAAW,EAAE;gBACX,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,IAAI;oBAAE,KAAK;oBAAE,MAAM;oBAAE,QAAQ;oBAAE,QAAQ;iBAAC;gBACnD,UAAU,EAAE;oBACV,EAAE,EAAE;wBACF,IAAI,EAAE,QAAQ;qBACf;oBACD,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;qBACf;oBACD,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;wBACd,SAAS,EAAE,KAAK;wBAChB,YAAY,EAAE,IAAI;qBACnB;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,OAAO;wBACb,WAAW,EAAE,qDAAqD;wBAClE,KAAK,EAAE;4BACL,IAAI,EAAE,KAAK;4BACX,GAAG,EAAE,6BAA6B;yBACnC;qBACF;oBACD,KAAK,EAAE;wBACL,IAAI,EAAE,OAAO;wBACb,IAAI,EAAE;4BAAC,gCAAgC;yBAAC;qBACzC;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,4CAA4C;qBAClD;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;iBACF;aACF;YACD,kBAAkB,EAAE;gBAClB,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,IAAI;oBAAE,KAAK;oBAAE,QAAQ;oBAAE,QAAQ;iBAAC;gBAC3C,UAAU,EAAE;oBACV,EAAE,EAAE;wBACF,IAAI,EAAE,QAAQ;qBACf;oBACD,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;qBACf;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,4CAA4C;qBAClD;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;iBACF;aACF;YACD,iBAAiB,EAAE;gBACjB,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,KAAK;iBAAC;gBACjB,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;iBACF;aACF;YACD,SAAS,EAAE;gBACT,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,IAAI;oBAAE,KAAK;oBAAE,SAAS;oBAAE,OAAO;oBAAE,aAAa;iBAAC;gBAC1D,UAAU,EAAE;oBACV,EAAE,EAAE;wBACF,IAAI,EAAE,QAAQ;qBACf;oBACD,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;qBACf;oBACD,OAAO,EAAE;wBACP,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE,KAAK;4BACX,GAAG,EAAE,2CAA2C;yBACjD;qBACF;oBACD,WAAW,EAAE;wBACX,IAAI,EAAE,OAAO;wBACb,IAAI,EAAE;4BACJ,sCAAsC;4BACtC,6CAA6C;yBAC9C;qBACF;oBACD,KAAK,EAAE;wBACL,IAAI,EAAE,SAAS;qBAChB;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,SAAS;qBAChB;oBACD,WAAW,EAAE;wBACX,IAAI,EAAE,SAAS;qBAChB;iBACF;aACF;YACD,aAAa,EAAE;gBACb,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,KAAK;oBAAE,SAAS;iBAAC;gBAC5B,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;qBACf;oBACD,OAAO,EAAE;wBACP,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;YACD,aAAa,EAAE;gBACb,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,KAAK;oBAAE,SAAS;iBAAC;gBAC5B,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;qBACf;oBACD,OAAO,EAAE;wBACP,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;YACD,gBAAgB,EAAE;gBAChB,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,KAAK;oBAAE,SAAS;oBAAE,SAAS;iBAAC;gBACvC,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;qBACf;oBACD,OAAO,EAAE;wBACP,IAAI,EAAE,QAAQ;qBACf;oBACD,OAAO,EAAE;wBACP,IAAI,EAAE,OAAO;wBACb,IAAI,EAAE;4BACJ,sCAAsC;4BACtC,6CAA6C;yBAC9C;qBACF;iBACF;aACF;YACD,gBAAgB,EAAE;gBAChB,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,KAAK;oBAAE,SAAS;oBAAE,SAAS;iBAAC;gBACvC,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;qBACf;oBACD,OAAO,EAAE;wBACP,IAAI,EAAE,QAAQ;qBACf;oBACD,OAAO,EAAE;wBACP,IAAI,EAAE,OAAO;wBACb,IAAI,EAAE;4BACJ,sCAAsC;4BACtC,6CAA6C;yBAC9C;qBACF;iBACF;aACF;SACF;KACF;IACD,iCAAiC,EAAE;QACjC,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,sCAAsC;QAC1C,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,SAAS;4BAAE,WAAW;yBAAC;wBAClC,UAAU,EAAE;4BACV,OAAO,EAAE;gCACP,IAAI,EAAE,QAAQ;6BACf;4BACD,SAAS,EAAE;gCACT,IAAI,EAAE,QAAQ;6BACf;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,6CAA6C;qBACnD;iBACF;aACF;SACF;KACF;IACD,qBAAqB,EAAE;QACrB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,0BAA0B;QAC9B,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,SAAS;qBAAC;oBACrB,UAAU,EAAE;wBACV,OAAO,EAAE;4BACP,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,OAAO;yBAAC;wBACnB,UAAU,EAAE;4BACV,KAAK,EAAE;gCACL,IAAI,EAAE,KAAK;gCACX,GAAG,EAAE,oCAAoC;6BAC1C;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,+BAA+B,EAAE;QAC/B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,oCAAoC;QACxC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,SAAS;qBAAC;oBACrB,UAAU,EAAE;wBACV,OAAO,EAAE;4BACP,IAAI,EAAE,OAAO;4BACb,SAAS,EAAE,CAAC;4BACZ,SAAS,EAAE,EAAE;4BACb,KAAK,EAAE;gCACL,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,KAAK;6BACd;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,OAAO;yBAAC;wBACnB,UAAU,EAAE;4BACV,KAAK,EAAE;gCACL,IAAI,EAAE,KAAK;gCACX,GAAG,EAAE,oCAAoC;6BAC1C;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,mBAAmB,EAAE;QACnB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,wBAAwB;QAC5B,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE,EAAE;oBACZ,UAAU,EAAE;wBACV,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,MAAM;yBAAC;wBAClB,UAAU,EAAE;4BACV,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;6BACf;4BACD,IAAI,EAAE;gCACJ,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,OAAO;oCACb,IAAI,EAAE;wCACJ,wCAAwC;wCACxC,wCAAwC;wCACxC,2CAA2C;wCAC3C,2CAA2C;qCAC5C;iCACF;6BACF;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,wBAAwB,EAAE;QACxB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,6BAA6B;QACjC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,SAAS;qBAAC;oBACrB,UAAU,EAAE;wBACV,OAAO,EAAE;4BACP,IAAI,EAAE,QAAQ;yBACf;wBACD,KAAK,EAAE;4BACL,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,CAAC;4BACV,OAAO,EAAE,GAAG;4BACZ,OAAO,EAAE,EAAE;yBACZ;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,UAAU;yBAAC;wBACtB,UAAU,EAAE;4BACV,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;6BACf;4BACD,QAAQ,EAAE;gCACR,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,OAAO;oCACb,IAAI,EAAE;wCACJ,sCAAsC;wCACtC,6CAA6C;qCAC9C;iCACF;6BACF;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,uBAAuB,EAAE;QACvB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,4BAA4B;QAChC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,SAAS;yBAAC;wBACrB,UAAU,EAAE;4BACV,OAAO,EAAE;gCACP,IAAI,EAAE,QAAQ;6BACf;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,SAAS;4BAAE,KAAK;yBAAC;wBAC5B,UAAU,EAAE;4BACV,OAAO,EAAE;gCACP,IAAI,EAAE,QAAQ;6BACf;4BACD,GAAG,EAAE;gCACH,IAAI,EAAE,QAAQ;6BACf;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,uBAAuB,EAAE;QACvB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,4BAA4B;QAChC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,UAAU,EAAE;wBACV,KAAK,EAAE;4BACL,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,CAAC;4BACV,OAAO,EAAE,GAAG;4BACZ,OAAO,EAAE,EAAE;yBACZ;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,QAAQ;yBAAC;wBACpB,UAAU,EAAE;4BACV,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;6BACf;4BACD,MAAM,EAAE;gCACN,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,oCAAoC;iCAC1C;6BACF;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,sBAAsB,EAAE;QACtB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,2BAA2B;QAC/B,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,SAAS;yBAAC;wBACrB,UAAU,EAAE;4BACV,OAAO,EAAE;gCACP,IAAI,EAAE,QAAQ;6BACf;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,OAAO;yBAAC;wBACnB,UAAU,EAAE;4BACV,KAAK,EAAE;gCACL,IAAI,EAAE,KAAK;gCACX,GAAG,EAAE,oCAAoC;6BAC1C;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,wBAAwB,EAAE;QACxB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,6BAA6B;QACjC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,SAAS;4BAAE,SAAS;yBAAC;wBAChC,UAAU,EAAE;4BACV,OAAO,EAAE;gCACP,IAAI,EAAE,QAAQ;6BACf;4BACD,OAAO,EAAE;gCACP,IAAI,EAAE,KAAK;gCACX,GAAG,EAAE,uCAAuC;6BAC7C;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,sCAAsC;qBAC5C;iBACF;aACF;SACF;KACF;IACD,6BAA6B,EAAE;QAC7B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,kCAAkC;QACtC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,OAAO;yBAAC;wBACnB,UAAU,EAAE;4BACV,KAAK,EAAE;gCACL,IAAI,EAAE,OAAO;gCACb,SAAS,EAAE,GAAG;gCACd,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,gDAAgD;iCACtD;6BACF;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,OAAO;yBAAC;wBACnB,UAAU,EAAE;4BACV,KAAK,EAAE;gCACL,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,sCAAsC;iCAC5C;6BACF;yBACF;qBACF;iBACF;aACF;YACD,SAAS,EAAE;gBACT,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,SAAS;oBAAE,SAAS;iBAAC;gBAChC,UAAU,EAAE;oBACV,OAAO,EAAE;wBACP,IAAI,EAAE,QAAQ;qBACf;oBACD,OAAO,EAAE;wBACP,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,uCAAuC;qBAC7C;iBACF;aACF;SACF;KACF;IACD,wBAAwB,EAAE;QACxB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,6BAA6B;QACjC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,SAAS;yBAAC;wBACrB,UAAU,EAAE;4BACV,OAAO,EAAE;gCACP,IAAI,EAAE,QAAQ;6BACf;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,OAAO;yBAAC;wBACnB,UAAU,EAAE;4BACV,KAAK,EAAE;gCACL,IAAI,EAAE,KAAK;gCACX,GAAG,EAAE,oCAAoC;6BAC1C;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,uBAAuB,EAAE;QACvB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,4BAA4B;QAChC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,SAAS;yBAAC;wBACrB,UAAU,EAAE;4BACV,OAAO,EAAE;gCACP,IAAI,EAAE,QAAQ;6BACf;4BACD,SAAS,EAAE;gCACT,IAAI,EAAE,QAAQ;6BACf;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,OAAO;yBAAC;wBACnB,UAAU,EAAE;4BACV,KAAK,EAAE;gCACL,IAAI,EAAE,KAAK;gCACX,GAAG,EAAE,oCAAoC;6BAC1C;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,kCAAkC,EAAE;QAClC,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,uCAAuC;QAC3C,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,OAAO;qBAAC;oBACnB,UAAU,EAAE;wBACV,KAAK,EAAE;4BACL,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,KAAK;yBACd;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,KAAK;4BAAE,OAAO;4BAAE,KAAK;yBAAC;wBACjC,UAAU,EAAE;4BACV,GAAG,EAAE;gCACH,IAAI,EAAE,KAAK;gCACX,GAAG,EAAE,oDAAoD;6BAC1D;4BACD,KAAK,EAAE;gCACL,IAAI,EAAE,KAAK;gCACX,GAAG,EAAE,oDAAoD;6BAC1D;4BACD,GAAG,EAAE;gCACH,IAAI,EAAE,KAAK;gCACX,GAAG,EAAE,oDAAoD;6BAC1D;yBACF;qBACF;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBACR,cAAc;oBACd,kBAAkB;oBAClB,QAAQ;oBACR,eAAe;iBAChB;gBACD,UAAU,EAAE;oBACV,YAAY,EAAE;wBACZ,IAAI,EAAE,SAAS;qBAChB;oBACD,gBAAgB,EAAE;wBAChB,IAAI,EAAE,SAAS;qBAChB;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,SAAS;qBAChB;oBACD,aAAa,EAAE;wBACb,IAAI,EAAE,SAAS;qBAChB;iBACF;aACF;SACF;KACF;IACD,mCAAmC,EAAE;QACnC,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,wCAAwC;QAC5C,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,WAAW;qBAAC;oBACvB,UAAU,EAAE;wBACV,OAAO,EAAE;4BACP,IAAI,EAAE,QAAQ;4BACd,WAAW,EACT,sFAAsF;yBACzF;wBACD,SAAS,EAAE;4BACT,IAAI,EAAE,QAAQ;yBACf;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,CAAC;yBACX;wBACD,KAAK,EAAE;4BACL,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,CAAC;yBACX;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,UAAU;yBAAC;wBACtB,UAAU,EAAE;4BACV,QAAQ,EAAE;gCACR,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,OAAO;oCACb,IAAI,EAAE;wCACJ,sCAAsC;wCACtC,6CAA6C;qCAC9C;iCACF;6BACF;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,mCAAmC,EAAE;QACnC,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,wCAAwC;QAC5C,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,OAAO;4BAAE,aAAa;yBAAC;wBAClC,UAAU,EAAE;4BACV,KAAK,EAAE;gCACL,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,KAAK;6BACd;4BACD,WAAW,EAAE;gCACX,IAAI,EAAE,SAAS;6BAChB;4BACD,GAAG,EAAE;gCACH,IAAI,EAAE,QAAQ;6BACf;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,qCAAqC,EAAE;QACrC,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,0CAA0C;QAC9C,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EACT,0FAA0F;gBAC5F,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,SAAS;4BAAE,iBAAiB;4BAAE,MAAM;yBAAC;wBAChD,UAAU,EAAE;4BACV,IAAI,EAAE;gCACJ,IAAI,EAAE,QAAQ;gCACd,WAAW,EAAE,uBAAuB;6BACrC;4BACD,eAAe,EAAE;gCACf,IAAI,EAAE,QAAQ;gCACd,WAAW,EACT,iFAAiF;6BACpF;4BACD,OAAO,EAAE;gCACP,IAAI,EAAE,QAAQ;gCACd,WAAW,EAAE,yCAAyC;6BACvD;4BACD,IAAI,EAAE;gCACJ,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,UAAU;gCAClB,WAAW,EAAE,mBAAmB;6BACjC;4BACD,SAAS,EAAE;gCACT,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,KAAK;gCACb,WAAW,EAAE,+CAA+C;6BAC7D;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,iDAAiD;qBACvD;iBACF;gBACD,MAAM,EAAE;oBACN;wBACE,IAAI,EAAE,uBAAuB;qBAC9B;iBACF;aACF;SACF;KACF;IACD,2BAA2B,EAAE;QAC3B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,gCAAgC;QACpC,IAAI,EAAE;YACJ,YAAY,EAAE;gBACZ,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBACR,IAAI;oBACJ,MAAM;oBACN,iBAAiB;oBACjB,UAAU;oBACV,eAAe;oBACf,WAAW;oBACX,WAAW;iBACZ;gBACD,UAAU,EAAE;oBACV,EAAE,EAAE;wBACF,IAAI,EAAE,QAAQ;qBACf;oBACD,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;wBACd,WAAW,EAAE,uBAAuB;qBACrC;oBACD,OAAO,EAAE;wBACP,IAAI,EAAE,QAAQ;wBACd,WAAW,EACT,0EAA0E;qBAC7E;oBACD,eAAe,EAAE;wBACf,IAAI,EAAE,QAAQ;wBACd,WAAW,EAAE,yCAAyC;qBACvD;oBACD,QAAQ,EAAE;wBACR,IAAI,EAAE,SAAS;qBAChB;oBACD,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;wBAClB,WAAW,EAAE,mBAAmB;qBACjC;oBACD,aAAa,EAAE;wBACb,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;wBACb,WAAW,EAAE,gDAAgD;qBAC9D;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;iBACF;aACF;SACF;KACF;IACD,qCAAqC,EAAE;QACrC,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,0CAA0C;QAC9C,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EAAE,kCAAkC;gBAC/C,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,IAAI;yBAAC;wBAChB,UAAU,EAAE;4BACV,EAAE,EAAE;gCACF,IAAI,EAAE,QAAQ;6BACf;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,oCAAoC,EAAE;QACpC,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,yCAAyC;QAC7C,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,0CAA0C;gBACvD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,wBAAwB;yBAAC;wBACpC,UAAU,EAAE;4BACV,sBAAsB,EAAE;gCACtB,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,iDAAiD;iCACvD;6BACF;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,qCAAqC,EAAE;QACrC,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,0CAA0C;QAC9C,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EACT,kIAAkI;gBACpI,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,IAAI;yBAAC;wBAChB,UAAU,EAAE;4BACV,EAAE,EAAE;gCACF,IAAI,EAAE,QAAQ;gCACd,WAAW,EAAE,mCAAmC;6BACjD;4BACD,IAAI,EAAE;gCACJ,IAAI,EAAE,QAAQ;gCACd,WAAW,EAAE,uBAAuB;6BACrC;4BACD,IAAI,EAAE;gCACJ,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,UAAU;gCAClB,WAAW,EAAE,mBAAmB;6BACjC;4BACD,eAAe,EAAE;gCACf,IAAI,EAAE,QAAQ;gCACd,WAAW,EACT,iFAAiF;6BACpF;4BACD,OAAO,EAAE;gCACP,IAAI,EAAE,QAAQ;gCACd,WAAW,EAAE,yCAAyC;6BACvD;4BACD,SAAS,EAAE;gCACT,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,KAAK;gCACb,WAAW,EAAE,+CAA+C;6BAC7D;4BACD,QAAQ,EAAE;gCACR,IAAI,EAAE,SAAS;6BAChB;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,iDAAiD;qBACvD;iBACF;gBACD,MAAM,EAAE;oBACN;wBACE,IAAI,EAAE,uBAAuB;qBAC9B;iBACF;aACF;SACF;KACF;IACD,wBAAwB,EAAE;QACxB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,6BAA6B;QACjC,IAAI,EAAE;YACJ,YAAY,EAAE;gBACZ,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBACR,IAAI;oBACJ,OAAO;oBACP,SAAS;oBACT,iBAAiB;oBACjB,WAAW;oBACX,WAAW;iBACZ;gBACD,UAAU,EAAE;oBACV,EAAE,EAAE;wBACF,IAAI,EAAE,SAAS;qBAChB;oBACD,KAAK,EAAE;wBACL,IAAI,EAAE,OAAO;wBACb,IAAI,EAAE;4BACJ,kDAAkD;4BAClD,yDAAyD;4BACzD,iDAAiD;4BACjD,gDAAgD;4BAChD,+CAA+C;4BAC/C,qDAAqD;4BACrD,kDAAkD;4BAClD,8CAA8C;4BAC9C,gDAAgD;4BAChD,sDAAsD;4BACtD,wDAAwD;4BACxD,+CAA+C;4BAC/C,uDAAuD;4BACvD,gDAAgD;4BAChD,6CAA6C;4BAC7C,8CAA8C;4BAC9C,+CAA+C;4BAC/C,6CAA6C;yBAC9C;qBACF;oBACD,OAAO,EAAE;wBACP,IAAI,EAAE,OAAO;wBACb,IAAI,EAAE;4BACJ,oCAAoC;4BACpC,gCAAgC;4BAChC,qCAAqC;yBACtC;qBACF;oBACD,eAAe,EAAE;wBACf,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE,QAAQ;yBACf;qBACF;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;oBACD,aAAa,EAAE;wBACb,IAAI,EAAE,QAAQ;qBACf;oBACD,aAAa,EAAE;wBACb,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;YACD,kBAAkB,EAAE;gBAClB,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBACR,IAAI;oBACJ,OAAO;oBACP,SAAS;oBACT,cAAc;oBACd,WAAW;oBACX,WAAW;iBACZ;gBACD,UAAU,EAAE;oBACV,EAAE,EAAE;wBACF,IAAI,EAAE,SAAS;qBAChB;oBACD,KAAK,EAAE;wBACL,IAAI,EAAE,OAAO;wBACb,IAAI,EAAE;4BACJ,kDAAkD;4BAClD,yDAAyD;4BACzD,iDAAiD;4BACjD,gDAAgD;4BAChD,+CAA+C;4BAC/C,qDAAqD;4BACrD,kDAAkD;4BAClD,8CAA8C;4BAC9C,gDAAgD;4BAChD,sDAAsD;4BACtD,wDAAwD;4BACxD,+CAA+C;4BAC/C,uDAAuD;4BACvD,gDAAgD;4BAChD,6CAA6C;4BAC7C,8CAA8C;4BAC9C,+CAA+C;4BAC/C,6CAA6C;yBAC9C;qBACF;oBACD,OAAO,EAAE;wBACP,IAAI,EAAE,OAAO;wBACb,IAAI,EAAE;4BACJ,0CAA0C;4BAC1C,kDAAkD;4BAClD,4CAA4C;4BAC5C,oDAAoD;yBACrD;qBACF;oBACD,YAAY,EAAE;wBACZ,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE,KAAK;4BACX,GAAG,EAAE,0CAA0C;yBAChD;qBACF;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;iBACF;aACF;YACD,iBAAiB,EAAE;gBACjB,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,IAAI;oBAAE,SAAS;oBAAE,WAAW;oBAAE,WAAW;oBAAE,aAAa;iBAAC;gBACpE,UAAU,EAAE;oBACV,EAAE,EAAE;wBACF,IAAI,EAAE,SAAS;qBAChB;oBACD,OAAO,EAAE;wBACP,IAAI,EAAE,OAAO;wBACb,IAAI,EAAE;4BACJ,oCAAoC;4BACpC,gCAAgC;yBACjC;qBACF;oBACD,OAAO,EAAE;wBACP,IAAI,EAAE,OAAO;wBACb,IAAI,EAAE;4BACJ,gDAAgD;4BAChD,+CAA+C;yBAChD;qBACF;oBACD,eAAe,EAAE;wBACf,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,KAAK;yBACd;qBACF;oBACD,iBAAiB,EAAE;wBACjB,IAAI,EAAE,QAAQ;qBACf;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;wBAClB,WAAW,EACT,6FAA6F;qBAChG;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;wBAClB,WAAW,EACT,8FAA8F;qBACjG;oBACD,WAAW,EAAE;wBACX,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,oDAAoD;qBAC1D;oBACD,OAAO,EAAE;wBACP,IAAI,EAAE,QAAQ;wBACd,WAAW,EAAE,gCAAgC;qBAC9C;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;oBACD,kBAAkB,EAAE;wBAClB,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;oBACD,cAAc,EAAE;wBACd,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,cAAc,EAAE;wBACd,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;oBACD,cAAc,EAAE;wBACd,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;oBACD,cAAc,EAAE;wBACd,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;wBAClB,WAAW,EACT,mFAAmF;qBACtF;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,SAAS;qBAChB;oBACD,QAAQ,EAAE;wBACR,IAAI,EAAE,SAAS;wBACf,WAAW,EACT,yKAAyK;qBAC5K;oBACD,YAAY,EAAE;wBACZ,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;oBACD,IAAI,EAAE;wBACJ,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;aACF;YACD,kBAAkB,EAAE;gBAClB,IAAI,EAAE,QAAQ;gBACd,WAAW,EAAE;oBACX,4CAA4C;oBAC5C,iDAAiD;oBACjD,8CAA8C;oBAC9C,4CAA4C;iBAC7C;aACF;YACD,UAAU,EAAE;gBACV,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,4GAA4G;aAC/G;YACD,eAAe,EAAE;gBACf,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,qHAAqH;aACxH;YACD,YAAY,EAAE;gBACZ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,2HAA2H;aAC9H;YACD,UAAU,EAAE;gBACV,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,4LAA4L;aAC/L;YACD,gBAAgB,EAAE;gBAChB,IAAI,EAAE,QAAQ;gBACd,WAAW,EAAE,gDAAgD;gBAC7D,UAAU,EAAE;oBACV,OAAO,EAAE;wBACP,IAAI,EAAE,QAAQ;qBACf;oBACD,eAAe,EAAE;wBACf,IAAI,EAAE,SAAS;wBACf,WAAW,EACT,oFAAoF;qBACvF;oBACD,0BAA0B,EAAE;wBAC1B,IAAI,EAAE,SAAS;wBACf,WAAW,EACT,iGAAiG;qBACpG;oBACD,QAAQ,EAAE;wBACR,IAAI,EAAE,OAAO;wBACb,SAAS,EAAE,CAAC;wBACZ,KAAK,EAAE;4BACL,IAAI,EAAE,QAAQ;yBACf;wBACD,WAAW,EACT,yDAAyD;qBAC5D;iBACF;aACF;YACD,uBAAuB,EAAE;gBACvB,IAAI,EAAE,QAAQ;gBACd,WAAW,EAAE,sCAAsC;gBACnD,UAAU,EAAE;oBACV,OAAO,EAAE;wBACP,IAAI,EAAE,QAAQ;wBACd,WAAW,EAAE,yCAAyC;qBACvD;iBACF;aACF;YACD,qBAAqB,EAAE;gBACrB,IAAI,EAAE,QAAQ;gBACd,WAAW,EAAE,6BAA6B;gBAC1C,UAAU,EAAE;oBACV,OAAO,EAAE;wBACP,IAAI,EAAE,QAAQ;wBACd,WAAW,EAAE,sBAAsB;qBACpC;iBACF;aACF;YACD,eAAe,EAAE;gBACf,IAAI,EAAE,QAAQ;gBACd,WAAW,EAAE,4BAA4B;gBACzC,QAAQ,EAAE;oBAAC,SAAS;iBAAC;gBACrB,UAAU,EAAE;oBACV,OAAO,EAAE;wBACP,IAAI,EAAE,QAAQ;qBACf;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,SAAS;wBACf,WAAW,EAAE,4CAA4C;qBAC1D;iBACF;aACF;YACD,cAAc,EAAE;gBACd,IAAI,EAAE,QAAQ;gBACd,WAAW,EAAE,kBAAkB;gBAC/B,QAAQ,EAAE;oBAAC,YAAY;iBAAC;gBACxB,UAAU,EAAE;oBACV,OAAO,EAAE;wBACP,IAAI,EAAE,QAAQ;qBACf;oBACD,eAAe,EAAE;wBACf,IAAI,EAAE,SAAS;wBACf,WAAW,EACT,2IAA2I;qBAC9I;oBACD,UAAU,EAAE;wBACV,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,4CAA4C;qBAClD;iBACF;aACF;YACD,aAAa,EAAE;gBACb,IAAI,EAAE,QAAQ;gBACd,WAAW,EAAE,kCAAkC;gBAC/C,QAAQ,EAAE;oBAAC,iBAAiB;oBAAE,iBAAiB;iBAAC;gBAChD,UAAU,EAAE;oBACV,OAAO,EAAE;wBACP,IAAI,EAAE,QAAQ;qBACf;oBACD,eAAe,EAAE;wBACf,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE,QAAQ;yBACf;qBACF;oBACD,eAAe,EAAE;wBACf,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;aACF;YACD,mBAAmB,EAAE;gBACnB,IAAI,EAAE,QAAQ;gBACd,UAAU,EAAE;oBACV,OAAO,EAAE;wBACP,IAAI,EAAE,QAAQ;qBACf;oBACD,0BAA0B,EAAE;wBAC1B,IAAI,EAAE,SAAS;wBACf,WAAW,EACT,iGAAiG;qBACpG;iBACF;aACF;YACD,gBAAgB,EAAE;gBAChB,IAAI,EAAE,QAAQ;gBACd,UAAU,EAAE;oBACV,OAAO,EAAE;wBACP,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;YACD,YAAY,EAAE;gBACZ,IAAI,EAAE,QAAQ;gBACd,WAAW,EAAE,oCAAoC;gBACjD,QAAQ,EAAE;oBAAC,iBAAiB;iBAAC;gBAC7B,UAAU,EAAE;oBACV,OAAO,EAAE;wBACP,IAAI,EAAE,QAAQ;qBACf;oBACD,eAAe,EAAE;wBACf,IAAI,EAAE,SAAS;wBACf,WAAW,EAAE,qDAAqD;qBACnE;iBACF;aACF;YACD,cAAc,EAAE;gBACd,IAAI,EAAE,QAAQ;gBACd,WAAW,EAAE,4BAA4B;gBACzC,UAAU,EAAE;oBACV,OAAO,EAAE;wBACP,IAAI,EAAE,QAAQ;wBACd,WAAW,EAAE,yCAAyC;qBACvD;iBACF;aACF;YACD,oBAAoB,EAAE;gBACpB,IAAI,EAAE,QAAQ;gBACd,WAAW,EAAE,uCAAuC;gBACpD,UAAU,EAAE;oBACV,OAAO,EAAE;wBACP,IAAI,EAAE,QAAQ;qBACf;oBACD,eAAe,EAAE;wBACf,IAAI,EAAE,SAAS;wBACf,WAAW,EACT,8FAA8F;qBACjG;iBACF;aACF;YACD,sBAAsB,EAAE;gBACtB,IAAI,EAAE,QAAQ;gBACd,WAAW,EAAE,yCAAyC;gBACtD,UAAU,EAAE;oBACV,OAAO,EAAE;wBACP,IAAI,EAAE,QAAQ;wBACd,WAAW,EAAE,yCAAyC;qBACvD;iBACF;aACF;YACD,aAAa,EAAE;gBACb,IAAI,EAAE,QAAQ;gBACd,WAAW,EAAE,wCAAwC;gBACrD,QAAQ,EAAE;oBAAC,aAAa;iBAAC;gBACzB,UAAU,EAAE;oBACV,WAAW,EAAE;wBACX,IAAI,EAAE,QAAQ;wBACd,WAAW,EAAE,iDAAiD;qBAC/D;oBACD,OAAO,EAAE;wBACP,IAAI,EAAE,QAAQ;wBACd,WAAW,EAAE,4CAA4C;qBAC1D;oBACD,OAAO,EAAE;wBACP,IAAI,EAAE,QAAQ;wBACd,WAAW,EAAE,6CAA6C;qBAC3D;iBACF;aACF;YACD,cAAc,EAAE;gBACd,IAAI,EAAE,QAAQ;gBACd,WAAW,EACT,6EAA6E;gBAC/E,UAAU,EAAE;oBACV,OAAO,EAAE;wBACP,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;YACD,WAAW,EAAE;gBACX,IAAI,EAAE,QAAQ;gBACd,WAAW,EAAE,+BAA+B;gBAC5C,QAAQ,EAAE;oBAAC,KAAK;oBAAE,QAAQ;iBAAC;gBAC3B,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE,QAAQ;yBACf;wBACD,WAAW,EACT,0EAA0E;qBAC7E;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE,QAAQ;yBACf;wBACD,WAAW,EACT,4FAA4F;qBAC/F;oBACD,OAAO,EAAE;wBACP,IAAI,EAAE,QAAQ;wBACd,WAAW,EAAE,8CAA8C;qBAC5D;iBACF;aACF;YACD,YAAY,EAAE;gBACZ,IAAI,EAAE,QAAQ;gBACd,WAAW,EACT,oJAAoJ;gBACtJ,QAAQ,EAAE;oBAAC,WAAW;oBAAE,QAAQ;iBAAC;gBACjC,UAAU,EAAE;oBACV,OAAO,EAAE;wBACP,IAAI,EAAE,QAAQ;qBACf;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,SAAS;wBACf,WAAW,EACT,yGAAyG;qBAC5G;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,WAAW,EAAE;4BACX,SAAS;4BACT,aAAa;4BACb,SAAS;4BACT,WAAW;4BACX,WAAW;4BACX,YAAY;yBACb;qBACF;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;iBACF;aACF;YACD,aAAa,EAAE;gBACb,IAAI,EAAE,QAAQ;gBACd,WAAW,EACT,8IAA8I;gBAChJ,QAAQ,EAAE;oBAAC,WAAW;iBAAC;gBACvB,UAAU,EAAE;oBACV,OAAO,EAAE;wBACP,IAAI,EAAE,QAAQ;qBACf;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,QAAQ;qBACjB;oBACD,OAAO,EAAE;wBACP,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,SAAS;qBAChB;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;iBACF;aACF;YACD,WAAW,EAAE;gBACX,IAAI,EAAE,QAAQ;gBACd,WAAW,EACT,wIAAwI;gBAC1I,QAAQ,EAAE;oBAAC,WAAW;oBAAE,IAAI;iBAAC;gBAC7B,UAAU,EAAE;oBACV,OAAO,EAAE;wBACP,IAAI,EAAE,QAAQ;qBACf;oBACD,EAAE,EAAE;wBACF,IAAI,EAAE,QAAQ;wBACd,WAAW,EAAE;4BAAC,QAAQ;4BAAE,QAAQ;4BAAE,QAAQ;yBAAC;qBAC5C;oBACD,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBACR,KAAK;oBACL,QAAQ;oBACR,gBAAgB;oBAChB,WAAW;oBACX,YAAY;iBACb;gBACD,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,QAAQ;qBACjB;oBACD,KAAK,EAAE;wBACL,IAAI,EAAE,QAAQ;qBACf;oBACD,cAAc,EAAE;wBACd,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE,SAAS;yBAChB;qBACF;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;oBACD,UAAU,EAAE;wBACV,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,4CAA4C;qBAClD;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,wCAAwC;qBAC9C;oBACD,eAAe,EAAE;wBACf,IAAI,EAAE,SAAS;qBAChB;oBACD,UAAU,EAAE;wBACV,IAAI,EAAE,QAAQ;qBACf;oBACD,aAAa,EAAE;wBACb,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;oBACD,gBAAgB,EAAE;wBAChB,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE,KAAK;4BACX,GAAG,EAAE,4CAA4C;yBAClD;qBACF;iBACF;aACF;YACD,cAAc,EAAE;gBACd,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBACR,KAAK;oBACL,QAAQ;oBACR,gBAAgB;oBAChB,WAAW;oBACX,YAAY;iBACb;gBACD,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,QAAQ;qBACjB;oBACD,KAAK,EAAE;wBACL,IAAI,EAAE,QAAQ;qBACf;oBACD,cAAc,EAAE;wBACd,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE,SAAS;yBAChB;qBACF;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;oBACD,UAAU,EAAE;wBACV,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,kDAAkD;qBACxD;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE,KAAK;4BACX,GAAG,EAAE,kCAAkC;yBACxC;qBACF;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,wCAAwC;qBAC9C;oBACD,OAAO,EAAE;wBACP,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE,KAAK;4BACX,GAAG,EAAE,wCAAwC;yBAC9C;qBACF;oBACD,eAAe,EAAE;wBACf,IAAI,EAAE,SAAS;qBAChB;oBACD,UAAU,EAAE;wBACV,IAAI,EAAE,QAAQ;qBACf;oBACD,gBAAgB,EAAE;wBAChB,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;oBACD,aAAa,EAAE;wBACb,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;oBACD,gBAAgB,EAAE;wBAChB,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE,KAAK;4BACX,GAAG,EAAE,4CAA4C;yBAClD;qBACF;iBACF;aACF;YACD,gBAAgB,EAAE;gBAChB,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,KAAK;iBAAC;gBACjB,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;iBACF;aACF;YACD,UAAU,EAAE;gBACV,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBACR,KAAK;oBACL,KAAK;oBACL,OAAO;oBACP,UAAU;oBACV,WAAW;oBACX,YAAY;oBACZ,MAAM;iBACP;gBACD,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,QAAQ;qBACjB;oBACD,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,KAAK,EAAE;wBACL,IAAI,EAAE,SAAS;qBAChB;oBACD,QAAQ,EAAE;wBACR,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,KAAK;yBACd;qBACF;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;oBACD,UAAU,EAAE;wBACV,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,4CAA4C;qBAClD;oBACD,IAAI,EAAE;wBACJ,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,0CAA0C;qBAChD;iBACF;aACF;YACD,gBAAgB,EAAE;gBAChB,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBACR,KAAK;oBACL,KAAK;oBACL,OAAO;oBACP,OAAO;oBACP,WAAW;oBACX,YAAY;oBACZ,MAAM;iBACP;gBACD,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,QAAQ;qBACjB;oBACD,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,KAAK,EAAE;wBACL,IAAI,EAAE,SAAS;qBAChB;oBACD,KAAK,EAAE;wBACL,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE,KAAK;4BACX,GAAG,EAAE,0CAA0C;yBAChD;qBACF;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE,KAAK;4BACX,GAAG,EAAE,kCAAkC;yBACxC;qBACF;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;oBACD,UAAU,EAAE;wBACV,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,kDAAkD;qBACxD;oBACD,IAAI,EAAE;wBACJ,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,0CAA0C;qBAChD;iBACF;aACF;YACD,kBAAkB,EAAE;gBAClB,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,KAAK;iBAAC;gBACjB,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,QAAQ;qBACjB;iBACF;aACF;YACD,UAAU,EAAE;gBACV,IAAI,EAAE,QAAQ;gBACd,UAAU,EAAE;oBACV,aAAa,EAAE;wBACb,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,mDAAmD;qBACzD;iBACF;aACF;YACD,gBAAgB,EAAE;gBAChB,IAAI,EAAE,QAAQ;gBACd,UAAU,EAAE;oBACV,aAAa,EAAE;wBACb,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,mDAAmD;qBACzD;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,KAAK;oBAAE,UAAU;oBAAE,MAAM;oBAAE,WAAW;iBAAC;gBAClD,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,QAAQ,EAAE;wBACR,IAAI,EAAE,QAAQ;qBACf;oBACD,IAAI,EAAE;wBACJ,IAAI,EAAE,SAAS;qBAChB;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;oBACD,OAAO,EAAE;wBACP,IAAI,EAAE,OAAO;wBACb,IAAI,EAAE;4BACJ,8CAA8C;4BAC9C,8CAA8C;yBAC/C;qBACF;oBACD,UAAU,EAAE;wBACV,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,4CAA4C;qBAClD;iBACF;aACF;YACD,YAAY,EAAE;gBACZ,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,OAAO;oBAAE,QAAQ;iBAAC;gBAC7B,UAAU,EAAE;oBACV,KAAK,EAAE;wBACL,IAAI,EAAE,SAAS;qBAChB;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,SAAS;qBAChB;iBACF;aACF;YACD,YAAY,EAAE;gBACZ,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,OAAO;oBAAE,QAAQ;oBAAE,QAAQ;iBAAC;gBACvC,UAAU,EAAE;oBACV,KAAK,EAAE;wBACL,IAAI,EAAE,SAAS;qBAChB;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,SAAS;qBAChB;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,SAAS;qBAChB;iBACF;aACF;YACD,cAAc,EAAE;gBACd,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,QAAQ;iBAAC;gBACpB,UAAU,EAAE;oBACV,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,WAAW,EAAE;4BACX,WAAW;4BACX,WAAW;4BACX,SAAS;4BACT,aAAa;4BACb,SAAS;yBACV;qBACF;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;oBACD,aAAa,EAAE;wBACb,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;oBACD,aAAa,EAAE;wBACb,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;iBACF;aACF;YACD,aAAa,EAAE;gBACb,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,QAAQ;iBAAC;gBACpB,UAAU,EAAE;oBACV,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,WAAW,EAAE;4BAAC,SAAS;4BAAE,SAAS;yBAAC;qBACpC;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;iBACF;aACF;SACF;KACF;IACD,6BAA6B,EAAE;QAC7B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,kCAAkC;QACtC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EAAE,uCAAuC;gBACpD,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,OAAO;4BAAE,SAAS;4BAAE,WAAW;yBAAC;wBAC3C,UAAU,EAAE;4BACV,KAAK,EAAE;gCACL,IAAI,EAAE,OAAO;gCACb,IAAI,EAAE;oCACJ,kDAAkD;oCAClD,qDAAqD;oCACrD,kDAAkD;oCAClD,iDAAiD;oCACjD,+CAA+C;oCAC/C,gDAAgD;oCAChD,8CAA8C;oCAC9C,gDAAgD;oCAChD,sDAAsD;oCACtD,wDAAwD;oCACxD,yDAAyD;oCACzD,uDAAuD;oCACvD,+CAA+C;oCAC/C,6CAA6C;oCAC7C,8CAA8C;oCAC9C,+CAA+C;oCAC/C,6CAA6C;iCAC9C;6BACF;4BACD,OAAO,EAAE;gCACP,IAAI,EAAE,OAAO;gCACb,IAAI,EAAE;oCACJ,oCAAoC;oCACpC,gCAAgC;iCACjC;6BACF;4BACD,eAAe,EAAE;gCACf,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,QAAQ;oCACd,MAAM,EAAE,KAAK;iCACd;6BACF;4BACD,SAAS,EAAE;gCACT,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,KAAK;6BACd;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,8CAA8C;qBACpD;iBACF;gBACD,MAAM,EAAE;oBACN;wBACE,IAAI,EAAE,kBAAkB;qBACzB;iBACF;aACF;SACF;KACF;IACD,4BAA4B,EAAE;QAC5B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,iCAAiC;QACrC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,uCAAuC;gBACpD,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,IAAI;qBAAC;oBAChB,UAAU,EAAE;wBACV,EAAE,EAAE;4BACF,IAAI,EAAE,SAAS;yBAChB;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,oDAAoD;qBAC1D;iBACF;aACF;SACF;KACF;IACD,6BAA6B,EAAE;QAC7B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,kCAAkC;QACtC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,6BAA6B;gBAC1C,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,KAAK;qBAAC;oBACjB,UAAU,EAAE;wBACV,GAAG,EAAE;4BACH,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,QAAQ;yBACjB;wBACD,GAAG,EAAE;4BACH,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,KAAK;yBACd;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,kDAAkD;qBACxD;iBACF;gBACD,MAAM,EAAE;oBACN;wBACE,IAAI,EAAE,gBAAgB;qBACvB;iBACF;aACF;SACF;KACF;IACD,8BAA8B,EAAE;QAC9B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,mCAAmC;QACvC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,iCAAiC;gBAC9C,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,MAAM;qBAAC;oBAClB,UAAU,EAAE;wBACV,IAAI,EAAE;4BACJ,IAAI,EAAE,OAAO;4BACb,SAAS,EAAE,GAAG;4BACd,KAAK,EAAE;gCACL,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,QAAQ;6BACjB;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,SAAS;yBAAC;wBACrB,UAAU,EAAE;4BACV,OAAO,EAAE;gCACP,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,OAAO;oCACb,IAAI,EAAE;wCACJ,kDAAkD;wCAClD,oDAAoD;qCACrD;iCACF;6BACF;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,2BAA2B,EAAE;QAC3B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,gCAAgC;QACpC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,iCAAiC;gBAC9C,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,KAAK;qBAAC;oBACjB,UAAU,EAAE;wBACV,GAAG,EAAE;4BACH,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,KAAK;yBACd;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,gDAAgD;qBACtD;iBACF;gBACD,MAAM,EAAE;oBACN;wBACE,IAAI,EAAE,cAAc;qBACrB;iBACF;aACF;SACF;KACF;IACD,4BAA4B,EAAE;QAC5B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,iCAAiC;QACrC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,sCAAsC;gBACnD,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,MAAM;qBAAC;oBAClB,UAAU,EAAE;wBACV,IAAI,EAAE;4BACJ,IAAI,EAAE,OAAO;4BACb,SAAS,EAAE,GAAG;4BACd,KAAK,EAAE;gCACL,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,KAAK;6BACd;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,OAAO;yBAAC;wBACnB,UAAU,EAAE;4BACV,KAAK,EAAE;gCACL,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,OAAO;oCACb,IAAI,EAAE;wCACJ,gDAAgD;wCAChD,kDAAkD;qCACnD;iCACF;6BACF;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,+BAA+B,EAAE;QAC/B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,oCAAoC;QACxC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,8CAA8C;gBAC3D,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,UAAU,EAAE;wBACV,KAAK,EAAE;4BACL,IAAI,EAAE,OAAO;4BACb,KAAK,EAAE;gCACL,IAAI,EAAE,QAAQ;6BACf;4BACD,WAAW,EACT,mKAAmK;yBACtK;wBACD,SAAS,EAAE;4BACT,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,KAAK;yBACd;wBACD,aAAa,EAAE;4BACb,IAAI,EAAE,QAAQ;4BACd,OAAO,EAAE,MAAM;4BACf,IAAI,EAAE;gCAAC,KAAK;gCAAE,MAAM;6BAAC;4BACrB,WAAW,EACT,sFAAsF;yBACzF;wBACD,YAAY,EAAE;4BACZ,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,UAAU;4BAClB,WAAW,EAAE,iDAAiD;yBAC/D;wBACD,aAAa,EAAE;4BACb,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,UAAU;4BAClB,WAAW,EAAE,kDAAkD;yBAChE;wBACD,OAAO,EAAE;4BACP,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,KAAK;yBACd;wBACD,WAAW,EAAE;4BACX,IAAI,EAAE,OAAO;4BACb,SAAS,EAAE,EAAE;4BACb,WAAW,EACT,4JAA4J;4BAC9J,KAAK,EAAE;gCACL,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,MAAM;6BACf;yBACF;wBACD,WAAW,EAAE;4BACX,IAAI,EAAE,QAAQ;4BACd,WAAW,EACT,uPAAuP;4BACzP,WAAW,EAAE;gCAAC,SAAS;gCAAE,QAAQ;6BAAC;yBACnC;wBACD,qBAAqB,EAAE;4BACrB,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,KAAK;4BACd,WAAW,EACT,4IAA4I;yBAC/I;wBACD,KAAK,EAAE;4BACL,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,CAAC;4BACV,OAAO,EAAE,GAAG;4BACZ,OAAO,EAAE,EAAE;yBACZ;wBACD,UAAU,EAAE;4BACV,IAAI,EAAE,SAAS;4BACf,WAAW,EAAE,iDAAiD;yBAC/D;wBACD,OAAO,EAAE;4BACP,IAAI,EAAE,QAAQ;4BACd,WAAW,EACT,wJAAwJ;yBAC3J;wBACD,WAAW,EAAE;4BACX,IAAI,EAAE,OAAO;4BACb,KAAK,EAAE;gCACL,IAAI,EAAE,QAAQ;6BACf;4BACD,WAAW,EACT,6EAA6E;yBAChF;wBACD,aAAa,EAAE;4BACb,IAAI,EAAE,OAAO;4BACb,KAAK,EAAE;gCACL,IAAI,EAAE,QAAQ;6BACf;4BACD,WAAW,EACT,+EAA+E;yBAClF;wBACD,SAAS,EAAE;4BACT,IAAI,EAAE,OAAO;4BACb,KAAK,EAAE;gCACL,IAAI,EAAE,QAAQ;6BACf;4BACD,WAAW,EACT,2EAA2E;yBAC9E;wBACD,WAAW,EAAE;4BACX,IAAI,EAAE,OAAO;4BACb,KAAK,EAAE;gCACL,IAAI,EAAE,QAAQ;6BACf;4BACD,WAAW,EACT,6EAA6E;yBAChF;wBACD,WAAW,EAAE;4BACX,IAAI,EAAE,OAAO;4BACb,KAAK,EAAE;gCACL,IAAI,EAAE,QAAQ;6BACf;yBACF;wBACD,QAAQ,EAAE;4BACR,IAAI,EAAE,OAAO;4BACb,KAAK,EAAE;gCACL,IAAI,EAAE,QAAQ;gCACd,WAAW,EACT,kGAAkG;6BACrG;yBACF;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,QAAQ;yBAAC;wBACpB,UAAU,EAAE;4BACV,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;6BACf;4BACD,MAAM,EAAE;gCACN,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,8CAA8C;iCACpD;6BACF;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,iCAAiC,EAAE;QACjC,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,sCAAsC;QAC1C,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,wDAAwD;gBACrE,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,UAAU,EAAE;wBACV,UAAU,EAAE;4BACV,IAAI,EAAE,SAAS;4BACf,WAAW,EACT,qFAAqF;yBACxF;wBACD,UAAU,EAAE;4BACV,IAAI,EAAE,SAAS;4BACf,WAAW,EACT,2FAA2F;yBAC9F;wBACD,SAAS,EAAE;4BACT,IAAI,EAAE,QAAQ;4BACd,WAAW,EAAE,8CAA8C;yBAC5D;wBACD,qBAAqB,EAAE;4BACrB,IAAI,EAAE,SAAS;4BACf,WAAW,EACT,uIAAuI;yBAC1I;wBACD,OAAO,EAAE;4BACP,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,KAAK;4BACb,WAAW,EAAE,oCAAoC;yBAClD;wBACD,OAAO,EAAE;4BACP,IAAI,EAAE,QAAQ;4BACd,WAAW,EAAE,0CAA0C;yBACxD;wBACD,aAAa,EAAE;4BACb,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,UAAU;4BAClB,WAAW,EAAE,kDAAkD;yBAChE;wBACD,cAAc,EAAE;4BACd,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,UAAU;4BAClB,WAAW,EAAE,mDAAmD;yBACjE;wBACD,aAAa,EAAE;4BACb,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,UAAU;4BAClB,WAAW,EAAE,kDAAkD;yBAChE;wBACD,mBAAmB,EAAE;4BACnB,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,UAAU;4BAClB,WAAW,EACT,yFAAyF;yBAC5F;wBACD,oBAAoB,EAAE;4BACpB,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,UAAU;4BAClB,WAAW,EACT,0FAA0F;yBAC7F;wBACD,mBAAmB,EAAE;4BACnB,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,UAAU;4BAClB,WAAW,EACT,yFAAyF;yBAC5F;wBACD,oBAAoB,EAAE;4BACpB,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,UAAU;4BAClB,WAAW,EACT,0FAA0F;yBAC7F;wBACD,eAAe,EAAE;4BACf,IAAI,EAAE,OAAO;4BACb,KAAK,EAAE;gCACL,IAAI,EAAE,QAAQ;6BACf;4BACD,WAAW,EACT,gEAAgE;yBACnE;wBACD,cAAc,EAAE;4BACd,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,UAAU;4BAClB,WAAW,EAAE,mDAAmD;yBACjE;wBACD,YAAY,EAAE;4BACZ,IAAI,EAAE,SAAS;4BACf,WAAW,EACT,+FAA+F;yBAClG;wBACD,SAAS,EAAE;4BACT,IAAI,EAAE,SAAS;4BACf,WAAW,EACT,uEAAuE;yBAC1E;wBACD,WAAW,EAAE;4BACX,IAAI,EAAE,QAAQ;4BACd,WAAW,EAAE,mDAAmD;yBACjE;wBACD,cAAc,EAAE;4BACd,IAAI,EAAE,OAAO;4BACb,KAAK,EAAE;gCACL,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,KAAK;6BACd;yBACF;wBACD,cAAc,EAAE;4BACd,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,KAAK;4BACb,WAAW,EACT,qEAAqE;yBACxE;wBACD,SAAS,EAAE;4BACT,IAAI,EAAE,QAAQ;4BACd,OAAO,EAAE,gBAAgB;4BACzB,IAAI,EAAE;gCAAC,gBAAgB;gCAAE,gBAAgB;6BAAC;yBAC3C;wBACD,aAAa,EAAE;4BACb,IAAI,EAAE,QAAQ;4BACd,OAAO,EAAE,MAAM;4BACf,IAAI,EAAE;gCAAC,KAAK;gCAAE,MAAM;6BAAC;yBACtB;wBACD,SAAS,EAAE;4BACT,IAAI,EAAE,SAAS;4BACf,WAAW,EAAE,mCAAmC;yBACjD;wBACD,QAAQ,EAAE;4BACR,IAAI,EAAE,SAAS;4BACf,WAAW,EAAE,4CAA4C;yBAC1D;wBACD,KAAK,EAAE;4BACL,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,CAAC;4BACV,OAAO,EAAE,GAAG;4BACZ,OAAO,EAAE,EAAE;yBACZ;wBACD,IAAI,EAAE;4BACJ,IAAI,EAAE,OAAO;4BACb,SAAS,EAAE,EAAE;4BACb,KAAK,EAAE;gCACL,IAAI,EAAE,QAAQ;gCACd,WAAW,EACT,wIAAwI;6BAC3I;yBACF;wBACD,WAAW,EAAE;4BACX,IAAI,EAAE,OAAO;4BACb,KAAK,EAAE;gCACL,IAAI,EAAE,QAAQ;6BACf;yBACF;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;yBACf;wBACD,WAAW,EAAE;4BACX,IAAI,EAAE,OAAO;4BACb,SAAS,EAAE,EAAE;4BACb,WAAW,EACT,yIAAyI;4BAC3I,KAAK,EAAE;gCACL,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,MAAM;6BACf;yBACF;wBACD,WAAW,EAAE;4BACX,IAAI,EAAE,QAAQ;4BACd,WAAW,EACT,+NAA+N;4BACjO,WAAW,EAAE;gCAAC,SAAS;gCAAE,QAAQ;6BAAC;yBACnC;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,iBAAiB;yBAAC;wBAC7B,UAAU,EAAE;4BACV,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;6BACf;4BACD,eAAe,EAAE;gCACf,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,mDAAmD;iCACzD;6BACF;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,+BAA+B,EAAE;QAC/B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,oCAAoC;QACxC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,2CAA2C;gBACxD,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,UAAU,EAAE;wBACV,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;4BACd,WAAW,EAAE,6BAA6B;yBAC3C;wBACD,CAAC,EAAE;4BACD,IAAI,EAAE,QAAQ;yBACf;wBACD,KAAK,EAAE;4BACL,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,CAAC;4BACV,OAAO,EAAE,GAAG;4BACZ,OAAO,EAAE,EAAE;yBACZ;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,OAAO;yBAAC;wBACnB,UAAU,EAAE;4BACV,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;6BACf;4BACD,KAAK,EAAE;gCACL,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,0CAA0C;iCAChD;6BACF;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,yBAAyB,EAAE;QACzB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,8BAA8B;QAClC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,iDAAiD;gBAC9D,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,UAAU,EAAE;4BACV,OAAO,EAAE;gCACP,IAAI,EAAE,KAAK;gCACX,GAAG,EAAE,gDAAgD;6BACtD;4BACD,GAAG,EAAE;gCACH,IAAI,EAAE,KAAK;gCACX,GAAG,EAAE,gDAAgD;6BACtD;4BACD,UAAU,EAAE;gCACV,IAAI,EAAE,KAAK;gCACX,GAAG,EAAE,gDAAgD;6BACtD;4BACD,IAAI,EAAE;gCACJ,IAAI,EAAE,KAAK;gCACX,GAAG,EAAE,gDAAgD;6BACtD;4BACD,MAAM,EAAE;gCACN,IAAI,EAAE,KAAK;gCACX,GAAG,EAAE,+CAA+C;6BACrD;yBACF;qBACF;iBACF;aACF;YACD,aAAa,EAAE;gBACb,IAAI,EAAE,QAAQ;gBACd,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;iBACF;aACF;YACD,YAAY,EAAE;gBACZ,IAAI,EAAE,QAAQ;gBACd,UAAU,EAAE;oBACV,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;wBACd,WAAW,EAAE;4BACX,iCAAiC;4BACjC,qCAAqC;4BACrC,kCAAkC;yBACnC;qBACF;iBACF;aACF;SACF;KACF;IACD,sBAAsB,EAAE;QACtB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,2BAA2B;QAC/B,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EACT,8GAA8G;gBAChH,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,MAAM;4BAAE,QAAQ;yBAAC;wBAC5B,UAAU,EAAE;4BACV,IAAI,EAAE;gCACJ,IAAI,EAAE,QAAQ;gCACd,WAAW,EAAE,kCAAkC;6BAChD;4BACD,MAAM,EAAE;gCACN,IAAI,EAAE,OAAO;gCACb,SAAS,EAAE,CAAC;gCACZ,SAAS,EAAE,IAAI;gCACf,KAAK,EAAE;oCACL,IAAI,EAAE,QAAQ;iCACf;gCACD,WAAW,EAAE,0CAA0C;6BACxD;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,iBAAiB,EAAE;QACjB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,sBAAsB;QAC1B,IAAI,EAAE;YACJ,GAAG,EAAE;gBACH,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,MAAM;iBAAC;gBAClB,UAAU,EAAE;oBACV,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;wBACd,SAAS,EAAE,CAAC;wBACZ,SAAS,EAAE,GAAG;qBACf;oBACD,WAAW,EAAE;wBACX,IAAI,EAAE,QAAQ;wBACd,YAAY,EAAE,IAAI;wBAClB,SAAS,EAAE,KAAK;qBACjB;iBACF;aACF;YACD,OAAO,EAAE;gBACP,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,MAAM;oBAAE,SAAS;oBAAE,WAAW;oBAAE,WAAW;iBAAC;gBACvD,UAAU,EAAE;oBACV,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;wBACd,SAAS,EAAE,CAAC;wBACZ,SAAS,EAAE,GAAG;qBACf;oBACD,WAAW,EAAE;wBACX,IAAI,EAAE,QAAQ;wBACd,YAAY,EAAE,IAAI;wBAClB,SAAS,EAAE,KAAK;qBACjB;oBACD,OAAO,EAAE;wBACP,IAAI,EAAE,SAAS;qBAChB;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;iBACF;aACF;SACF;KACF;IACD,sBAAsB,EAAE;QACtB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,2BAA2B;QAC/B,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EACT,+FAA+F;gBACjG,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,MAAM;yBAAC;wBAClB,UAAU,EAAE;4BACV,IAAI,EAAE;gCACJ,IAAI,EAAE,QAAQ;gCACd,WAAW,EAAE,2BAA2B;6BACzC;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,UAAU,EAAE,CAAA,CAAE;qBACf;iBACF;gBACD,MAAM,EAAE;oBACN;wBACE,IAAI,EAAE,aAAa;wBACnB,WAAW,EAAE,wCAAwC;qBACtD;iBACF;aACF;SACF;KACF;IACD,yBAAyB,EAAE;QACzB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,8BAA8B;QAClC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EACT,oHAAoH;gBACtH,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,MAAM;4BAAE,QAAQ;yBAAC;wBAC5B,UAAU,EAAE;4BACV,IAAI,EAAE;gCACJ,IAAI,EAAE,QAAQ;gCACd,WAAW,EAAE,uCAAuC;6BACrD;4BACD,MAAM,EAAE;gCACN,IAAI,EAAE,OAAO;gCACb,SAAS,EAAE,CAAC;gCACZ,KAAK,EAAE;oCACL,IAAI,EAAE,QAAQ;iCACf;gCACD,WAAW,EAAE,+CAA+C;6BAC7D;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN;wBACE,IAAI,EAAE,aAAa;wBACnB,WAAW,EAAE,wCAAwC;qBACtD;iBACF;aACF;SACF;KACF;IACD,sBAAsB,EAAE;QACtB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,2BAA2B;QAC/B,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,mCAAmC;gBAChD,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,MAAM;qBAAC;oBAClB,UAAU,EAAE;wBACV,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;yBACf;wBACD,KAAK,EAAE;4BACL,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,CAAC;4BACV,OAAO,EAAE,IAAI;4BACb,OAAO,EAAE,GAAG;yBACb;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,KAAK;4BAAE,QAAQ;yBAAC;wBAC3B,UAAU,EAAE;4BACV,GAAG,EAAE;gCACH,IAAI,EAAE,KAAK;gCACX,GAAG,EAAE,kCAAkC;6BACxC;4BACD,MAAM,EAAE;gCACN,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,QAAQ;iCACf;6BACF;4BACD,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;6BACf;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN;wBACE,IAAI,EAAE,aAAa;wBACnB,WAAW,EAAE,wCAAwC;qBACtD;iBACF;aACF;SACF;KACF;IACD,sBAAsB,EAAE;QACtB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,2BAA2B;QAC/B,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,sBAAsB;gBACnC,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,UAAU,EAAE;wBACV,KAAK,EAAE;4BACL,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,CAAC;4BACV,OAAO,EAAE,GAAG;4BACZ,OAAO,EAAE,EAAE;yBACZ;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;yBACf;wBACD,UAAU,EAAE;4BACV,IAAI,EAAE,QAAQ;yBACf;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;4BACd,IAAI,EAAE;gCAAC,MAAM;gCAAE,WAAW;gCAAE,WAAW;6BAAC;4BACxC,OAAO,EAAE,MAAM;yBAChB;wBACD,aAAa,EAAE;4BACb,IAAI,EAAE,QAAQ;4BACd,OAAO,EAAE,KAAK;4BACd,IAAI,EAAE;gCAAC,KAAK;gCAAE,MAAM;6BAAC;4BACrB,WAAW,EAAE,4CAA4C;yBAC1D;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,MAAM;yBAAC;wBAClB,UAAU,EAAE;4BACV,IAAI,EAAE;gCACJ,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,kCAAkC;iCACxC;6BACF;4BACD,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;6BACf;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,sBAAsB,EAAE;QACtB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,2BAA2B;QAC/B,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EAAE,+BAA+B;gBAC5C,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,8BAA8B;qBACpC;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,kCAAkC;qBACxC;iBACF;aACF;SACF;KACF;IACD,qBAAqB,EAAE;QACrB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,0BAA0B;QAC9B,IAAI,EAAE;YACJ,MAAM,EAAE;gBACN,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBACR,KAAK;oBACL,OAAO;oBACP,KAAK;oBACL,OAAO;oBACP,WAAW;oBACX,eAAe;iBAChB;gBACD,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,MAAM;qBACf;oBACD,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,KAAK,EAAE;wBACL,IAAI,EAAE,SAAS;qBAChB;oBACD,WAAW,EAAE;wBACX,IAAI,EAAE,QAAQ;wBACd,YAAY,EAAE,IAAI;wBAClB,SAAS,EAAE,KAAK;qBACjB;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;oBACD,WAAW,EAAE;wBACX,IAAI,EAAE,QAAQ;wBACd,WAAW,EAAE;4BACX,qCAAqC;4BACrC,kCAAkC;4BAClC,iCAAiC;yBAClC;qBACF;oBACD,KAAK,EAAE;wBACL,IAAI,EAAE,QAAQ;wBACd,WAAW,EAAE;4BAAC,UAAU;4BAAE,UAAU;yBAAC;qBACtC;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,aAAa,EAAE;wBACb,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;iBACF;aACF;SACF;KACF;IACD,4BAA4B,EAAE;QAC5B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,iCAAiC;QACrC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,uCAAuC;gBACpD,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,UAAU,EAAE;wBACV,KAAK,EAAE;4BACL,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,CAAC;4BACV,OAAO,EAAE,GAAG;4BACZ,OAAO,EAAE,EAAE;yBACZ;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;yBACf;wBACD,KAAK,EAAE;4BACL,IAAI,EAAE,QAAQ;4BACd,WAAW,EAAE;gCAAC,UAAU;gCAAE,UAAU;6BAAC;4BACrC,OAAO,EAAE,UAAU;yBACpB;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;4BACd,WAAW,EAAE,uBAAuB;yBACrC;wBACD,IAAI,EAAE;4BACJ,IAAI,EAAE,OAAO;4BACb,SAAS,EAAE,GAAG;4BACd,KAAK,EAAE;gCACL,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,MAAM;6BACf;4BACD,WAAW,EACT,mEAAmE;yBACtE;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,SAAS;yBAAC;wBACrB,UAAU,EAAE;4BACV,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;6BACf;4BACD,OAAO,EAAE;gCACP,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,qCAAqC;iCAC3C;6BACF;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,8BAA8B,EAAE;QAC9B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,mCAAmC;QACvC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EAAE,wBAAwB;gBACrC,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,MAAM;4BAAE,OAAO;yBAAC;wBAC3B,UAAU,EAAE;4BACV,IAAI,EAAE;gCACJ,IAAI,EAAE,OAAO;gCACb,SAAS,EAAE,CAAC;gCACZ,SAAS,EAAE,GAAG;gCACd,KAAK,EAAE;oCACL,IAAI,EAAE,QAAQ;oCACd,MAAM,EAAE,MAAM;iCACf;6BACF;4BACD,KAAK,EAAE;gCACL,IAAI,EAAE,QAAQ;gCACd,WAAW,EAAE;oCAAC,UAAU;oCAAE,UAAU;iCAAC;6BACtC;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,UAAU,EAAE,CAAA,CAAE;qBACf;iBACF;aACF;SACF;KACF;IACD,6BAA6B,EAAE;QAC7B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,kCAAkC;QACtC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EAAE,iCAAiC;gBAC9C,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,KAAK;4BAAE,OAAO;4BAAE,OAAO;yBAAC;wBACnC,UAAU,EAAE;4BACV,GAAG,EAAE;gCACH,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,MAAM;6BACf;4BACD,KAAK,EAAE;gCACL,IAAI,EAAE,QAAQ;gCACd,WAAW,EAAE;oCAAC,UAAU;oCAAE,UAAU;iCAAC;6BACtC;4BACD,KAAK,EAAE;gCACL,IAAI,EAAE,SAAS;6BAChB;4BACD,WAAW,EAAE;gCACX,IAAI,EAAE,QAAQ;gCACd,SAAS,EAAE,IAAI;6BAChB;4BACD,WAAW,EAAE;gCACX,IAAI,EAAE,QAAQ;gCACd,WAAW,EAAE;oCACX,qCAAqC;oCACrC,kCAAkC;oCAClC,iCAAiC;iCAClC;6BACF;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,QAAQ;yBAAC;wBACpB,UAAU,EAAE;4BACV,MAAM,EAAE;gCACN,IAAI,EAAE,KAAK;gCACX,GAAG,EAAE,qCAAqC;6BAC3C;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,uBAAuB,EAAE;QACvB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,4BAA4B;QAChC,IAAI,EAAE;YACJ,SAAS,EAAE;gBACT,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,UAAU;oBAAE,OAAO;iBAAC;gBAC/B,UAAU,EAAE;oBACV,QAAQ,EAAE;wBACR,IAAI,EAAE,QAAQ;qBACf;oBACD,KAAK,EAAE;wBACL,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF;IACD,kCAAkC,EAAE;QAClC,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,uCAAuC;QAC3C,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,mEAAmE;gBACrE,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,MAAM;qBAAC;oBAClB,UAAU,EAAE;wBACV,IAAI,EAAE;4BACJ,IAAI,EAAE,OAAO;4BACb,KAAK,EAAE;gCACL,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,KAAK;6BACd;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,SAAS;yBAAC;wBACrB,UAAU,EAAE;4BACV,OAAO,EAAE;gCACP,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,0CAA0C;iCAChD;6BACF;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,sCAAsC,EAAE;QACtC,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,2CAA2C;QAC/C,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,gFAAgF;gBAClF,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,KAAK;qBAAC;oBACjB,UAAU,EAAE;wBACV,GAAG,EAAE;4BACH,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,KAAK;yBACd;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;yBACf;wBACD,KAAK,EAAE;4BACL,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,CAAC;4BACV,OAAO,EAAE,GAAG;4BACZ,OAAO,EAAE,EAAE;yBACZ;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,UAAU;yBAAC;wBACtB,UAAU,EAAE;4BACV,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;6BACf;4BACD,QAAQ,EAAE;gCACR,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,8DAA8D;iCACpE;6BACF;yBACF;qBACF;iBACF;aACF;YACD,cAAc,EAAE;gBACd,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,SAAS;iBAAC;gBACrB,UAAU,EAAE;oBACV,OAAO,EAAE;wBACP,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,wCAAwC;qBAC9C;oBACD,YAAY,EAAE;wBACZ,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE,KAAK;4BACX,GAAG,EAAE,0CAA0C;yBAChD;qBACF;iBACF;aACF;SACF;KACF;IACD,iCAAiC,EAAE;QACjC,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,sCAAsC;QAC1C,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,qEAAqE;gBACvE,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE;wBAAC,QAAQ;qBAAC;oBACpB,UAAU,EAAE;wBACV,MAAM,EAAE;4BACN,IAAI,EAAE,OAAO;4BACb,KAAK,EAAE;gCACL,IAAI,EAAE,QAAQ;6BACf;yBACF;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;yBACf;wBACD,KAAK,EAAE;4BACL,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,CAAC;4BACV,OAAO,EAAE,GAAG;4BACZ,OAAO,EAAE,EAAE;yBACZ;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,UAAU;yBAAC;wBACtB,UAAU,EAAE;4BACV,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;6BACf;4BACD,QAAQ,EAAE;gCACR,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,wCAAwC;iCAC9C;6BACF;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,uBAAuB,EAAE;QACvB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,4BAA4B;QAChC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EAAE,sDAAsD;gBACnE,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,KAAK;4BAAE,MAAM;yBAAC;wBACzB,UAAU,EAAE;4BACV,GAAG,EAAE;gCACH,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,KAAK;6BACd;4BACD,IAAI,EAAE;gCACJ,IAAI,EAAE,QAAQ;gCACd,WAAW,EAAE;oCACX,iCAAiC;oCACjC,qCAAqC;oCACrC,kCAAkC;iCACnC;6BACF;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,kCAAkC;qBACxC;iBACF;gBACD,MAAM,EAAE;oBACN;wBACE,IAAI,EAAE,qBAAqB;wBAC3B,WAAW,EAAE,oCAAoC;qBAClD;iBACF;aACF;SACF;KACF;IACD,kBAAkB,EAAE;QAClB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,uBAAuB;QAC3B,IAAI,EAAE;YACJ,MAAM,EAAE;gBACN,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBAAC,KAAK;oBAAE,MAAM;iBAAC;gBACzB,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,QAAQ,EAAE;wBACR,IAAI,EAAE,SAAS;qBAChB;oBACD,OAAO,EAAE;wBACP,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,6CAA6C;qBACnD;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;oBACD,SAAS,EAAE;wBACT,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,UAAU;qBACnB;oBACD,aAAa,EAAE;wBACb,IAAI,EAAE,QAAQ;qBACf;oBACD,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;wBACd,WAAW,EAAE;4BACX,qCAAqC;4BACrC,yCAAyC;4BACzC,sCAAsC;yBACvC;qBACF;iBACF;aACF;YACD,SAAS,EAAE;gBACT,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,+DAA+D;aAClE;YACD,aAAa,EAAE;gBACb,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,2CAA2C;aACzD;YACD,UAAU,EAAE;gBACV,IAAI,EAAE,OAAO;gBACb,WAAW,EACT,oEAAoE;aACvE;SACF;KACF;IACD,0BAA0B,EAAE;QAC1B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,+BAA+B;QACnC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EAAE,uDAAuD;gBACpE,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,KAAK;yBAAC;wBACjB,UAAU,EAAE;4BACV,GAAG,EAAE;gCACH,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,KAAK;6BACd;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN;wBACE,IAAI,EAAE,gBAAgB;wBACtB,WAAW,EAAE,yCAAyC;qBACvD;oBACD;wBACE,IAAI,EAAE,kBAAkB;wBACxB,WAAW,EAAE,2CAA2C;qBACzD;iBACF;aACF;SACF;KACF;IACD,yBAAyB,EAAE;QACzB,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,8BAA8B;QAClC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,oDAAoD;gBACjE,UAAU,EAAE;oBACV,IAAI,EAAE,QAAQ;oBACd,UAAU,EAAE;wBACV,KAAK,EAAE;4BACL,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,CAAC;4BACV,OAAO,EAAE,GAAG;4BACZ,OAAO,EAAE,EAAE;yBACZ;wBACD,MAAM,EAAE;4BACN,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,SAAS;yBAAC;wBACrB,UAAU,EAAE;4BACV,MAAM,EAAE;gCACN,IAAI,EAAE,QAAQ;6BACf;4BACD,OAAO,EAAE;gCACP,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE;oCACL,IAAI,EAAE,KAAK;oCACX,GAAG,EAAE,kCAAkC;iCACxC;6BACF;yBACF;qBACF;iBACF;aACF;SACF;KACF;IACD,0BAA0B,EAAE;QAC1B,OAAO,EAAE,CAAC;QACV,EAAE,EAAE,+BAA+B;QACnC,IAAI,EAAE;YACJ,IAAI,EAAE;gBACJ,IAAI,EAAE,WAAW;gBACjB,WAAW,EACT,4DAA4D;gBAC9D,KAAK,EAAE;oBACL,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE;4BAAC,KAAK;yBAAC;wBACjB,UAAU,EAAE;4BACV,GAAG,EAAE;gCACH,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE,KAAK;6BACd;4BACD,QAAQ,EAAE;gCACR,IAAI,EAAE,SAAS;6BAChB;4BACD,IAAI,EAAE;gCACJ,IAAI,EAAE,QAAQ;gCACd,WAAW,EAAE;oCACX,iCAAiC;oCACjC,qCAAqC;oCACrC,kCAAkC;iCACnC;6BACF;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,kBAAkB;oBAC5B,MAAM,EAAE;wBACN,IAAI,EAAE,KAAK;wBACX,GAAG,EAAE,kCAAkC;qBACxC;iBACF;gBACD,MAAM,EAAE;oBACN;wBACE,IAAI,EAAE,gBAAgB;wBACtB,WAAW,EAAE,qDAAqD;qBACnE;iBACF;aACF;SACF;KACF;CAC4C,CAAA;AAElC,QAAA,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,QAAA,UAAU,CAAC,CAAA;AACnC,QAAA,QAAQ,GAAa,IAAI,UAAA,QAAQ,CAAC,QAAA,OAAO,CAAC,CAAA;AAC1C,QAAA,GAAG,GAAG;IACjB,mBAAmB,EAAE,wBAAwB;IAC7C,4BAA4B,EAAE,iCAAiC;IAC/D,oCAAoC,EAClC,yCAAyC;IAC3C,iCAAiC,EAAE,sCAAsC;IACzE,mCAAmC,EAAE,wCAAwC;IAC7E,6BAA6B,EAAE,kCAAkC;IACjE,8BAA8B,EAAE,mCAAmC;IACnE,6BAA6B,EAAE,kCAAkC;IACjE,+BAA+B,EAAE,oCAAoC;IACrE,6BAA6B,EAAE,kCAAkC;IACjE,wBAAwB,EAAE,6BAA6B;IACvD,iCAAiC,EAAE,sCAAsC;IACzE,kCAAkC,EAAE,uCAAuC;IAC3E,oCAAoC,EAClC,yCAAyC;IAC3C,kCAAkC,EAAE,uCAAuC;IAC3E,8CAA8C,EAC5C,mDAAmD;IACrD,8CAA8C,EAC5C,mDAAmD;IACrD,+BAA+B,EAAE,oCAAoC;IACrE,kCAAkC,EAAE,uCAAuC;IAC3E,oCAAoC,EAClC,yCAAyC;IAC3C,8BAA8B,EAAE,mCAAmC;IACnE,mBAAmB,EAAE,wBAAwB;IAC7C,0BAA0B,EAAE,+BAA+B;IAC3D,8BAA8B,EAAE,mCAAmC;IACnE,uBAAuB,EAAE,4BAA4B;IACrD,gCAAgC,EAAE,qCAAqC;IACvE,wBAAwB,EAAE,6BAA6B;IACvD,yBAAyB,EAAE,8BAA8B;IACzD,0BAA0B,EAAE,+BAA+B;IAC3D,kBAAkB,EAAE,uBAAuB;IAC3C,0BAA0B,EAAE,+BAA+B;IAC3D,0BAA0B,EAAE,+BAA+B;IAC3D,uBAAuB,EAAE,4BAA4B;IACrD,wBAAwB,EAAE,6BAA6B;IACvD,8BAA8B,EAAE,mCAAmC;IACnE,yBAAyB,EAAE,8BAA8B;IACzD,uBAAuB,EAAE,4BAA4B;IACrD,uBAAuB,EAAE,4BAA4B;IACrD,wBAAwB,EAAE,6BAA6B;IACvD,+BAA+B,EAAE,oCAAoC;IACrE,kCAAkC,EAAE,uCAAuC;IAC3E,4BAA4B,EAAE,iCAAiC;IAC/D,6BAA6B,EAAE,kCAAkC;IACjE,iCAAiC,EAAE,sCAAsC;IACzE,gCAAgC,EAAE,qCAAqC;IACvE,iCAAiC,EAAE,sCAAsC;IACzE,6BAA6B,EAAE,kCAAkC;IACjE,iCAAiC,EAAE,sCAAsC;IACzE,oBAAoB,EAAE,yBAAyB;IAC/C,6BAA6B,EAAE,kCAAkC;IACjE,6BAA6B,EAAE,kCAAkC;IACjE,8BAA8B,EAAE,mCAAmC;IACnE,qCAAqC,EACnC,0CAA0C;IAC5C,8BAA8B,EAAE,mCAAmC;IACnE,0BAA0B,EAAE,+BAA+B;IAC3D,gCAAgC,EAAE,qCAAqC;IACvE,8BAA8B,EAAE,mCAAmC;IACnE,oCAAoC,EAClC,yCAAyC;IAC3C,wCAAwC,EACtC,6CAA6C;IAC/C,kCAAkC,EAAE,uCAAuC;IAC3E,oCAAoC,EAClC,yCAAyC;IAC3C,iCAAiC,EAAE,sCAAsC;IACzE,6BAA6B,EAAE,kCAAkC;IACjE,iCAAiC,EAAE,sCAAsC;IACzE,2BAA2B,EAAE,gCAAgC;IAC7D,qBAAqB,EAAE,0BAA0B;IACjD,uBAAuB,EAAE,4BAA4B;IACrD,yBAAyB,EAAE,8BAA8B;IACzD,qBAAqB,EAAE,0BAA0B;IACjD,6BAA6B,EAAE,kCAAkC;IACjE,uBAAuB,EAAE,4BAA4B;IACrD,qBAAqB,EAAE,0BAA0B;IACjD,2BAA2B,EAAE,gCAAgC;IAC7D,uBAAuB,EAAE,4BAA4B;IACrD,uBAAuB,EAAE,4BAA4B;IACrD,4BAA4B,EAAE,iCAAiC;IAC/D,0BAA0B,EAAE,+BAA+B;IAC3D,4BAA4B,EAAE,iCAAiC;IAC/D,+BAA+B,EAAE,oCAAoC;IACrE,8BAA8B,EAAE,mCAAmC;IACnE,yBAAyB,EAAE,8BAA8B;IACzD,sCAAsC,EACpC,2CAA2C;IAC7C,gBAAgB,EAAE,qBAAqB;IACvC,0BAA0B,EAAE,+BAA+B;IAC3D,sBAAsB,EAAE,2BAA2B;IACnD,uBAAuB,EAAE,4BAA4B;IACrD,0BAA0B,EAAE,+BAA+B;IAC3D,mBAAmB,EAAE,wBAAwB;IAC7C,0BAA0B,EAAE,+BAA+B;IAC3D,wBAAwB,EAAE,6BAA6B;IACvD,iCAAiC,EAAE,sCAAsC;IACzE,gBAAgB,EAAE,qBAAqB;IACvC,oBAAoB,EAAE,yBAAyB;IAC/C,kBAAkB,EAAE,uBAAuB;IAC3C,kBAAkB,EAAE,uBAAuB;IAC3C,2BAA2B,EAAE,gCAAgC;IAC7D,iBAAiB,EAAE,sBAAsB;IACzC,eAAe,EAAE,oBAAoB;IACrC,gCAAgC,EAAE,qCAAqC;IACvE,oBAAoB,EAAE,yBAAyB;IAC/C,wBAAwB,EAAE,6BAA6B;IACvD,wBAAwB,EAAE,6BAA6B;IACvD,wBAAwB,EAAE,6BAA6B;IACvD,kBAAkB,EAAE,uBAAuB;IAC3C,2BAA2B,EAAE,gCAAgC;IAC7D,4BAA4B,EAAE,iCAAiC;IAC/D,0BAA0B,EAAE,+BAA+B;IAC3D,mBAAmB,EAAE,wBAAwB;IAC7C,sBAAsB,EAAE,2BAA2B;IACnD,wBAAwB,EAAE,6BAA6B;IACvD,mBAAmB,EAAE,wBAAwB;IAC7C,oBAAoB,EAAE,yBAAyB;IAC/C,wBAAwB,EAAE,6BAA6B;IACvD,4BAA4B,EAAE,iCAAiC;IAC/D,sBAAsB,EAAE,2BAA2B;IACnD,eAAe,EAAE,oBAAoB;IACrC,eAAe,EAAE,oBAAoB;IACrC,mBAAmB,EAAE,wBAAwB;IAC7C,iBAAiB,EAAE,sBAAsB;IACzC,sBAAsB,EAAE,2BAA2B;IACnD,2BAA2B,EAAE,gCAAgC;IAC7D,qBAAqB,EAAE,0BAA0B;IACjD,iBAAiB,EAAE,sBAAsB;IACzC,gBAAgB,EAAE,qBAAqB;IACvC,kBAAkB,EAAE,uBAAuB;IAC3C,gCAAgC,EAAE,qCAAqC;IACvE,qBAAqB,EAAE,0BAA0B;IACjD,wBAAwB,EAAE,6BAA6B;IACvD,sBAAsB,EAAE,2BAA2B;IACnD,6BAA6B,EAAE,kCAAkC;IACjE,mBAAmB,EAAE,wBAAwB;IAC7C,yBAAyB,EAAE,8BAA8B;IACzD,wBAAwB,EAAE,6BAA6B;IACvD,oBAAoB,EAAE,yBAAyB;IAC/C,oBAAoB,EAAE,yBAAyB;IAC/C,4BAA4B,EAAE,iCAAiC;IAC/D,0BAA0B,EAAE,+BAA+B;IAC3D,2BAA2B,EAAE,gCAAgC;IAC7D,sCAAsC,EACpC,2CAA2C;IAC7C,gBAAgB,EAAE,qBAAqB;IACvC,qBAAqB,EAAE,0BAA0B;IACjD,oBAAoB,EAAE,yBAAyB;IAC/C,qBAAqB,EAAE,0BAA0B;IACjD,yBAAyB,EAAE,8BAA8B;IACzD,sBAAsB,EAAE,2BAA2B;IACnD,8BAA8B,EAAE,mCAAmC;IACnE,uBAAuB,EAAE,4BAA4B;IACrD,uBAAuB,EAAE,4BAA4B;IACrD,2BAA2B,EAAE,gCAAgC;IAC7D,wBAAwB,EAAE,6BAA6B;IACvD,kBAAkB,EAAE,uBAAuB;IAC3C,yBAAyB,EAAE,8BAA8B;IACzD,qBAAqB,EAAE,0BAA0B;IACjD,iCAAiC,EAAE,sCAAsC;IACzE,oCAAoC,EAClC,yCAAyC;IAC3C,iCAAiC,EAAE,sCAAsC;IACzE,+BAA+B,EAAE,oCAAoC;IACrE,6BAA6B,EAAE,kCAAkC;IACjE,oBAAoB,EAAE,yBAAyB;IAC/C,oBAAoB,EAAE,yBAAyB;IAC/C,yBAAyB,EAAE,8BAA8B;IACzD,wCAAwC,EACtC,6CAA6C;IAC/C,sCAAsC,EACpC,2CAA2C;IAC7C,oCAAoC,EAClC,yCAAyC;IAC3C,iCAAiC,EAAE,sCAAsC;IACzE,oCAAoC,EAClC,yCAAyC;IAC3C,mCAAmC,EAAE,wCAAwC;IAC7E,0CAA0C,EACxC,+CAA+C;IACjD,gBAAgB,EAAE,qBAAqB;IACvC,wBAAwB,EAAE,6BAA6B;IACvD,2BAA2B,EAAE,gCAAgC;IAC7D,uBAAuB,EAAE,4BAA4B;IACrD,wBAAwB,EAAE,6BAA6B;IACvD,iBAAiB,EAAE,sBAAsB;IACzC,0BAA0B,EAAE,+BAA+B;IAC3D,8BAA8B,EAAE,mCAAmC;IACnE,iBAAiB,EAAE,sBAAsB;IACzC,iCAAiC,EAAE,sCAAsC;IACzE,qBAAqB,EAAE,0BAA0B;IACjD,+BAA+B,EAAE,oCAAoC;IACrE,mBAAmB,EAAE,wBAAwB;IAC7C,wBAAwB,EAAE,6BAA6B;IACvD,uBAAuB,EAAE,4BAA4B;IACrD,uBAAuB,EAAE,4BAA4B;IACrD,sBAAsB,EAAE,2BAA2B;IACnD,wBAAwB,EAAE,6BAA6B;IACvD,6BAA6B,EAAE,kCAAkC;IACjE,wBAAwB,EAAE,6BAA6B;IACvD,uBAAuB,EAAE,4BAA4B;IACrD,kCAAkC,EAAE,uCAAuC;IAC3E,mCAAmC,EAAE,wCAAwC;IAC7E,mCAAmC,EAAE,wCAAwC;IAC7E,qCAAqC,EACnC,0CAA0C;IAC5C,2BAA2B,EAAE,gCAAgC;IAC7D,qCAAqC,EACnC,0CAA0C;IAC5C,oCAAoC,EAClC,yCAAyC;IAC3C,qCAAqC,EACnC,0CAA0C;IAC5C,wBAAwB,EAAE,6BAA6B;IACvD,6BAA6B,EAAE,kCAAkC;IACjE,4BAA4B,EAAE,iCAAiC;IAC/D,6BAA6B,EAAE,kCAAkC;IACjE,8BAA8B,EAAE,mCAAmC;IACnE,2BAA2B,EAAE,gCAAgC;IAC7D,4BAA4B,EAAE,iCAAiC;IAC/D,+BAA+B,EAAE,oCAAoC;IACrE,iCAAiC,EAAE,sCAAsC;IACzE,+BAA+B,EAAE,oCAAoC;IACrE,yBAAyB,EAAE,8BAA8B;IACzD,sBAAsB,EAAE,2BAA2B;IACnD,iBAAiB,EAAE,sBAAsB;IACzC,sBAAsB,EAAE,2BAA2B;IACnD,yBAAyB,EAAE,8BAA8B;IACzD,sBAAsB,EAAE,2BAA2B;IACnD,sBAAsB,EAAE,2BAA2B;IACnD,sBAAsB,EAAE,2BAA2B;IACnD,qBAAqB,EAAE,0BAA0B;IACjD,4BAA4B,EAAE,iCAAiC;IAC/D,8BAA8B,EAAE,mCAAmC;IACnE,6BAA6B,EAAE,kCAAkC;IACjE,uBAAuB,EAAE,4BAA4B;IACrD,kCAAkC,EAAE,uCAAuC;IAC3E,sCAAsC,EACpC,2CAA2C;IAC7C,iCAAiC,EAAE,sCAAsC;IACzE,uBAAuB,EAAE,4BAA4B;IACrD,kBAAkB,EAAE,uBAAuB;IAC3C,0BAA0B,EAAE,+BAA+B;IAC3D,yBAAyB,EAAE,8BAA8B;IACzD,0BAA0B,EAAE,+BAA+B;CAC5D,CAAA","ignoreList":[0]}},
    {"offset": {"line": 14777, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14782, "column": 0}, "map": {"version":3,"file":"types.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/types.ts"],"sourcesContent":["import { AppBskyActorDefs } from './client'\nimport { ModerationPrefs } from './moderation/types'\n\n/**\n * Supported proxy targets\n */\ntype UnknownServiceType = string & NonNullable<unknown>\nexport type AtprotoServiceType = 'atproto_labeler' | UnknownServiceType\n\n/**\n * Used by the PersistSessionHandler to indicate what change occurred\n */\nexport type AtpSessionEvent =\n  | 'create'\n  | 'create-failed'\n  | 'update'\n  | 'expired'\n  | 'network-error'\n\n/**\n * Used by AtpAgent to store active sessions\n */\nexport interface AtpSessionData {\n  refreshJwt: string\n  accessJwt: string\n  handle: string\n  did: string\n  email?: string\n  emailConfirmed?: boolean\n  emailAuthFactor?: boolean\n  active: boolean\n  status?: string\n}\n\n/**\n * Handler signature passed to AtpAgent to store session data\n */\nexport type AtpPersistSessionHandler = (\n  evt: AtpSessionEvent,\n  session: AtpSessionData | undefined,\n) => void | Promise<void>\n\n/**\n * AtpAgent login() opts\n */\nexport interface AtpAgentLoginOpts {\n  identifier: string\n  password: string\n  authFactorToken?: string | undefined\n}\n\n/**\n * AtpAgent global config opts\n */\nexport interface AtpAgentGlobalOpts {\n  appLabelers?: string[]\n}\n\n/**\n * Bluesky feed view preferences\n */\n\nexport interface BskyFeedViewPreference {\n  hideReplies: boolean\n  hideRepliesByUnfollowed: boolean\n  hideRepliesByLikeCount: number\n  hideReposts: boolean\n  hideQuotePosts: boolean\n  [key: string]: any\n}\n\n/**\n * Bluesky thread view preferences\n */\nexport interface BskyThreadViewPreference {\n  sort: string\n  prioritizeFollowedUsers: boolean\n  [key: string]: any\n}\n\n/**\n * Bluesky interests preferences\n */\nexport interface BskyInterestsPreference {\n  tags: string[]\n  [key: string]: any\n}\n\n/**\n * Bluesky preferences\n */\nexport interface BskyPreferences {\n  /**\n   * @deprecated use `savedFeeds`\n   */\n  feeds: {\n    saved?: string[]\n    pinned?: string[]\n  }\n  savedFeeds: AppBskyActorDefs.SavedFeed[]\n  feedViewPrefs: Record<string, BskyFeedViewPreference>\n  threadViewPrefs: BskyThreadViewPreference\n  moderationPrefs: ModerationPrefs\n  birthDate: Date | undefined\n  interests: BskyInterestsPreference\n  bskyAppState: {\n    queuedNudges: string[]\n    activeProgressGuide: AppBskyActorDefs.BskyAppProgressGuide | undefined\n    nuxs: AppBskyActorDefs.Nux[]\n  }\n}\n"],"names":[],"mappings":"","ignoreList":[0]}},
    {"offset": {"line": 14786, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14791, "column": 0}, "map": {"version":3,"file":"const.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/const.ts"],"sourcesContent":["export const BSKY_LABELER_DID = 'did:plc:ar7c4by46qjdydhdevvrndac'\n"],"names":[],"mappings":";;;;;AAAa,QAAA,gBAAgB,GAAG,kCAAkC,CAAA","ignoreList":[0]}},
    {"offset": {"line": 14797, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14802, "column": 0}, "map": {"version":3,"file":"util.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/util.ts"],"sourcesContent":["import { AtUri } from '@atproto/syntax'\nimport { TID } from '@atproto/common-web'\nimport zod from 'zod'\n\nimport { Nux } from './client/types/app/bsky/actor/defs'\nimport { AppBskyActorDefs } from './client'\n\nexport function sanitizeMutedWordValue(value: string) {\n  return (\n    value\n      .trim()\n      .replace(/^#(?!\\ufe0f)/, '')\n      // eslint-disable-next-line no-misleading-character-class\n      .replace(/[\\r\\n\\u00AD\\u2060\\u200D\\u200C\\u200B]+/, '')\n  )\n}\n\nexport function savedFeedsToUriArrays(\n  savedFeeds: AppBskyActorDefs.SavedFeed[],\n): {\n  pinned: string[]\n  saved: string[]\n} {\n  const pinned: string[] = []\n  const saved: string[] = []\n\n  for (const feed of savedFeeds) {\n    if (feed.pinned) {\n      pinned.push(feed.value)\n      // saved in v1 includes pinned\n      saved.push(feed.value)\n    } else {\n      saved.push(feed.value)\n    }\n  }\n\n  return {\n    pinned,\n    saved,\n  }\n}\n\n/**\n * Get the type of a saved feed, used by deprecated methods for backwards\n * compat. Should not be used moving forward. *Invalid URIs will throw.*\n *\n * @param uri - The AT URI of the saved feed\n */\nexport function getSavedFeedType(\n  uri: string,\n): AppBskyActorDefs.SavedFeed['type'] {\n  const urip = new AtUri(uri)\n\n  switch (urip.collection) {\n    case 'app.bsky.feed.generator':\n      return 'feed'\n    case 'app.bsky.graph.list':\n      return 'list'\n    default:\n      return 'unknown'\n  }\n}\n\nexport function validateSavedFeed(savedFeed: AppBskyActorDefs.SavedFeed) {\n  new TID(savedFeed.id)\n\n  if (['feed', 'list'].includes(savedFeed.type)) {\n    const uri = new AtUri(savedFeed.value)\n    const isFeed = uri.collection === 'app.bsky.feed.generator'\n    const isList = uri.collection === 'app.bsky.graph.list'\n\n    if (savedFeed.type === 'feed' && !isFeed) {\n      throw new Error(\n        `Saved feed of type 'feed' must be a feed, got ${uri.collection}`,\n      )\n    }\n    if (savedFeed.type === 'list' && !isList) {\n      throw new Error(\n        `Saved feed of type 'list' must be a list, got ${uri.collection}`,\n      )\n    }\n  }\n}\n\nexport type Did = `did:${string}`\n\n// @TODO use tools from @atproto/did\nexport const isDid = (str: unknown): str is Did =>\n  typeof str === 'string' &&\n  str.startsWith('did:') &&\n  str.includes(':', 4) &&\n  str.length > 8 &&\n  str.length <= 2048\n\nexport const asDid = (value: string): Did => {\n  if (isDid(value)) return value\n  throw new TypeError(`Invalid DID: ${value}`)\n}\n\nexport const nuxSchema = zod\n  .object({\n    id: zod.string().max(64),\n    completed: zod.boolean(),\n    data: zod.string().max(300).optional(),\n    expiresAt: zod.string().datetime().optional(),\n  })\n  .strict()\n\nexport function validateNux(nux: Nux) {\n  nuxSchema.parse(nux)\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 14891, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14896, "column": 0}, "map": {"version":3,"file":"util.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/util.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nexport function isObj(v: unknown): v is Record<string, unknown> {\n  return typeof v === 'object' && v !== null\n}\n\nexport function hasProp<K extends PropertyKey>(\n  data: object,\n  prop: K,\n): data is Record<K, unknown> {\n  return prop in data\n}\n"],"names":[],"mappings":";;;;AAGA,QAAA,KAAA,GAAA,MAEC;AAED,QAAA,OAAA,GAAA,QAKC;AAZD;;GAEG,CACH,SAAgB,KAAK,CAAC,CAAU;IAC9B,OAAO,OAAO,CAAC,KAAK,QAAQ,IAAI,CAAC,KAAK,IAAI,CAAA;AAC5C,CAAC;AAED,SAAgB,OAAO,CACrB,IAAY,EACZ,IAAO;IAEP,OAAO,IAAI,IAAI,IAAI,CAAA;AACrB,CAAC","ignoreList":[0]}},
    {"offset": {"line": 14910, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14915, "column": 0}, "map": {"version":3,"file":"applyWrites.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/repo/applyWrites.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoRepoDefs from './defs'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** The handle or DID of the repo (aka, current account). */\n  repo: string\n  /** Can be set to 'false' to skip Lexicon schema validation of record data across all operations, 'true' to require it, or leave unset to validate only for known Lexicons. */\n  validate?: boolean\n  writes: (Create | Update | Delete)[]\n  /** If provided, the entire operation will fail if the current repo commit CID does not match this value. Used to prevent conflicting repo mutations. */\n  swapCommit?: string\n  [k: string]: unknown\n}\n\nexport interface OutputSchema {\n  commit?: ComAtprotoRepoDefs.CommitMeta\n  results?: (CreateResult | UpdateResult | DeleteResult)[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class InvalidSwapError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'InvalidSwap') return new InvalidSwapError(e)\n  }\n\n  return e\n}\n\n/** Operation which creates a new record. */\nexport interface Create {\n  collection: string\n  rkey?: string\n  value: {}\n  [k: string]: unknown\n}\n\nexport function isCreate(v: unknown): v is Create {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.repo.applyWrites#create'\n  )\n}\n\nexport function validateCreate(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.repo.applyWrites#create', v)\n}\n\n/** Operation which updates an existing record. */\nexport interface Update {\n  collection: string\n  rkey: string\n  value: {}\n  [k: string]: unknown\n}\n\nexport function isUpdate(v: unknown): v is Update {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.repo.applyWrites#update'\n  )\n}\n\nexport function validateUpdate(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.repo.applyWrites#update', v)\n}\n\n/** Operation which deletes an existing record. */\nexport interface Delete {\n  collection: string\n  rkey: string\n  [k: string]: unknown\n}\n\nexport function isDelete(v: unknown): v is Delete {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.repo.applyWrites#delete'\n  )\n}\n\nexport function validateDelete(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.repo.applyWrites#delete', v)\n}\n\nexport interface CreateResult {\n  uri: string\n  cid: string\n  validationStatus?: 'valid' | 'unknown' | (string & {})\n  [k: string]: unknown\n}\n\nexport function isCreateResult(v: unknown): v is CreateResult {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.repo.applyWrites#createResult'\n  )\n}\n\nexport function validateCreateResult(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.repo.applyWrites#createResult', v)\n}\n\nexport interface UpdateResult {\n  uri: string\n  cid: string\n  validationStatus?: 'valid' | 'unknown' | (string & {})\n  [k: string]: unknown\n}\n\nexport function isUpdateResult(v: unknown): v is UpdateResult {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.repo.applyWrites#updateResult'\n  )\n}\n\nexport function validateUpdateResult(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.repo.applyWrites#updateResult', v)\n}\n\nexport interface DeleteResult {\n  [k: string]: unknown\n}\n\nexport function isDeleteResult(v: unknown): v is DeleteResult {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.repo.applyWrites#deleteResult'\n  )\n}\n\nexport function validateDeleteResult(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.repo.applyWrites#deleteResult', v)\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 14988, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14993, "column": 0}, "map": {"version":3,"file":"createRecord.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/repo/createRecord.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoRepoDefs from './defs'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** The handle or DID of the repo (aka, current account). */\n  repo: string\n  /** The NSID of the record collection. */\n  collection: string\n  /** The Record Key. */\n  rkey?: string\n  /** Can be set to 'false' to skip Lexicon schema validation of record data, 'true' to require it, or leave unset to validate only for known Lexicons. */\n  validate?: boolean\n  /** The record itself. Must contain a $type field. */\n  record: {}\n  /** Compare and swap with the previous commit by CID. */\n  swapCommit?: string\n  [k: string]: unknown\n}\n\nexport interface OutputSchema {\n  uri: string\n  cid: string\n  commit?: ComAtprotoRepoDefs.CommitMeta\n  validationStatus?: 'valid' | 'unknown' | (string & {})\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class InvalidSwapError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'InvalidSwap') return new InvalidSwapError(e)\n  }\n\n  return e\n}\n"],"names":[],"mappings":";;;;;AAuDA,QAAA,UAAA,GAAA,WAMC;AA7DD;;GAEG,CACH,MAAA,kCAAqD;AA8CrD,MAAa,gBAAiB,SAAQ,OAAA,SAAS;IAC7C,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,gBAAA,GAAA,iBAIC;AAED,SAAgB,UAAU,CAAC,CAAM;IAC/B,IAAI,CAAC,YAAY,OAAA,SAAS,EAAE,CAAC;QAC3B,IAAI,CAAC,CAAC,KAAK,KAAK,aAAa,EAAE,OAAO,IAAI,gBAAgB,CAAC,CAAC,CAAC,CAAA;IAC/D,CAAC;IAED,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 15016, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15021, "column": 0}, "map": {"version":3,"file":"deleteRecord.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/repo/deleteRecord.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoRepoDefs from './defs'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** The handle or DID of the repo (aka, current account). */\n  repo: string\n  /** The NSID of the record collection. */\n  collection: string\n  /** The Record Key. */\n  rkey: string\n  /** Compare and swap with the previous record by CID. */\n  swapRecord?: string\n  /** Compare and swap with the previous commit by CID. */\n  swapCommit?: string\n  [k: string]: unknown\n}\n\nexport interface OutputSchema {\n  commit?: ComAtprotoRepoDefs.CommitMeta\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class InvalidSwapError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'InvalidSwap') return new InvalidSwapError(e)\n  }\n\n  return e\n}\n"],"names":[],"mappings":";;;;;AAkDA,QAAA,UAAA,GAAA,WAMC;AAxDD;;GAEG,CACH,MAAA,kCAAqD;AAyCrD,MAAa,gBAAiB,SAAQ,OAAA,SAAS;IAC7C,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,gBAAA,GAAA,iBAIC;AAED,SAAgB,UAAU,CAAC,CAAM;IAC/B,IAAI,CAAC,YAAY,OAAA,SAAS,EAAE,CAAC;QAC3B,IAAI,CAAC,CAAC,KAAK,KAAK,aAAa,EAAE,OAAO,IAAI,gBAAgB,CAAC,CAAC,CAAC,CAAA;IAC/D,CAAC;IAED,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 15044, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15049, "column": 0}, "map": {"version":3,"file":"getRecord.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/repo/getRecord.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  /** The handle or DID of the repo. */\n  repo: string\n  /** The NSID of the record collection. */\n  collection: string\n  /** The Record Key. */\n  rkey: string\n  /** The CID of the version of the record. If not specified, then return the most recent version. */\n  cid?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  uri: string\n  cid?: string\n  value: {}\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class RecordNotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'RecordNotFound') return new RecordNotFoundError(e)\n  }\n\n  return e\n}\n"],"names":[],"mappings":";;;;;AA8CA,QAAA,UAAA,GAAA,WAMC;AApDD;;GAEG,CACH,MAAA,kCAAqD;AAqCrD,MAAa,mBAAoB,SAAQ,OAAA,SAAS;IAChD,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,mBAAA,GAAA,oBAIC;AAED,SAAgB,UAAU,CAAC,CAAM;IAC/B,IAAI,CAAC,YAAY,OAAA,SAAS,EAAE,CAAC;QAC3B,IAAI,CAAC,CAAC,KAAK,KAAK,gBAAgB,EAAE,OAAO,IAAI,mBAAmB,CAAC,CAAC,CAAC,CAAA;IACrE,CAAC;IAED,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 15072, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15077, "column": 0}, "map": {"version":3,"file":"putRecord.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/repo/putRecord.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoRepoDefs from './defs'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** The handle or DID of the repo (aka, current account). */\n  repo: string\n  /** The NSID of the record collection. */\n  collection: string\n  /** The Record Key. */\n  rkey: string\n  /** Can be set to 'false' to skip Lexicon schema validation of record data, 'true' to require it, or leave unset to validate only for known Lexicons. */\n  validate?: boolean\n  /** The record to write. */\n  record: {}\n  /** Compare and swap with the previous record by CID. WARNING: nullable and optional field; may cause problems with golang implementation */\n  swapRecord?: string | null\n  /** Compare and swap with the previous commit by CID. */\n  swapCommit?: string\n  [k: string]: unknown\n}\n\nexport interface OutputSchema {\n  uri: string\n  cid: string\n  commit?: ComAtprotoRepoDefs.CommitMeta\n  validationStatus?: 'valid' | 'unknown' | (string & {})\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class InvalidSwapError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'InvalidSwap') return new InvalidSwapError(e)\n  }\n\n  return e\n}\n"],"names":[],"mappings":";;;;;AAyDA,QAAA,UAAA,GAAA,WAMC;AA/DD;;GAEG,CACH,MAAA,kCAAqD;AAgDrD,MAAa,gBAAiB,SAAQ,OAAA,SAAS;IAC7C,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,gBAAA,GAAA,iBAIC;AAED,SAAgB,UAAU,CAAC,CAAM;IAC/B,IAAI,CAAC,YAAY,OAAA,SAAS,EAAE,CAAC;QAC3B,IAAI,CAAC,CAAC,KAAK,KAAK,aAAa,EAAE,OAAO,IAAI,gBAAgB,CAAC,CAAC,CAAC,CAAA;IAC/D,CAAC;IAED,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 15100, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15105, "column": 0}, "map": {"version":3,"file":"confirmEmail.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/server/confirmEmail.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  email: string\n  token: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport class AccountNotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class ExpiredTokenError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class InvalidTokenError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class InvalidEmailError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'AccountNotFound') return new AccountNotFoundError(e)\n    if (e.error === 'ExpiredToken') return new ExpiredTokenError(e)\n    if (e.error === 'InvalidToken') return new InvalidTokenError(e)\n    if (e.error === 'InvalidEmail') return new InvalidEmailError(e)\n  }\n\n  return e\n}\n"],"names":[],"mappings":";;;;;AAqDA,QAAA,UAAA,GAAA,WASC;AA9DD;;GAEG,CACH,MAAA,kCAAqD;AA0BrD,MAAa,oBAAqB,SAAQ,OAAA,SAAS;IACjD,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,oBAAA,GAAA,qBAIC;AAED,MAAa,iBAAkB,SAAQ,OAAA,SAAS;IAC9C,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,iBAAA,GAAA,kBAIC;AAED,MAAa,iBAAkB,SAAQ,OAAA,SAAS;IAC9C,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,iBAAA,GAAA,kBAIC;AAED,MAAa,iBAAkB,SAAQ,OAAA,SAAS;IAC9C,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,iBAAA,GAAA,kBAIC;AAED,SAAgB,UAAU,CAAC,CAAM;IAC/B,IAAI,CAAC,YAAY,OAAA,SAAS,EAAE,CAAC;QAC3B,IAAI,CAAC,CAAC,KAAK,KAAK,iBAAiB,EAAE,OAAO,IAAI,oBAAoB,CAAC,CAAC,CAAC,CAAA;QACrE,IAAI,CAAC,CAAC,KAAK,KAAK,cAAc,EAAE,OAAO,IAAI,iBAAiB,CAAC,CAAC,CAAC,CAAA;QAC/D,IAAI,CAAC,CAAC,KAAK,KAAK,cAAc,EAAE,OAAO,IAAI,iBAAiB,CAAC,CAAC,CAAC,CAAA;QAC/D,IAAI,CAAC,CAAC,KAAK,KAAK,cAAc,EAAE,OAAO,IAAI,iBAAiB,CAAC,CAAC,CAAC,CAAA;IACjE,CAAC;IAED,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 15155, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15160, "column": 0}, "map": {"version":3,"file":"createAccount.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/server/createAccount.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  email?: string\n  /** Requested handle for the account. */\n  handle: string\n  /** Pre-existing atproto DID, being imported to a new account. */\n  did?: string\n  inviteCode?: string\n  verificationCode?: string\n  verificationPhone?: string\n  /** Initial account password. May need to meet instance-specific password strength requirements. */\n  password?: string\n  /** DID PLC rotation key (aka, recovery key) to be included in PLC creation operation. */\n  recoveryKey?: string\n  /** A signed DID PLC operation to be submitted as part of importing an existing account to this instance. NOTE: this optional field may be updated when full account migration is implemented. */\n  plcOp?: {}\n  [k: string]: unknown\n}\n\n/** Account login session returned on successful account creation. */\nexport interface OutputSchema {\n  accessJwt: string\n  refreshJwt: string\n  handle: string\n  /** The DID of the new account. */\n  did: string\n  /** Complete DID document. */\n  didDoc?: {}\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class InvalidHandleError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class InvalidPasswordError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class InvalidInviteCodeError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class HandleNotAvailableError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class UnsupportedDomainError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class UnresolvableDidError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class IncompatibleDidDocError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'InvalidHandle') return new InvalidHandleError(e)\n    if (e.error === 'InvalidPassword') return new InvalidPasswordError(e)\n    if (e.error === 'InvalidInviteCode') return new InvalidInviteCodeError(e)\n    if (e.error === 'HandleNotAvailable') return new HandleNotAvailableError(e)\n    if (e.error === 'UnsupportedDomain') return new UnsupportedDomainError(e)\n    if (e.error === 'UnresolvableDid') return new UnresolvableDidError(e)\n    if (e.error === 'IncompatibleDidDoc') return new IncompatibleDidDocError(e)\n  }\n\n  return e\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 15237, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15242, "column": 0}, "map": {"version":3,"file":"createAppPassword.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/server/createAppPassword.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** A short name for the App Password, to help distinguish them. */\n  name: string\n  /** If an app password has 'privileged' access to possibly sensitive account state. Meant for use with trusted clients. */\n  privileged?: boolean\n  [k: string]: unknown\n}\n\nexport type OutputSchema = AppPassword\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class AccountTakedownError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'AccountTakedown') return new AccountTakedownError(e)\n  }\n\n  return e\n}\n\nexport interface AppPassword {\n  name: string\n  password: string\n  createdAt: string\n  privileged?: boolean\n  [k: string]: unknown\n}\n\nexport function isAppPassword(v: unknown): v is AppPassword {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.server.createAppPassword#appPassword'\n  )\n}\n\nexport function validateAppPassword(v: unknown): ValidationResult {\n  return lexicons.validate(\n    'com.atproto.server.createAppPassword#appPassword',\n    v,\n  )\n}\n"],"names":[],"mappings":";;;;;AAwCA,QAAA,UAAA,GAAA,WAMC;AAUD,QAAA,aAAA,GAAA,cAMC;AAED,QAAA,mBAAA,GAAA,oBAKC;AArED;;GAEG,CACH,MAAA,kCAAqD;AAErD,MAAA,qCAAiD;AACjD,MAAA,6CAA+C;AA4B/C,MAAa,oBAAqB,SAAQ,OAAA,SAAS;IACjD,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,oBAAA,GAAA,qBAIC;AAED,SAAgB,UAAU,CAAC,CAAM;IAC/B,IAAI,CAAC,YAAY,OAAA,SAAS,EAAE,CAAC;QAC3B,IAAI,CAAC,CAAC,KAAK,KAAK,iBAAiB,EAAE,OAAO,IAAI,oBAAoB,CAAC,CAAC,CAAC,CAAA;IACvE,CAAC;IAED,OAAO,CAAC,CAAA;AACV,CAAC;AAUD,SAAgB,aAAa,CAAC,CAAU;IACtC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,kDAAkD,CAC/D,CAAA;AACH,CAAC;AAED,SAAgB,mBAAmB,CAAC,CAAU;IAC5C,OAAO,WAAA,QAAQ,CAAC,QAAQ,CACtB,kDAAkD,EAClD,CAAC,CACF,CAAA;AACH,CAAC","ignoreList":[0]}},
    {"offset": {"line": 15275, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15280, "column": 0}, "map": {"version":3,"file":"createSession.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/server/createSession.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** Handle or other identifier supported by the server for the authenticating user. */\n  identifier: string\n  password: string\n  authFactorToken?: string\n  /** When true, instead of throwing error for takendown accounts, a valid response with a narrow scoped token will be returned */\n  allowTakendown?: boolean\n  [k: string]: unknown\n}\n\nexport interface OutputSchema {\n  accessJwt: string\n  refreshJwt: string\n  handle: string\n  did: string\n  didDoc?: {}\n  email?: string\n  emailConfirmed?: boolean\n  emailAuthFactor?: boolean\n  active?: boolean\n  /** If active=false, this optional field indicates a possible reason for why the account is not active. If active=false and no status is supplied, then the host makes no claim for why the repository is no longer being hosted. */\n  status?: 'takendown' | 'suspended' | 'deactivated' | (string & {})\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class AccountTakedownError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class AuthFactorTokenRequiredError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'AccountTakedown') return new AccountTakedownError(e)\n    if (e.error === 'AuthFactorTokenRequired')\n      return new AuthFactorTokenRequiredError(e)\n  }\n\n  return e\n}\n"],"names":[],"mappings":";;;;;AA6DA,QAAA,UAAA,GAAA,WAQC;AArED;;GAEG,CACH,MAAA,kCAAqD;AA8CrD,MAAa,oBAAqB,SAAQ,OAAA,SAAS;IACjD,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,oBAAA,GAAA,qBAIC;AAED,MAAa,4BAA6B,SAAQ,OAAA,SAAS;IACzD,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,4BAAA,GAAA,6BAIC;AAED,SAAgB,UAAU,CAAC,CAAM;IAC/B,IAAI,CAAC,YAAY,OAAA,SAAS,EAAE,CAAC;QAC3B,IAAI,CAAC,CAAC,KAAK,KAAK,iBAAiB,EAAE,OAAO,IAAI,oBAAoB,CAAC,CAAC,CAAC,CAAA;QACrE,IAAI,CAAC,CAAC,KAAK,KAAK,yBAAyB,EACvC,OAAO,IAAI,4BAA4B,CAAC,CAAC,CAAC,CAAA;IAC9C,CAAC;IAED,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 15312, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15317, "column": 0}, "map": {"version":3,"file":"deleteAccount.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/server/deleteAccount.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  did: string\n  password: string\n  token: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport class ExpiredTokenError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class InvalidTokenError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'ExpiredToken') return new ExpiredTokenError(e)\n    if (e.error === 'InvalidToken') return new InvalidTokenError(e)\n  }\n\n  return e\n}\n"],"names":[],"mappings":";;;;;AA0CA,QAAA,UAAA,GAAA,WAOC;AAjDD;;GAEG,CACH,MAAA,kCAAqD;AA2BrD,MAAa,iBAAkB,SAAQ,OAAA,SAAS;IAC9C,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,iBAAA,GAAA,kBAIC;AAED,MAAa,iBAAkB,SAAQ,OAAA,SAAS;IAC9C,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,iBAAA,GAAA,kBAIC;AAED,SAAgB,UAAU,CAAC,CAAM;IAC/B,IAAI,CAAC,YAAY,OAAA,SAAS,EAAE,CAAC;QAC3B,IAAI,CAAC,CAAC,KAAK,KAAK,cAAc,EAAE,OAAO,IAAI,iBAAiB,CAAC,CAAC,CAAC,CAAA;QAC/D,IAAI,CAAC,CAAC,KAAK,KAAK,cAAc,EAAE,OAAO,IAAI,iBAAiB,CAAC,CAAC,CAAC,CAAA;IACjE,CAAC;IAED,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 15349, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15354, "column": 0}, "map": {"version":3,"file":"getAccountInviteCodes.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/server/getAccountInviteCodes.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoServerDefs from './defs'\n\nexport interface QueryParams {\n  includeUsed?: boolean\n  /** Controls whether any new 'earned' but not 'created' invites should be created. */\n  createAvailable?: boolean\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  codes: ComAtprotoServerDefs.InviteCode[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class DuplicateCreateError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'DuplicateCreate') return new DuplicateCreateError(e)\n  }\n\n  return e\n}\n"],"names":[],"mappings":";;;;;AAwCA,QAAA,UAAA,GAAA,WAMC;AA9CD;;GAEG,CACH,MAAA,kCAAqD;AA+BrD,MAAa,oBAAqB,SAAQ,OAAA,SAAS;IACjD,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,oBAAA,GAAA,qBAIC;AAED,SAAgB,UAAU,CAAC,CAAM;IAC/B,IAAI,CAAC,YAAY,OAAA,SAAS,EAAE,CAAC;QAC3B,IAAI,CAAC,CAAC,KAAK,KAAK,iBAAiB,EAAE,OAAO,IAAI,oBAAoB,CAAC,CAAC,CAAC,CAAA;IACvE,CAAC;IAED,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 15377, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15382, "column": 0}, "map": {"version":3,"file":"getServiceAuth.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/server/getServiceAuth.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  /** The DID of the service that the token will be used to authenticate with */\n  aud: string\n  /** The time in Unix Epoch seconds that the JWT expires. Defaults to 60 seconds in the future. The service may enforce certain time bounds on tokens depending on the requested scope. */\n  exp?: number\n  /** Lexicon (XRPC) method to bind the requested token to */\n  lxm?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  token: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class BadExpirationError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'BadExpiration') return new BadExpirationError(e)\n  }\n\n  return e\n}\n"],"names":[],"mappings":";;;;;AA0CA,QAAA,UAAA,GAAA,WAMC;AAhDD;;GAEG,CACH,MAAA,kCAAqD;AAiCrD,MAAa,kBAAmB,SAAQ,OAAA,SAAS;IAC/C,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,kBAAA,GAAA,mBAIC;AAED,SAAgB,UAAU,CAAC,CAAM;IAC/B,IAAI,CAAC,YAAY,OAAA,SAAS,EAAE,CAAC;QAC3B,IAAI,CAAC,CAAC,KAAK,KAAK,eAAe,EAAE,OAAO,IAAI,kBAAkB,CAAC,CAAC,CAAC,CAAA;IACnE,CAAC;IAED,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 15405, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15410, "column": 0}, "map": {"version":3,"file":"listAppPasswords.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/server/listAppPasswords.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  passwords: AppPassword[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class AccountTakedownError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'AccountTakedown') return new AccountTakedownError(e)\n  }\n\n  return e\n}\n\nexport interface AppPassword {\n  name: string\n  createdAt: string\n  privileged?: boolean\n  [k: string]: unknown\n}\n\nexport function isAppPassword(v: unknown): v is AppPassword {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.server.listAppPasswords#appPassword'\n  )\n}\n\nexport function validateAppPassword(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.server.listAppPasswords#appPassword', v)\n}\n"],"names":[],"mappings":";;;;;AAmCA,QAAA,UAAA,GAAA,WAMC;AASD,QAAA,aAAA,GAAA,cAMC;AAED,QAAA,mBAAA,GAAA,oBAEC;AA5DD;;GAEG,CACH,MAAA,kCAAqD;AAErD,MAAA,qCAAiD;AACjD,MAAA,6CAA+C;AAuB/C,MAAa,oBAAqB,SAAQ,OAAA,SAAS;IACjD,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,oBAAA,GAAA,qBAIC;AAED,SAAgB,UAAU,CAAC,CAAM;IAC/B,IAAI,CAAC,YAAY,OAAA,SAAS,EAAE,CAAC;QAC3B,IAAI,CAAC,CAAC,KAAK,KAAK,iBAAiB,EAAE,OAAO,IAAI,oBAAoB,CAAC,CAAC,CAAC,CAAA;IACvE,CAAC;IAED,OAAO,CAAC,CAAA;AACV,CAAC;AASD,SAAgB,aAAa,CAAC,CAAU;IACtC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,iDAAiD,CAC9D,CAAA;AACH,CAAC;AAED,SAAgB,mBAAmB,CAAC,CAAU;IAC5C,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,iDAAiD,EAAE,CAAC,CAAC,CAAA;AAChF,CAAC","ignoreList":[0]}},
    {"offset": {"line": 15443, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15448, "column": 0}, "map": {"version":3,"file":"refreshSession.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/server/refreshSession.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  accessJwt: string\n  refreshJwt: string\n  handle: string\n  did: string\n  didDoc?: {}\n  active?: boolean\n  /** Hosting status of the account. If not specified, then assume 'active'. */\n  status?: 'takendown' | 'suspended' | 'deactivated' | (string & {})\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class AccountTakedownError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'AccountTakedown') return new AccountTakedownError(e)\n  }\n\n  return e\n}\n"],"names":[],"mappings":";;;;;AA2CA,QAAA,UAAA,GAAA,WAMC;AAjDD;;GAEG,CACH,MAAA,kCAAqD;AAkCrD,MAAa,oBAAqB,SAAQ,OAAA,SAAS;IACjD,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,oBAAA,GAAA,qBAIC;AAED,SAAgB,UAAU,CAAC,CAAM;IAC/B,IAAI,CAAC,YAAY,OAAA,SAAS,EAAE,CAAC;QAC3B,IAAI,CAAC,CAAC,KAAK,KAAK,iBAAiB,EAAE,OAAO,IAAI,oBAAoB,CAAC,CAAC,CAAC,CAAA;IACvE,CAAC;IAED,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 15471, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15476, "column": 0}, "map": {"version":3,"file":"resetPassword.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/server/resetPassword.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  token: string\n  password: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport class ExpiredTokenError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class InvalidTokenError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'ExpiredToken') return new ExpiredTokenError(e)\n    if (e.error === 'InvalidToken') return new InvalidTokenError(e)\n  }\n\n  return e\n}\n"],"names":[],"mappings":";;;;;AAyCA,QAAA,UAAA,GAAA,WAOC;AAhDD;;GAEG,CACH,MAAA,kCAAqD;AA0BrD,MAAa,iBAAkB,SAAQ,OAAA,SAAS;IAC9C,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,iBAAA,GAAA,kBAIC;AAED,MAAa,iBAAkB,SAAQ,OAAA,SAAS;IAC9C,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,iBAAA,GAAA,kBAIC;AAED,SAAgB,UAAU,CAAC,CAAM;IAC/B,IAAI,CAAC,YAAY,OAAA,SAAS,EAAE,CAAC;QAC3B,IAAI,CAAC,CAAC,KAAK,KAAK,cAAc,EAAE,OAAO,IAAI,iBAAiB,CAAC,CAAC,CAAC,CAAA;QAC/D,IAAI,CAAC,CAAC,KAAK,KAAK,cAAc,EAAE,OAAO,IAAI,iBAAiB,CAAC,CAAC,CAAC,CAAA;IACjE,CAAC;IAED,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 15508, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15513, "column": 0}, "map": {"version":3,"file":"updateEmail.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/server/updateEmail.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  email: string\n  emailAuthFactor?: boolean\n  /** Requires a token from com.atproto.sever.requestEmailUpdate if the account's email has been confirmed. */\n  token?: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport class ExpiredTokenError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class InvalidTokenError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class TokenRequiredError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'ExpiredToken') return new ExpiredTokenError(e)\n    if (e.error === 'InvalidToken') return new InvalidTokenError(e)\n    if (e.error === 'TokenRequired') return new TokenRequiredError(e)\n  }\n\n  return e\n}\n"],"names":[],"mappings":";;;;;AAiDA,QAAA,UAAA,GAAA,WAQC;AAzDD;;GAEG,CACH,MAAA,kCAAqD;AA4BrD,MAAa,iBAAkB,SAAQ,OAAA,SAAS;IAC9C,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,iBAAA,GAAA,kBAIC;AAED,MAAa,iBAAkB,SAAQ,OAAA,SAAS;IAC9C,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,iBAAA,GAAA,kBAIC;AAED,MAAa,kBAAmB,SAAQ,OAAA,SAAS;IAC/C,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,kBAAA,GAAA,mBAIC;AAED,SAAgB,UAAU,CAAC,CAAM;IAC/B,IAAI,CAAC,YAAY,OAAA,SAAS,EAAE,CAAC;QAC3B,IAAI,CAAC,CAAC,KAAK,KAAK,cAAc,EAAE,OAAO,IAAI,iBAAiB,CAAC,CAAC,CAAC,CAAA;QAC/D,IAAI,CAAC,CAAC,KAAK,KAAK,cAAc,EAAE,OAAO,IAAI,iBAAiB,CAAC,CAAC,CAAC,CAAA;QAC/D,IAAI,CAAC,CAAC,KAAK,KAAK,eAAe,EAAE,OAAO,IAAI,kBAAkB,CAAC,CAAC,CAAC,CAAA;IACnE,CAAC;IAED,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 15554, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15559, "column": 0}, "map": {"version":3,"file":"getBlob.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/sync/getBlob.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  /** The DID of the account. */\n  did: string\n  /** The CID of the blob to fetch */\n  cid: string\n}\n\nexport type InputSchema = undefined\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: Uint8Array\n}\n\nexport class BlobNotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class RepoNotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class RepoTakendownError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class RepoSuspendedError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class RepoDeactivatedError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'BlobNotFound') return new BlobNotFoundError(e)\n    if (e.error === 'RepoNotFound') return new RepoNotFoundError(e)\n    if (e.error === 'RepoTakendown') return new RepoTakendownError(e)\n    if (e.error === 'RepoSuspended') return new RepoSuspendedError(e)\n    if (e.error === 'RepoDeactivated') return new RepoDeactivatedError(e)\n  }\n\n  return e\n}\n"],"names":[],"mappings":";;;;;AA2DA,QAAA,UAAA,GAAA,WAUC;AArED;;GAEG,CACH,MAAA,kCAAqD;AA0BrD,MAAa,iBAAkB,SAAQ,OAAA,SAAS;IAC9C,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,iBAAA,GAAA,kBAIC;AAED,MAAa,iBAAkB,SAAQ,OAAA,SAAS;IAC9C,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,iBAAA,GAAA,kBAIC;AAED,MAAa,kBAAmB,SAAQ,OAAA,SAAS;IAC/C,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,kBAAA,GAAA,mBAIC;AAED,MAAa,kBAAmB,SAAQ,OAAA,SAAS;IAC/C,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,kBAAA,GAAA,mBAIC;AAED,MAAa,oBAAqB,SAAQ,OAAA,SAAS;IACjD,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,oBAAA,GAAA,qBAIC;AAED,SAAgB,UAAU,CAAC,CAAM;IAC/B,IAAI,CAAC,YAAY,OAAA,SAAS,EAAE,CAAC;QAC3B,IAAI,CAAC,CAAC,KAAK,KAAK,cAAc,EAAE,OAAO,IAAI,iBAAiB,CAAC,CAAC,CAAC,CAAA;QAC/D,IAAI,CAAC,CAAC,KAAK,KAAK,cAAc,EAAE,OAAO,IAAI,iBAAiB,CAAC,CAAC,CAAC,CAAA;QAC/D,IAAI,CAAC,CAAC,KAAK,KAAK,eAAe,EAAE,OAAO,IAAI,kBAAkB,CAAC,CAAC,CAAC,CAAA;QACjE,IAAI,CAAC,CAAC,KAAK,KAAK,eAAe,EAAE,OAAO,IAAI,kBAAkB,CAAC,CAAC,CAAC,CAAA;QACjE,IAAI,CAAC,CAAC,KAAK,KAAK,iBAAiB,EAAE,OAAO,IAAI,oBAAoB,CAAC,CAAC,CAAC,CAAA;IACvE,CAAC;IAED,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 15618, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15623, "column": 0}, "map": {"version":3,"file":"getBlocks.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/sync/getBlocks.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  /** The DID of the repo. */\n  did: string\n  cids: string[]\n}\n\nexport type InputSchema = undefined\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: Uint8Array\n}\n\nexport class BlockNotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class RepoNotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class RepoTakendownError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class RepoSuspendedError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class RepoDeactivatedError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'BlockNotFound') return new BlockNotFoundError(e)\n    if (e.error === 'RepoNotFound') return new RepoNotFoundError(e)\n    if (e.error === 'RepoTakendown') return new RepoTakendownError(e)\n    if (e.error === 'RepoSuspended') return new RepoSuspendedError(e)\n    if (e.error === 'RepoDeactivated') return new RepoDeactivatedError(e)\n  }\n\n  return e\n}\n"],"names":[],"mappings":";;;;;AA0DA,QAAA,UAAA,GAAA,WAUC;AApED;;GAEG,CACH,MAAA,kCAAqD;AAyBrD,MAAa,kBAAmB,SAAQ,OAAA,SAAS;IAC/C,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,kBAAA,GAAA,mBAIC;AAED,MAAa,iBAAkB,SAAQ,OAAA,SAAS;IAC9C,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,iBAAA,GAAA,kBAIC;AAED,MAAa,kBAAmB,SAAQ,OAAA,SAAS;IAC/C,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,kBAAA,GAAA,mBAIC;AAED,MAAa,kBAAmB,SAAQ,OAAA,SAAS;IAC/C,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,kBAAA,GAAA,mBAIC;AAED,MAAa,oBAAqB,SAAQ,OAAA,SAAS;IACjD,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,oBAAA,GAAA,qBAIC;AAED,SAAgB,UAAU,CAAC,CAAM;IAC/B,IAAI,CAAC,YAAY,OAAA,SAAS,EAAE,CAAC;QAC3B,IAAI,CAAC,CAAC,KAAK,KAAK,eAAe,EAAE,OAAO,IAAI,kBAAkB,CAAC,CAAC,CAAC,CAAA;QACjE,IAAI,CAAC,CAAC,KAAK,KAAK,cAAc,EAAE,OAAO,IAAI,iBAAiB,CAAC,CAAC,CAAC,CAAA;QAC/D,IAAI,CAAC,CAAC,KAAK,KAAK,eAAe,EAAE,OAAO,IAAI,kBAAkB,CAAC,CAAC,CAAC,CAAA;QACjE,IAAI,CAAC,CAAC,KAAK,KAAK,eAAe,EAAE,OAAO,IAAI,kBAAkB,CAAC,CAAC,CAAC,CAAA;QACjE,IAAI,CAAC,CAAC,KAAK,KAAK,iBAAiB,EAAE,OAAO,IAAI,oBAAoB,CAAC,CAAC,CAAC,CAAA;IACvE,CAAC;IAED,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 15682, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15687, "column": 0}, "map": {"version":3,"file":"getHead.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/sync/getHead.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  /** The DID of the repo. */\n  did: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  root: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class HeadNotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'HeadNotFound') return new HeadNotFoundError(e)\n  }\n\n  return e\n}\n"],"names":[],"mappings":";;;;;AAsCA,QAAA,UAAA,GAAA,WAMC;AA5CD;;GAEG,CACH,MAAA,kCAAqD;AA6BrD,MAAa,iBAAkB,SAAQ,OAAA,SAAS;IAC9C,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,iBAAA,GAAA,kBAIC;AAED,SAAgB,UAAU,CAAC,CAAM;IAC/B,IAAI,CAAC,YAAY,OAAA,SAAS,EAAE,CAAC;QAC3B,IAAI,CAAC,CAAC,KAAK,KAAK,cAAc,EAAE,OAAO,IAAI,iBAAiB,CAAC,CAAC,CAAC,CAAA;IACjE,CAAC;IAED,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 15710, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15715, "column": 0}, "map": {"version":3,"file":"getLatestCommit.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/sync/getLatestCommit.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  /** The DID of the repo. */\n  did: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cid: string\n  rev: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class RepoNotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class RepoTakendownError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class RepoSuspendedError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class RepoDeactivatedError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'RepoNotFound') return new RepoNotFoundError(e)\n    if (e.error === 'RepoTakendown') return new RepoTakendownError(e)\n    if (e.error === 'RepoSuspended') return new RepoSuspendedError(e)\n    if (e.error === 'RepoDeactivated') return new RepoDeactivatedError(e)\n  }\n\n  return e\n}\n"],"names":[],"mappings":";;;;;AAyDA,QAAA,UAAA,GAAA,WASC;AAlED;;GAEG,CACH,MAAA,kCAAqD;AA8BrD,MAAa,iBAAkB,SAAQ,OAAA,SAAS;IAC9C,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,iBAAA,GAAA,kBAIC;AAED,MAAa,kBAAmB,SAAQ,OAAA,SAAS;IAC/C,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,kBAAA,GAAA,mBAIC;AAED,MAAa,kBAAmB,SAAQ,OAAA,SAAS;IAC/C,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,kBAAA,GAAA,mBAIC;AAED,MAAa,oBAAqB,SAAQ,OAAA,SAAS;IACjD,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,oBAAA,GAAA,qBAIC;AAED,SAAgB,UAAU,CAAC,CAAM;IAC/B,IAAI,CAAC,YAAY,OAAA,SAAS,EAAE,CAAC;QAC3B,IAAI,CAAC,CAAC,KAAK,KAAK,cAAc,EAAE,OAAO,IAAI,iBAAiB,CAAC,CAAC,CAAC,CAAA;QAC/D,IAAI,CAAC,CAAC,KAAK,KAAK,eAAe,EAAE,OAAO,IAAI,kBAAkB,CAAC,CAAC,CAAC,CAAA;QACjE,IAAI,CAAC,CAAC,KAAK,KAAK,eAAe,EAAE,OAAO,IAAI,kBAAkB,CAAC,CAAC,CAAC,CAAA;QACjE,IAAI,CAAC,CAAC,KAAK,KAAK,iBAAiB,EAAE,OAAO,IAAI,oBAAoB,CAAC,CAAC,CAAC,CAAA;IACvE,CAAC;IAED,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 15765, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15770, "column": 0}, "map": {"version":3,"file":"getRecord.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/sync/getRecord.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  /** The DID of the repo. */\n  did: string\n  collection: string\n  /** Record Key */\n  rkey: string\n  /** DEPRECATED: referenced a repo commit by CID, and retrieved record as of that commit */\n  commit?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: Uint8Array\n}\n\nexport class RecordNotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class RepoNotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class RepoTakendownError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class RepoSuspendedError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class RepoDeactivatedError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'RecordNotFound') return new RecordNotFoundError(e)\n    if (e.error === 'RepoNotFound') return new RepoNotFoundError(e)\n    if (e.error === 'RepoTakendown') return new RepoTakendownError(e)\n    if (e.error === 'RepoSuspended') return new RepoSuspendedError(e)\n    if (e.error === 'RepoDeactivated') return new RepoDeactivatedError(e)\n  }\n\n  return e\n}\n"],"names":[],"mappings":";;;;;AA8DA,QAAA,UAAA,GAAA,WAUC;AAxED;;GAEG,CACH,MAAA,kCAAqD;AA6BrD,MAAa,mBAAoB,SAAQ,OAAA,SAAS;IAChD,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,mBAAA,GAAA,oBAIC;AAED,MAAa,iBAAkB,SAAQ,OAAA,SAAS;IAC9C,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,iBAAA,GAAA,kBAIC;AAED,MAAa,kBAAmB,SAAQ,OAAA,SAAS;IAC/C,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,kBAAA,GAAA,mBAIC;AAED,MAAa,kBAAmB,SAAQ,OAAA,SAAS;IAC/C,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,kBAAA,GAAA,mBAIC;AAED,MAAa,oBAAqB,SAAQ,OAAA,SAAS;IACjD,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,oBAAA,GAAA,qBAIC;AAED,SAAgB,UAAU,CAAC,CAAM;IAC/B,IAAI,CAAC,YAAY,OAAA,SAAS,EAAE,CAAC;QAC3B,IAAI,CAAC,CAAC,KAAK,KAAK,gBAAgB,EAAE,OAAO,IAAI,mBAAmB,CAAC,CAAC,CAAC,CAAA;QACnE,IAAI,CAAC,CAAC,KAAK,KAAK,cAAc,EAAE,OAAO,IAAI,iBAAiB,CAAC,CAAC,CAAC,CAAA;QAC/D,IAAI,CAAC,CAAC,KAAK,KAAK,eAAe,EAAE,OAAO,IAAI,kBAAkB,CAAC,CAAC,CAAC,CAAA;QACjE,IAAI,CAAC,CAAC,KAAK,KAAK,eAAe,EAAE,OAAO,IAAI,kBAAkB,CAAC,CAAC,CAAC,CAAA;QACjE,IAAI,CAAC,CAAC,KAAK,KAAK,iBAAiB,EAAE,OAAO,IAAI,oBAAoB,CAAC,CAAC,CAAC,CAAA;IACvE,CAAC;IAED,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 15829, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15834, "column": 0}, "map": {"version":3,"file":"getRepo.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/sync/getRepo.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  /** The DID of the repo. */\n  did: string\n  /** The revision ('rev') of the repo to create a diff from. */\n  since?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: Uint8Array\n}\n\nexport class RepoNotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class RepoTakendownError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class RepoSuspendedError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class RepoDeactivatedError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'RepoNotFound') return new RepoNotFoundError(e)\n    if (e.error === 'RepoTakendown') return new RepoTakendownError(e)\n    if (e.error === 'RepoSuspended') return new RepoSuspendedError(e)\n    if (e.error === 'RepoDeactivated') return new RepoDeactivatedError(e)\n  }\n\n  return e\n}\n"],"names":[],"mappings":";;;;;AAqDA,QAAA,UAAA,GAAA,WASC;AA9DD;;GAEG,CACH,MAAA,kCAAqD;AA0BrD,MAAa,iBAAkB,SAAQ,OAAA,SAAS;IAC9C,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,iBAAA,GAAA,kBAIC;AAED,MAAa,kBAAmB,SAAQ,OAAA,SAAS;IAC/C,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,kBAAA,GAAA,mBAIC;AAED,MAAa,kBAAmB,SAAQ,OAAA,SAAS;IAC/C,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,kBAAA,GAAA,mBAIC;AAED,MAAa,oBAAqB,SAAQ,OAAA,SAAS;IACjD,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,oBAAA,GAAA,qBAIC;AAED,SAAgB,UAAU,CAAC,CAAM;IAC/B,IAAI,CAAC,YAAY,OAAA,SAAS,EAAE,CAAC;QAC3B,IAAI,CAAC,CAAC,KAAK,KAAK,cAAc,EAAE,OAAO,IAAI,iBAAiB,CAAC,CAAC,CAAC,CAAA;QAC/D,IAAI,CAAC,CAAC,KAAK,KAAK,eAAe,EAAE,OAAO,IAAI,kBAAkB,CAAC,CAAC,CAAC,CAAA;QACjE,IAAI,CAAC,CAAC,KAAK,KAAK,eAAe,EAAE,OAAO,IAAI,kBAAkB,CAAC,CAAC,CAAC,CAAA;QACjE,IAAI,CAAC,CAAC,KAAK,KAAK,iBAAiB,EAAE,OAAO,IAAI,oBAAoB,CAAC,CAAC,CAAC,CAAA;IACvE,CAAC;IAED,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 15884, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15889, "column": 0}, "map": {"version":3,"file":"getRepoStatus.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/sync/getRepoStatus.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  /** The DID of the repo. */\n  did: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  did: string\n  active: boolean\n  /** If active=false, this optional field indicates a possible reason for why the account is not active. If active=false and no status is supplied, then the host makes no claim for why the repository is no longer being hosted. */\n  status?: 'takendown' | 'suspended' | 'deactivated' | (string & {})\n  /** Optional field, the current rev of the repo, if active=true */\n  rev?: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class RepoNotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'RepoNotFound') return new RepoNotFoundError(e)\n  }\n\n  return e\n}\n"],"names":[],"mappings":";;;;;AA2CA,QAAA,UAAA,GAAA,WAMC;AAjDD;;GAEG,CACH,MAAA,kCAAqD;AAkCrD,MAAa,iBAAkB,SAAQ,OAAA,SAAS;IAC9C,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,iBAAA,GAAA,kBAIC;AAED,SAAgB,UAAU,CAAC,CAAM;IAC/B,IAAI,CAAC,YAAY,OAAA,SAAS,EAAE,CAAC;QAC3B,IAAI,CAAC,CAAC,KAAK,KAAK,cAAc,EAAE,OAAO,IAAI,iBAAiB,CAAC,CAAC,CAAC,CAAA;IACjE,CAAC;IAED,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 15912, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15917, "column": 0}, "map": {"version":3,"file":"listBlobs.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/sync/listBlobs.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  /** The DID of the repo. */\n  did: string\n  /** Optional revision of the repo to list blobs since. */\n  since?: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  cids: string[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class RepoNotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class RepoTakendownError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class RepoSuspendedError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class RepoDeactivatedError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'RepoNotFound') return new RepoNotFoundError(e)\n    if (e.error === 'RepoTakendown') return new RepoTakendownError(e)\n    if (e.error === 'RepoSuspended') return new RepoSuspendedError(e)\n    if (e.error === 'RepoDeactivated') return new RepoDeactivatedError(e)\n  }\n\n  return e\n}\n"],"names":[],"mappings":";;;;;AA6DA,QAAA,UAAA,GAAA,WASC;AAtED;;GAEG,CACH,MAAA,kCAAqD;AAkCrD,MAAa,iBAAkB,SAAQ,OAAA,SAAS;IAC9C,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,iBAAA,GAAA,kBAIC;AAED,MAAa,kBAAmB,SAAQ,OAAA,SAAS;IAC/C,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,kBAAA,GAAA,mBAIC;AAED,MAAa,kBAAmB,SAAQ,OAAA,SAAS;IAC/C,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,kBAAA,GAAA,mBAIC;AAED,MAAa,oBAAqB,SAAQ,OAAA,SAAS;IACjD,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,oBAAA,GAAA,qBAIC;AAED,SAAgB,UAAU,CAAC,CAAM;IAC/B,IAAI,CAAC,YAAY,OAAA,SAAS,EAAE,CAAC;QAC3B,IAAI,CAAC,CAAC,KAAK,KAAK,cAAc,EAAE,OAAO,IAAI,iBAAiB,CAAC,CAAC,CAAC,CAAA;QAC/D,IAAI,CAAC,CAAC,KAAK,KAAK,eAAe,EAAE,OAAO,IAAI,kBAAkB,CAAC,CAAC,CAAC,CAAA;QACjE,IAAI,CAAC,CAAC,KAAK,KAAK,eAAe,EAAE,OAAO,IAAI,kBAAkB,CAAC,CAAC,CAAC,CAAA;QACjE,IAAI,CAAC,CAAC,KAAK,KAAK,iBAAiB,EAAE,OAAO,IAAI,oBAAoB,CAAC,CAAC,CAAC,CAAA;IACvE,CAAC;IAED,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 15967, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15972, "column": 0}, "map": {"version":3,"file":"getActorLikes.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/feed/getActorLikes.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from './defs'\n\nexport interface QueryParams {\n  actor: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  feed: AppBskyFeedDefs.FeedViewPost[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class BlockedActorError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class BlockedByActorError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'BlockedActor') return new BlockedActorError(e)\n    if (e.error === 'BlockedByActor') return new BlockedByActorError(e)\n  }\n\n  return e\n}\n"],"names":[],"mappings":";;;;;AA+CA,QAAA,UAAA,GAAA,WAOC;AAtDD;;GAEG,CACH,MAAA,kCAAqD;AAgCrD,MAAa,iBAAkB,SAAQ,OAAA,SAAS;IAC9C,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,iBAAA,GAAA,kBAIC;AAED,MAAa,mBAAoB,SAAQ,OAAA,SAAS;IAChD,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,mBAAA,GAAA,oBAIC;AAED,SAAgB,UAAU,CAAC,CAAM;IAC/B,IAAI,CAAC,YAAY,OAAA,SAAS,EAAE,CAAC;QAC3B,IAAI,CAAC,CAAC,KAAK,KAAK,cAAc,EAAE,OAAO,IAAI,iBAAiB,CAAC,CAAC,CAAC,CAAA;QAC/D,IAAI,CAAC,CAAC,KAAK,KAAK,gBAAgB,EAAE,OAAO,IAAI,mBAAmB,CAAC,CAAC,CAAC,CAAA;IACrE,CAAC;IAED,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 16004, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16009, "column": 0}, "map": {"version":3,"file":"getAuthorFeed.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/feed/getAuthorFeed.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from './defs'\n\nexport interface QueryParams {\n  actor: string\n  limit?: number\n  cursor?: string\n  /** Combinations of post/repost types to include in response. */\n  filter?:\n    | 'posts_with_replies'\n    | 'posts_no_replies'\n    | 'posts_with_media'\n    | 'posts_and_author_threads'\n    | (string & {})\n  includePins?: boolean\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  feed: AppBskyFeedDefs.FeedViewPost[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class BlockedActorError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class BlockedByActorError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'BlockedActor') return new BlockedActorError(e)\n    if (e.error === 'BlockedByActor') return new BlockedByActorError(e)\n  }\n\n  return e\n}\n"],"names":[],"mappings":";;;;;AAuDA,QAAA,UAAA,GAAA,WAOC;AA9DD;;GAEG,CACH,MAAA,kCAAqD;AAwCrD,MAAa,iBAAkB,SAAQ,OAAA,SAAS;IAC9C,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,iBAAA,GAAA,kBAIC;AAED,MAAa,mBAAoB,SAAQ,OAAA,SAAS;IAChD,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,mBAAA,GAAA,oBAIC;AAED,SAAgB,UAAU,CAAC,CAAM;IAC/B,IAAI,CAAC,YAAY,OAAA,SAAS,EAAE,CAAC;QAC3B,IAAI,CAAC,CAAC,KAAK,KAAK,cAAc,EAAE,OAAO,IAAI,iBAAiB,CAAC,CAAC,CAAC,CAAA;QAC/D,IAAI,CAAC,CAAC,KAAK,KAAK,gBAAgB,EAAE,OAAO,IAAI,mBAAmB,CAAC,CAAC,CAAC,CAAA;IACrE,CAAC;IAED,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 16041, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16046, "column": 0}, "map": {"version":3,"file":"getFeed.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/feed/getFeed.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from './defs'\n\nexport interface QueryParams {\n  feed: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  feed: AppBskyFeedDefs.FeedViewPost[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class UnknownFeedError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'UnknownFeed') return new UnknownFeedError(e)\n  }\n\n  return e\n}\n"],"names":[],"mappings":";;;;;AAyCA,QAAA,UAAA,GAAA,WAMC;AA/CD;;GAEG,CACH,MAAA,kCAAqD;AAgCrD,MAAa,gBAAiB,SAAQ,OAAA,SAAS;IAC7C,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,gBAAA,GAAA,iBAIC;AAED,SAAgB,UAAU,CAAC,CAAM;IAC/B,IAAI,CAAC,YAAY,OAAA,SAAS,EAAE,CAAC;QAC3B,IAAI,CAAC,CAAC,KAAK,KAAK,aAAa,EAAE,OAAO,IAAI,gBAAgB,CAAC,CAAC,CAAC,CAAA;IAC/D,CAAC;IAED,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 16069, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16074, "column": 0}, "map": {"version":3,"file":"getFeedSkeleton.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/feed/getFeedSkeleton.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from './defs'\n\nexport interface QueryParams {\n  /** Reference to feed generator record describing the specific feed being requested. */\n  feed: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  feed: AppBskyFeedDefs.SkeletonFeedPost[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class UnknownFeedError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'UnknownFeed') return new UnknownFeedError(e)\n  }\n\n  return e\n}\n"],"names":[],"mappings":";;;;;AA0CA,QAAA,UAAA,GAAA,WAMC;AAhDD;;GAEG,CACH,MAAA,kCAAqD;AAiCrD,MAAa,gBAAiB,SAAQ,OAAA,SAAS;IAC7C,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,gBAAA,GAAA,iBAIC;AAED,SAAgB,UAAU,CAAC,CAAM;IAC/B,IAAI,CAAC,YAAY,OAAA,SAAS,EAAE,CAAC;QAC3B,IAAI,CAAC,CAAC,KAAK,KAAK,aAAa,EAAE,OAAO,IAAI,gBAAgB,CAAC,CAAC,CAAC,CAAA;IAC/D,CAAC;IAED,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 16097, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16102, "column": 0}, "map": {"version":3,"file":"getListFeed.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/feed/getListFeed.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from './defs'\n\nexport interface QueryParams {\n  /** Reference (AT-URI) to the list record. */\n  list: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  feed: AppBskyFeedDefs.FeedViewPost[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class UnknownListError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'UnknownList') return new UnknownListError(e)\n  }\n\n  return e\n}\n"],"names":[],"mappings":";;;;;AA0CA,QAAA,UAAA,GAAA,WAMC;AAhDD;;GAEG,CACH,MAAA,kCAAqD;AAiCrD,MAAa,gBAAiB,SAAQ,OAAA,SAAS;IAC7C,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,gBAAA,GAAA,iBAIC;AAED,SAAgB,UAAU,CAAC,CAAM;IAC/B,IAAI,CAAC,YAAY,OAAA,SAAS,EAAE,CAAC;QAC3B,IAAI,CAAC,CAAC,KAAK,KAAK,aAAa,EAAE,OAAO,IAAI,gBAAgB,CAAC,CAAC,CAAC,CAAA;IAC/D,CAAC;IAED,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 16125, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16130, "column": 0}, "map": {"version":3,"file":"getPostThread.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/feed/getPostThread.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from './defs'\n\nexport interface QueryParams {\n  /** Reference (AT-URI) to post record. */\n  uri: string\n  /** How many levels of reply depth should be included in response. */\n  depth?: number\n  /** How many levels of parent (and grandparent, etc) post to include. */\n  parentHeight?: number\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  thread:\n    | AppBskyFeedDefs.ThreadViewPost\n    | AppBskyFeedDefs.NotFoundPost\n    | AppBskyFeedDefs.BlockedPost\n    | { $type: string; [k: string]: unknown }\n  threadgate?: AppBskyFeedDefs.ThreadgateView\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class NotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'NotFound') return new NotFoundError(e)\n  }\n\n  return e\n}\n"],"names":[],"mappings":";;;;;AAgDA,QAAA,UAAA,GAAA,WAMC;AAtDD;;GAEG,CACH,MAAA,kCAAqD;AAuCrD,MAAa,aAAc,SAAQ,OAAA,SAAS;IAC1C,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,aAAA,GAAA,cAIC;AAED,SAAgB,UAAU,CAAC,CAAM;IAC/B,IAAI,CAAC,YAAY,OAAA,SAAS,EAAE,CAAC;QAC3B,IAAI,CAAC,CAAC,KAAK,KAAK,UAAU,EAAE,OAAO,IAAI,aAAa,CAAC,CAAC,CAAC,CAAA;IACzD,CAAC;IAED,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 16153, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16158, "column": 0}, "map": {"version":3,"file":"searchPosts.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/feed/searchPosts.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from './defs'\n\nexport interface QueryParams {\n  /** Search query string; syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended. */\n  q: string\n  /** Specifies the ranking order of results. */\n  sort?: 'top' | 'latest' | (string & {})\n  /** Filter results for posts after the indicated datetime (inclusive). Expected to use 'sortAt' timestamp, which may not match 'createdAt'. Can be a datetime, or just an ISO date (YYYY-MM-DD). */\n  since?: string\n  /** Filter results for posts before the indicated datetime (not inclusive). Expected to use 'sortAt' timestamp, which may not match 'createdAt'. Can be a datetime, or just an ISO date (YYY-MM-DD). */\n  until?: string\n  /** Filter to posts which mention the given account. Handles are resolved to DID before query-time. Only matches rich-text facet mentions. */\n  mentions?: string\n  /** Filter to posts by the given account. Handles are resolved to DID before query-time. */\n  author?: string\n  /** Filter to posts in the given language. Expected to be based on post language field, though server may override language detection. */\n  lang?: string\n  /** Filter to posts with URLs (facet links or embeds) linking to the given domain (hostname). Server may apply hostname normalization. */\n  domain?: string\n  /** Filter to posts with links (facet links or embeds) pointing to this URL. Server may apply URL normalization or fuzzy matching. */\n  url?: string\n  /** Filter to posts with the given tag (hashtag), based on rich-text facet or tag field. Do not include the hash (#) prefix. Multiple tags can be specified, with 'AND' matching. */\n  tag?: string[]\n  limit?: number\n  /** Optional pagination mechanism; may not necessarily allow scrolling through entire result set. */\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  /** Count of search hits. Optional, may be rounded/truncated, and may not be possible to paginate through all hits. */\n  hitsTotal?: number\n  posts: AppBskyFeedDefs.PostView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class BadQueryStringError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'BadQueryString') return new BadQueryStringError(e)\n  }\n\n  return e\n}\n"],"names":[],"mappings":";;;;;AA+DA,QAAA,UAAA,GAAA,WAMC;AArED;;GAEG,CACH,MAAA,kCAAqD;AAsDrD,MAAa,mBAAoB,SAAQ,OAAA,SAAS;IAChD,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,mBAAA,GAAA,oBAIC;AAED,SAAgB,UAAU,CAAC,CAAM;IAC/B,IAAI,CAAC,YAAY,OAAA,SAAS,EAAE,CAAC;QAC3B,IAAI,CAAC,CAAC,KAAK,KAAK,gBAAgB,EAAE,OAAO,IAAI,mBAAmB,CAAC,CAAC,CAAC,CAAA;IACrE,CAAC;IAED,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 16181, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16186, "column": 0}, "map": {"version":3,"file":"getRelationships.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/graph/getRelationships.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyGraphDefs from './defs'\n\nexport interface QueryParams {\n  /** Primary account requesting relationships for. */\n  actor: string\n  /** List of 'other' accounts to be related back to the primary. */\n  others?: string[]\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  actor?: string\n  relationships: (\n    | AppBskyGraphDefs.Relationship\n    | AppBskyGraphDefs.NotFoundActor\n    | { $type: string; [k: string]: unknown }\n  )[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class ActorNotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'ActorNotFound') return new ActorNotFoundError(e)\n  }\n\n  return e\n}\n"],"names":[],"mappings":";;;;;AA8CA,QAAA,UAAA,GAAA,WAMC;AApDD;;GAEG,CACH,MAAA,kCAAqD;AAqCrD,MAAa,kBAAmB,SAAQ,OAAA,SAAS;IAC/C,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,kBAAA,GAAA,mBAIC;AAED,SAAgB,UAAU,CAAC,CAAM;IAC/B,IAAI,CAAC,YAAY,OAAA,SAAS,EAAE,CAAC;QAC3B,IAAI,CAAC,CAAC,KAAK,KAAK,eAAe,EAAE,OAAO,IAAI,kBAAkB,CAAC,CAAC,CAAC,CAAA;IACnE,CAAC;IAED,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 16209, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16214, "column": 0}, "map": {"version":3,"file":"searchActorsSkeleton.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/unspecced/searchActorsSkeleton.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyUnspeccedDefs from './defs'\n\nexport interface QueryParams {\n  /** Search query string; syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended. For typeahead search, only simple term match is supported, not full syntax. */\n  q: string\n  /** DID of the account making the request (not included for public/unauthenticated queries). Used to boost followed accounts in ranking. */\n  viewer?: string\n  /** If true, acts as fast/simple 'typeahead' query. */\n  typeahead?: boolean\n  limit?: number\n  /** Optional pagination mechanism; may not necessarily allow scrolling through entire result set. */\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  /** Count of search hits. Optional, may be rounded/truncated, and may not be possible to paginate through all hits. */\n  hitsTotal?: number\n  actors: AppBskyUnspeccedDefs.SkeletonSearchActor[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class BadQueryStringError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'BadQueryString') return new BadQueryStringError(e)\n  }\n\n  return e\n}\n"],"names":[],"mappings":";;;;;AAiDA,QAAA,UAAA,GAAA,WAMC;AAvDD;;GAEG,CACH,MAAA,kCAAqD;AAwCrD,MAAa,mBAAoB,SAAQ,OAAA,SAAS;IAChD,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,mBAAA,GAAA,oBAIC;AAED,SAAgB,UAAU,CAAC,CAAM;IAC/B,IAAI,CAAC,YAAY,OAAA,SAAS,EAAE,CAAC;QAC3B,IAAI,CAAC,CAAC,KAAK,KAAK,gBAAgB,EAAE,OAAO,IAAI,mBAAmB,CAAC,CAAC,CAAC,CAAA;IACrE,CAAC;IAED,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 16237, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16242, "column": 0}, "map": {"version":3,"file":"searchPostsSkeleton.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/unspecced/searchPostsSkeleton.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyUnspeccedDefs from './defs'\n\nexport interface QueryParams {\n  /** Search query string; syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended. */\n  q: string\n  /** Specifies the ranking order of results. */\n  sort?: 'top' | 'latest' | (string & {})\n  /** Filter results for posts after the indicated datetime (inclusive). Expected to use 'sortAt' timestamp, which may not match 'createdAt'. Can be a datetime, or just an ISO date (YYYY-MM-DD). */\n  since?: string\n  /** Filter results for posts before the indicated datetime (not inclusive). Expected to use 'sortAt' timestamp, which may not match 'createdAt'. Can be a datetime, or just an ISO date (YYY-MM-DD). */\n  until?: string\n  /** Filter to posts which mention the given account. Handles are resolved to DID before query-time. Only matches rich-text facet mentions. */\n  mentions?: string\n  /** Filter to posts by the given account. Handles are resolved to DID before query-time. */\n  author?: string\n  /** Filter to posts in the given language. Expected to be based on post language field, though server may override language detection. */\n  lang?: string\n  /** Filter to posts with URLs (facet links or embeds) linking to the given domain (hostname). Server may apply hostname normalization. */\n  domain?: string\n  /** Filter to posts with links (facet links or embeds) pointing to this URL. Server may apply URL normalization or fuzzy matching. */\n  url?: string\n  /** Filter to posts with the given tag (hashtag), based on rich-text facet or tag field. Do not include the hash (#) prefix. Multiple tags can be specified, with 'AND' matching. */\n  tag?: string[]\n  /** DID of the account making the request (not included for public/unauthenticated queries). Used for 'from:me' queries. */\n  viewer?: string\n  limit?: number\n  /** Optional pagination mechanism; may not necessarily allow scrolling through entire result set. */\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  /** Count of search hits. Optional, may be rounded/truncated, and may not be possible to paginate through all hits. */\n  hitsTotal?: number\n  posts: AppBskyUnspeccedDefs.SkeletonSearchPost[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class BadQueryStringError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'BadQueryString') return new BadQueryStringError(e)\n  }\n\n  return e\n}\n"],"names":[],"mappings":";;;;;AAiEA,QAAA,UAAA,GAAA,WAMC;AAvED;;GAEG,CACH,MAAA,kCAAqD;AAwDrD,MAAa,mBAAoB,SAAQ,OAAA,SAAS;IAChD,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,mBAAA,GAAA,oBAIC;AAED,SAAgB,UAAU,CAAC,CAAM;IAC/B,IAAI,CAAC,YAAY,OAAA,SAAS,EAAE,CAAC;QAC3B,IAAI,CAAC,CAAC,KAAK,KAAK,gBAAgB,EAAE,OAAO,IAAI,mBAAmB,CAAC,CAAC,CAAC,CAAA;IACrE,CAAC;IAED,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 16265, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16270, "column": 0}, "map": {"version":3,"file":"searchStarterPacksSkeleton.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/unspecced/searchStarterPacksSkeleton.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyUnspeccedDefs from './defs'\n\nexport interface QueryParams {\n  /** Search query string; syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended. */\n  q: string\n  /** DID of the account making the request (not included for public/unauthenticated queries). */\n  viewer?: string\n  limit?: number\n  /** Optional pagination mechanism; may not necessarily allow scrolling through entire result set. */\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  /** Count of search hits. Optional, may be rounded/truncated, and may not be possible to paginate through all hits. */\n  hitsTotal?: number\n  starterPacks: AppBskyUnspeccedDefs.SkeletonSearchStarterPack[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class BadQueryStringError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'BadQueryString') return new BadQueryStringError(e)\n  }\n\n  return e\n}\n"],"names":[],"mappings":";;;;;AA+CA,QAAA,UAAA,GAAA,WAMC;AArDD;;GAEG,CACH,MAAA,kCAAqD;AAsCrD,MAAa,mBAAoB,SAAQ,OAAA,SAAS;IAChD,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,mBAAA,GAAA,oBAIC;AAED,SAAgB,UAAU,CAAC,CAAM;IAC/B,IAAI,CAAC,YAAY,OAAA,SAAS,EAAE,CAAC;QAC3B,IAAI,CAAC,CAAC,KAAK,KAAK,gBAAgB,EAAE,OAAO,IAAI,mBAAmB,CAAC,CAAC,CAAC,CAAA;IACrE,CAAC;IAED,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 16293, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16298, "column": 0}, "map": {"version":3,"file":"createTemplate.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/tools/ozone/communication/createTemplate.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ToolsOzoneCommunicationDefs from './defs'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** Name of the template. */\n  name: string\n  /** Content of the template, markdown supported, can contain variable placeholders. */\n  contentMarkdown: string\n  /** Subject of the message, used in emails. */\n  subject: string\n  /** Message language. */\n  lang?: string\n  /** DID of the user who is creating the template. */\n  createdBy?: string\n  [k: string]: unknown\n}\n\nexport type OutputSchema = ToolsOzoneCommunicationDefs.TemplateView\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class DuplicateTemplateNameError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'DuplicateTemplateName')\n      return new DuplicateTemplateNameError(e)\n  }\n\n  return e\n}\n"],"names":[],"mappings":";;;;;AA+CA,QAAA,UAAA,GAAA,WAOC;AAtDD;;GAEG,CACH,MAAA,kCAAqD;AAsCrD,MAAa,0BAA2B,SAAQ,OAAA,SAAS;IACvD,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,0BAAA,GAAA,2BAIC;AAED,SAAgB,UAAU,CAAC,CAAM;IAC/B,IAAI,CAAC,YAAY,OAAA,SAAS,EAAE,CAAC;QAC3B,IAAI,CAAC,CAAC,KAAK,KAAK,uBAAuB,EACrC,OAAO,IAAI,0BAA0B,CAAC,CAAC,CAAC,CAAA;IAC5C,CAAC;IAED,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 16321, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16326, "column": 0}, "map": {"version":3,"file":"updateTemplate.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/tools/ozone/communication/updateTemplate.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ToolsOzoneCommunicationDefs from './defs'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** ID of the template to be updated. */\n  id: string\n  /** Name of the template. */\n  name?: string\n  /** Message language. */\n  lang?: string\n  /** Content of the template, markdown supported, can contain variable placeholders. */\n  contentMarkdown?: string\n  /** Subject of the message, used in emails. */\n  subject?: string\n  /** DID of the user who is updating the template. */\n  updatedBy?: string\n  disabled?: boolean\n  [k: string]: unknown\n}\n\nexport type OutputSchema = ToolsOzoneCommunicationDefs.TemplateView\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class DuplicateTemplateNameError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'DuplicateTemplateName')\n      return new DuplicateTemplateNameError(e)\n  }\n\n  return e\n}\n"],"names":[],"mappings":";;;;;AAkDA,QAAA,UAAA,GAAA,WAOC;AAzDD;;GAEG,CACH,MAAA,kCAAqD;AAyCrD,MAAa,0BAA2B,SAAQ,OAAA,SAAS;IACvD,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,0BAAA,GAAA,2BAIC;AAED,SAAgB,UAAU,CAAC,CAAM;IAC/B,IAAI,CAAC,YAAY,OAAA,SAAS,EAAE,CAAC;QAC3B,IAAI,CAAC,CAAC,KAAK,KAAK,uBAAuB,EACrC,OAAO,IAAI,0BAA0B,CAAC,CAAC,CAAC,CAAA;IAC5C,CAAC;IAED,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 16349, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16354, "column": 0}, "map": {"version":3,"file":"emitEvent.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/tools/ozone/moderation/emitEvent.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ToolsOzoneModerationDefs from './defs'\nimport * as ComAtprotoAdminDefs from '../../../com/atproto/admin/defs'\nimport * as ComAtprotoRepoStrongRef from '../../../com/atproto/repo/strongRef'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  event:\n    | ToolsOzoneModerationDefs.ModEventTakedown\n    | ToolsOzoneModerationDefs.ModEventAcknowledge\n    | ToolsOzoneModerationDefs.ModEventEscalate\n    | ToolsOzoneModerationDefs.ModEventComment\n    | ToolsOzoneModerationDefs.ModEventLabel\n    | ToolsOzoneModerationDefs.ModEventReport\n    | ToolsOzoneModerationDefs.ModEventMute\n    | ToolsOzoneModerationDefs.ModEventUnmute\n    | ToolsOzoneModerationDefs.ModEventMuteReporter\n    | ToolsOzoneModerationDefs.ModEventUnmuteReporter\n    | ToolsOzoneModerationDefs.ModEventReverseTakedown\n    | ToolsOzoneModerationDefs.ModEventResolveAppeal\n    | ToolsOzoneModerationDefs.ModEventEmail\n    | ToolsOzoneModerationDefs.ModEventTag\n    | ToolsOzoneModerationDefs.AccountEvent\n    | ToolsOzoneModerationDefs.IdentityEvent\n    | ToolsOzoneModerationDefs.RecordEvent\n    | { $type: string; [k: string]: unknown }\n  subject:\n    | ComAtprotoAdminDefs.RepoRef\n    | ComAtprotoRepoStrongRef.Main\n    | { $type: string; [k: string]: unknown }\n  subjectBlobCids?: string[]\n  createdBy: string\n  [k: string]: unknown\n}\n\nexport type OutputSchema = ToolsOzoneModerationDefs.ModEventView\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class SubjectHasActionError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'SubjectHasAction') return new SubjectHasActionError(e)\n  }\n\n  return e\n}\n"],"names":[],"mappings":";;;;;AAgEA,QAAA,UAAA,GAAA,WAMC;AAtED;;GAEG,CACH,MAAA,kCAAqD;AAuDrD,MAAa,qBAAsB,SAAQ,OAAA,SAAS;IAClD,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,qBAAA,GAAA,sBAIC;AAED,SAAgB,UAAU,CAAC,CAAM;IAC/B,IAAI,CAAC,YAAY,OAAA,SAAS,EAAE,CAAC;QAC3B,IAAI,CAAC,CAAC,KAAK,KAAK,kBAAkB,EAAE,OAAO,IAAI,qBAAqB,CAAC,CAAC,CAAC,CAAA;IACzE,CAAC;IAED,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 16377, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16382, "column": 0}, "map": {"version":3,"file":"getRecord.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/tools/ozone/moderation/getRecord.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ToolsOzoneModerationDefs from './defs'\n\nexport interface QueryParams {\n  uri: string\n  cid?: string\n}\n\nexport type InputSchema = undefined\nexport type OutputSchema = ToolsOzoneModerationDefs.RecordViewDetail\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class RecordNotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'RecordNotFound') return new RecordNotFoundError(e)\n  }\n\n  return e\n}\n"],"names":[],"mappings":";;;;;AAmCA,QAAA,UAAA,GAAA,WAMC;AAzCD;;GAEG,CACH,MAAA,kCAAqD;AA0BrD,MAAa,mBAAoB,SAAQ,OAAA,SAAS;IAChD,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,mBAAA,GAAA,oBAIC;AAED,SAAgB,UAAU,CAAC,CAAM;IAC/B,IAAI,CAAC,YAAY,OAAA,SAAS,EAAE,CAAC;QAC3B,IAAI,CAAC,CAAC,KAAK,KAAK,gBAAgB,EAAE,OAAO,IAAI,mBAAmB,CAAC,CAAC,CAAC,CAAA;IACrE,CAAC;IAED,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 16405, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16410, "column": 0}, "map": {"version":3,"file":"getRepo.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/tools/ozone/moderation/getRepo.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ToolsOzoneModerationDefs from './defs'\n\nexport interface QueryParams {\n  did: string\n}\n\nexport type InputSchema = undefined\nexport type OutputSchema = ToolsOzoneModerationDefs.RepoViewDetail\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class RepoNotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'RepoNotFound') return new RepoNotFoundError(e)\n  }\n\n  return e\n}\n"],"names":[],"mappings":";;;;;AAkCA,QAAA,UAAA,GAAA,WAMC;AAxCD;;GAEG,CACH,MAAA,kCAAqD;AAyBrD,MAAa,iBAAkB,SAAQ,OAAA,SAAS;IAC9C,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,iBAAA,GAAA,kBAIC;AAED,SAAgB,UAAU,CAAC,CAAM;IAC/B,IAAI,CAAC,YAAY,OAAA,SAAS,EAAE,CAAC;QAC3B,IAAI,CAAC,CAAC,KAAK,KAAK,cAAc,EAAE,OAAO,IAAI,iBAAiB,CAAC,CAAC,CAAC,CAAA;IACjE,CAAC;IAED,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 16433, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16438, "column": 0}, "map": {"version":3,"file":"deleteSet.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/tools/ozone/set/deleteSet.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** Name of the set to delete */\n  name: string\n  [k: string]: unknown\n}\n\nexport interface OutputSchema {\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class SetNotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'SetNotFound') return new SetNotFoundError(e)\n  }\n\n  return e\n}\n"],"names":[],"mappings":";;;;;AAwCA,QAAA,UAAA,GAAA,WAMC;AA9CD;;GAEG,CACH,MAAA,kCAAqD;AA+BrD,MAAa,gBAAiB,SAAQ,OAAA,SAAS;IAC7C,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,gBAAA,GAAA,iBAIC;AAED,SAAgB,UAAU,CAAC,CAAM;IAC/B,IAAI,CAAC,YAAY,OAAA,SAAS,EAAE,CAAC;QAC3B,IAAI,CAAC,CAAC,KAAK,KAAK,aAAa,EAAE,OAAO,IAAI,gBAAgB,CAAC,CAAC,CAAC,CAAA;IAC/D,CAAC;IAED,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 16461, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16466, "column": 0}, "map": {"version":3,"file":"deleteValues.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/tools/ozone/set/deleteValues.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** Name of the set to delete values from */\n  name: string\n  /** Array of string values to delete from the set */\n  values: string[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport class SetNotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'SetNotFound') return new SetNotFoundError(e)\n  }\n\n  return e\n}\n"],"names":[],"mappings":";;;;;AAqCA,QAAA,UAAA,GAAA,WAMC;AA3CD;;GAEG,CACH,MAAA,kCAAqD;AA4BrD,MAAa,gBAAiB,SAAQ,OAAA,SAAS;IAC7C,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,gBAAA,GAAA,iBAIC;AAED,SAAgB,UAAU,CAAC,CAAM;IAC/B,IAAI,CAAC,YAAY,OAAA,SAAS,EAAE,CAAC;QAC3B,IAAI,CAAC,CAAC,KAAK,KAAK,aAAa,EAAE,OAAO,IAAI,gBAAgB,CAAC,CAAC,CAAC,CAAA;IAC/D,CAAC;IAED,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 16489, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16494, "column": 0}, "map": {"version":3,"file":"getValues.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/tools/ozone/set/getValues.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ToolsOzoneSetDefs from './defs'\n\nexport interface QueryParams {\n  name: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  set: ToolsOzoneSetDefs.SetView\n  values: string[]\n  cursor?: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class SetNotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'SetNotFound') return new SetNotFoundError(e)\n  }\n\n  return e\n}\n"],"names":[],"mappings":";;;;;AA0CA,QAAA,UAAA,GAAA,WAMC;AAhDD;;GAEG,CACH,MAAA,kCAAqD;AAiCrD,MAAa,gBAAiB,SAAQ,OAAA,SAAS;IAC7C,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,gBAAA,GAAA,iBAIC;AAED,SAAgB,UAAU,CAAC,CAAM;IAC/B,IAAI,CAAC,YAAY,OAAA,SAAS,EAAE,CAAC;QAC3B,IAAI,CAAC,CAAC,KAAK,KAAK,aAAa,EAAE,OAAO,IAAI,gBAAgB,CAAC,CAAC,CAAC,CAAA;IAC/D,CAAC;IAED,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 16517, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16522, "column": 0}, "map": {"version":3,"file":"addMember.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/tools/ozone/team/addMember.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ToolsOzoneTeamDefs from './defs'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  did: string\n  role:\n    | 'tools.ozone.team.defs#roleAdmin'\n    | 'tools.ozone.team.defs#roleModerator'\n    | 'tools.ozone.team.defs#roleTriage'\n    | (string & {})\n  [k: string]: unknown\n}\n\nexport type OutputSchema = ToolsOzoneTeamDefs.Member\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class MemberAlreadyExistsError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'MemberAlreadyExists')\n      return new MemberAlreadyExistsError(e)\n  }\n\n  return e\n}\n"],"names":[],"mappings":";;;;;AA2CA,QAAA,UAAA,GAAA,WAOC;AAlDD;;GAEG,CACH,MAAA,kCAAqD;AAkCrD,MAAa,wBAAyB,SAAQ,OAAA,SAAS;IACrD,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,wBAAA,GAAA,yBAIC;AAED,SAAgB,UAAU,CAAC,CAAM;IAC/B,IAAI,CAAC,YAAY,OAAA,SAAS,EAAE,CAAC;QAC3B,IAAI,CAAC,CAAC,KAAK,KAAK,qBAAqB,EACnC,OAAO,IAAI,wBAAwB,CAAC,CAAC,CAAC,CAAA;IAC1C,CAAC;IAED,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 16545, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16550, "column": 0}, "map": {"version":3,"file":"deleteMember.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/tools/ozone/team/deleteMember.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  did: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport class MemberNotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport class CannotDeleteSelfError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'MemberNotFound') return new MemberNotFoundError(e)\n    if (e.error === 'CannotDeleteSelf') return new CannotDeleteSelfError(e)\n  }\n\n  return e\n}\n"],"names":[],"mappings":";;;;;AAwCA,QAAA,UAAA,GAAA,WAOC;AA/CD;;GAEG,CACH,MAAA,kCAAqD;AAyBrD,MAAa,mBAAoB,SAAQ,OAAA,SAAS;IAChD,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,mBAAA,GAAA,oBAIC;AAED,MAAa,qBAAsB,SAAQ,OAAA,SAAS;IAClD,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,qBAAA,GAAA,sBAIC;AAED,SAAgB,UAAU,CAAC,CAAM;IAC/B,IAAI,CAAC,YAAY,OAAA,SAAS,EAAE,CAAC;QAC3B,IAAI,CAAC,CAAC,KAAK,KAAK,gBAAgB,EAAE,OAAO,IAAI,mBAAmB,CAAC,CAAC,CAAC,CAAA;QACnE,IAAI,CAAC,CAAC,KAAK,KAAK,kBAAkB,EAAE,OAAO,IAAI,qBAAqB,CAAC,CAAC,CAAC,CAAA;IACzE,CAAC;IAED,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 16582, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16587, "column": 0}, "map": {"version":3,"file":"updateMember.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/tools/ozone/team/updateMember.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ToolsOzoneTeamDefs from './defs'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  did: string\n  disabled?: boolean\n  role?:\n    | 'tools.ozone.team.defs#roleAdmin'\n    | 'tools.ozone.team.defs#roleModerator'\n    | 'tools.ozone.team.defs#roleTriage'\n    | (string & {})\n  [k: string]: unknown\n}\n\nexport type OutputSchema = ToolsOzoneTeamDefs.Member\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport class MemberNotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers, { cause: src })\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'MemberNotFound') return new MemberNotFoundError(e)\n  }\n\n  return e\n}\n"],"names":[],"mappings":";;;;;AA4CA,QAAA,UAAA,GAAA,WAMC;AAlDD;;GAEG,CACH,MAAA,kCAAqD;AAmCrD,MAAa,mBAAoB,SAAQ,OAAA,SAAS;IAChD,YAAY,GAAc,CAAA;QACxB,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE;YAAE,KAAK,EAAE,GAAG;QAAA,CAAE,CAAC,CAAA;IACxE,CAAC;CACF;AAJD,QAAA,mBAAA,GAAA,oBAIC;AAED,SAAgB,UAAU,CAAC,CAAM;IAC/B,IAAI,CAAC,YAAY,OAAA,SAAS,EAAE,CAAC;QAC3B,IAAI,CAAC,CAAC,KAAK,KAAK,gBAAgB,EAAE,OAAO,IAAI,mBAAmB,CAAC,CAAC,CAAC,CAAA;IACrE,CAAC;IAED,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 16610, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16615, "column": 0}, "map": {"version":3,"file":"defs.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/admin/defs.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoServerDefs from '../server/defs'\n\nexport interface StatusAttr {\n  applied: boolean\n  ref?: string\n  [k: string]: unknown\n}\n\nexport function isStatusAttr(v: unknown): v is StatusAttr {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#statusAttr'\n  )\n}\n\nexport function validateStatusAttr(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#statusAttr', v)\n}\n\nexport interface AccountView {\n  did: string\n  handle: string\n  email?: string\n  relatedRecords?: {}[]\n  indexedAt: string\n  invitedBy?: ComAtprotoServerDefs.InviteCode\n  invites?: ComAtprotoServerDefs.InviteCode[]\n  invitesDisabled?: boolean\n  emailConfirmedAt?: string\n  inviteNote?: string\n  deactivatedAt?: string\n  threatSignatures?: ThreatSignature[]\n  [k: string]: unknown\n}\n\nexport function isAccountView(v: unknown): v is AccountView {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#accountView'\n  )\n}\n\nexport function validateAccountView(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#accountView', v)\n}\n\nexport interface RepoRef {\n  did: string\n  [k: string]: unknown\n}\n\nexport function isRepoRef(v: unknown): v is RepoRef {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#repoRef'\n  )\n}\n\nexport function validateRepoRef(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#repoRef', v)\n}\n\nexport interface RepoBlobRef {\n  did: string\n  cid: string\n  recordUri?: string\n  [k: string]: unknown\n}\n\nexport function isRepoBlobRef(v: unknown): v is RepoBlobRef {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#repoBlobRef'\n  )\n}\n\nexport function validateRepoBlobRef(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#repoBlobRef', v)\n}\n\nexport interface ThreatSignature {\n  property: string\n  value: string\n  [k: string]: unknown\n}\n\nexport function isThreatSignature(v: unknown): v is ThreatSignature {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#threatSignature'\n  )\n}\n\nexport function validateThreatSignature(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#threatSignature', v)\n}\n"],"names":[],"mappings":";;;;AAeA,QAAA,YAAA,GAAA,aAMC;AAED,QAAA,kBAAA,GAAA,mBAEC;AAkBD,QAAA,aAAA,GAAA,cAMC;AAED,QAAA,mBAAA,GAAA,oBAEC;AAOD,QAAA,SAAA,GAAA,UAMC;AAED,QAAA,eAAA,GAAA,gBAEC;AASD,QAAA,aAAA,GAAA,cAMC;AAED,QAAA,mBAAA,GAAA,oBAEC;AAQD,QAAA,iBAAA,GAAA,kBAMC;AAED,QAAA,uBAAA,GAAA,wBAEC;AAvGD,MAAA,qCAAiD;AACjD,MAAA,6CAA+C;AAU/C,SAAgB,YAAY,CAAC,CAAU;IACrC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,mCAAmC,CAChD,CAAA;AACH,CAAC;AAED,SAAgB,kBAAkB,CAAC,CAAU;IAC3C,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,mCAAmC,EAAE,CAAC,CAAC,CAAA;AAClE,CAAC;AAkBD,SAAgB,aAAa,CAAC,CAAU;IACtC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,oCAAoC,CACjD,CAAA;AACH,CAAC;AAED,SAAgB,mBAAmB,CAAC,CAAU;IAC5C,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,oCAAoC,EAAE,CAAC,CAAC,CAAA;AACnE,CAAC;AAOD,SAAgB,SAAS,CAAC,CAAU;IAClC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,gCAAgC,CAC7C,CAAA;AACH,CAAC;AAED,SAAgB,eAAe,CAAC,CAAU;IACxC,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,gCAAgC,EAAE,CAAC,CAAC,CAAA;AAC/D,CAAC;AASD,SAAgB,aAAa,CAAC,CAAU;IACtC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,oCAAoC,CACjD,CAAA;AACH,CAAC;AAED,SAAgB,mBAAmB,CAAC,CAAU;IAC5C,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,oCAAoC,EAAE,CAAC,CAAC,CAAA;AACnE,CAAC;AAQD,SAAgB,iBAAiB,CAAC,CAAU;IAC1C,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,wCAAwC,CACrD,CAAA;AACH,CAAC;AAED,SAAgB,uBAAuB,CAAC,CAAU;IAChD,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,wCAAwC,EAAE,CAAC,CAAC,CAAA;AACvE,CAAC","ignoreList":[0]}},
    {"offset": {"line": 16661, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16666, "column": 0}, "map": {"version":3,"file":"deleteAccount.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/admin/deleteAccount.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  did: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AA4BA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 16674, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16679, "column": 0}, "map": {"version":3,"file":"disableAccountInvites.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/admin/disableAccountInvites.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  account: string\n  /** Optional reason for disabled invites. */\n  note?: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AA8BA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 16687, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16692, "column": 0}, "map": {"version":3,"file":"disableInviteCodes.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/admin/disableInviteCodes.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  codes?: string[]\n  accounts?: string[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AA6BA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 16700, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16705, "column": 0}, "map": {"version":3,"file":"enableAccountInvites.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/admin/enableAccountInvites.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  account: string\n  /** Optional reason for enabled invites. */\n  note?: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AA8BA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 16713, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16718, "column": 0}, "map": {"version":3,"file":"getAccountInfo.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/admin/getAccountInfo.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoAdminDefs from './defs'\n\nexport interface QueryParams {\n  did: string\n}\n\nexport type InputSchema = undefined\nexport type OutputSchema = ComAtprotoAdminDefs.AccountView\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AA4BA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 16726, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16731, "column": 0}, "map": {"version":3,"file":"getAccountInfos.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/admin/getAccountInfos.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoAdminDefs from './defs'\n\nexport interface QueryParams {\n  dids: string[]\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  infos: ComAtprotoAdminDefs.AccountView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAgCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 16739, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16744, "column": 0}, "map": {"version":3,"file":"getInviteCodes.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/admin/getInviteCodes.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoServerDefs from '../server/defs'\n\nexport interface QueryParams {\n  sort?: 'recent' | 'usage' | (string & {})\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  codes: ComAtprotoServerDefs.InviteCode[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAmCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 16752, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16757, "column": 0}, "map": {"version":3,"file":"getSubjectStatus.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/admin/getSubjectStatus.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoAdminDefs from './defs'\nimport * as ComAtprotoRepoStrongRef from '../repo/strongRef'\n\nexport interface QueryParams {\n  did?: string\n  uri?: string\n  blob?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  subject:\n    | ComAtprotoAdminDefs.RepoRef\n    | ComAtprotoRepoStrongRef.Main\n    | ComAtprotoAdminDefs.RepoBlobRef\n    | { $type: string; [k: string]: unknown }\n  takedown?: ComAtprotoAdminDefs.StatusAttr\n  deactivated?: ComAtprotoAdminDefs.StatusAttr\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAyCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 16765, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16770, "column": 0}, "map": {"version":3,"file":"searchAccounts.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/admin/searchAccounts.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoAdminDefs from './defs'\n\nexport interface QueryParams {\n  email?: string\n  cursor?: string\n  limit?: number\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  accounts: ComAtprotoAdminDefs.AccountView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAmCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 16778, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16783, "column": 0}, "map": {"version":3,"file":"sendEmail.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/admin/sendEmail.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  recipientDid: string\n  content: string\n  subject?: string\n  senderDid: string\n  /** Additional comment by the sender that won't be used in the email itself but helpful to provide more context for moderators/reviewers */\n  comment?: string\n  [k: string]: unknown\n}\n\nexport interface OutputSchema {\n  sent: boolean\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAuCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 16791, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16796, "column": 0}, "map": {"version":3,"file":"updateAccountEmail.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/admin/updateAccountEmail.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** The handle or DID of the repo. */\n  account: string\n  email: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AA8BA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 16804, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16809, "column": 0}, "map": {"version":3,"file":"updateAccountHandle.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/admin/updateAccountHandle.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  did: string\n  handle: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AA6BA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 16817, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16822, "column": 0}, "map": {"version":3,"file":"updateAccountPassword.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/admin/updateAccountPassword.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  did: string\n  password: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AA6BA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 16830, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16835, "column": 0}, "map": {"version":3,"file":"updateSubjectStatus.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/admin/updateSubjectStatus.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoAdminDefs from './defs'\nimport * as ComAtprotoRepoStrongRef from '../repo/strongRef'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  subject:\n    | ComAtprotoAdminDefs.RepoRef\n    | ComAtprotoRepoStrongRef.Main\n    | ComAtprotoAdminDefs.RepoBlobRef\n    | { $type: string; [k: string]: unknown }\n  takedown?: ComAtprotoAdminDefs.StatusAttr\n  deactivated?: ComAtprotoAdminDefs.StatusAttr\n  [k: string]: unknown\n}\n\nexport interface OutputSchema {\n  subject:\n    | ComAtprotoAdminDefs.RepoRef\n    | ComAtprotoRepoStrongRef.Main\n    | ComAtprotoAdminDefs.RepoBlobRef\n    | { $type: string; [k: string]: unknown }\n  takedown?: ComAtprotoAdminDefs.StatusAttr\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AA+CA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 16843, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16848, "column": 0}, "map": {"version":3,"file":"getRecommendedDidCredentials.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/identity/getRecommendedDidCredentials.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  /** Recommended rotation keys for PLC dids. Should be undefined (or ignored) for did:webs. */\n  rotationKeys?: string[]\n  alsoKnownAs?: string[]\n  verificationMethods?: {}\n  services?: {}\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAiCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 16856, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16861, "column": 0}, "map": {"version":3,"file":"requestPlcOperationSignature.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/identity/requestPlcOperationSignature.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAwBA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 16869, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16874, "column": 0}, "map": {"version":3,"file":"resolveHandle.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/identity/resolveHandle.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  /** The handle to resolve. */\n  handle: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  did: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAgCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 16882, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16887, "column": 0}, "map": {"version":3,"file":"signPlcOperation.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/identity/signPlcOperation.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** A token received through com.atproto.identity.requestPlcOperationSignature */\n  token?: string\n  rotationKeys?: string[]\n  alsoKnownAs?: string[]\n  verificationMethods?: {}\n  services?: {}\n  [k: string]: unknown\n}\n\nexport interface OutputSchema {\n  /** A signed DID PLC operation. */\n  operation: {}\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAwCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 16895, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16900, "column": 0}, "map": {"version":3,"file":"submitPlcOperation.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/identity/submitPlcOperation.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  operation: {}\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AA4BA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 16908, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16913, "column": 0}, "map": {"version":3,"file":"updateHandle.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/identity/updateHandle.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** The new handle. */\n  handle: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AA6BA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 16921, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16926, "column": 0}, "map": {"version":3,"file":"defs.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/label/defs.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\n/** Metadata tag on an atproto resource (eg, repo or record). */\nexport interface Label {\n  /** The AT Protocol version of the label object. */\n  ver?: number\n  /** DID of the actor who created this label. */\n  src: string\n  /** AT URI of the record, repository (account), or other resource that this label applies to. */\n  uri: string\n  /** Optionally, CID specifying the specific version of 'uri' resource this label applies to. */\n  cid?: string\n  /** The short string name of the value or type of this label. */\n  val: string\n  /** If true, this is a negation label, overwriting a previous label. */\n  neg?: boolean\n  /** Timestamp when this label was created. */\n  cts: string\n  /** Timestamp at which this label expires (no longer applies). */\n  exp?: string\n  /** Signature of dag-cbor encoded label. */\n  sig?: Uint8Array\n  [k: string]: unknown\n}\n\nexport function isLabel(v: unknown): v is Label {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.label.defs#label'\n  )\n}\n\nexport function validateLabel(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.label.defs#label', v)\n}\n\n/** Metadata tags on an atproto record, published by the author within the record. */\nexport interface SelfLabels {\n  values: SelfLabel[]\n  [k: string]: unknown\n}\n\nexport function isSelfLabels(v: unknown): v is SelfLabels {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.label.defs#selfLabels'\n  )\n}\n\nexport function validateSelfLabels(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.label.defs#selfLabels', v)\n}\n\n/** Metadata tag on an atproto record, published by the author within the record. Note that schemas should use #selfLabels, not #selfLabel. */\nexport interface SelfLabel {\n  /** The short string name of the value or type of this label. */\n  val: string\n  [k: string]: unknown\n}\n\nexport function isSelfLabel(v: unknown): v is SelfLabel {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.label.defs#selfLabel'\n  )\n}\n\nexport function validateSelfLabel(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.label.defs#selfLabel', v)\n}\n\n/** Declares a label value and its expected interpretations and behaviors. */\nexport interface LabelValueDefinition {\n  /** The value of the label being defined. Must only include lowercase ascii and the '-' character ([a-z-]+). */\n  identifier: string\n  /** How should a client visually convey this label? 'inform' means neutral and informational; 'alert' means negative and warning; 'none' means show nothing. */\n  severity: 'inform' | 'alert' | 'none' | (string & {})\n  /** What should this label hide in the UI, if applied? 'content' hides all of the target; 'media' hides the images/video/audio; 'none' hides nothing. */\n  blurs: 'content' | 'media' | 'none' | (string & {})\n  /** The default setting for this label. */\n  defaultSetting: 'ignore' | 'warn' | 'hide' | (string & {})\n  /** Does the user need to have adult content enabled in order to configure this label? */\n  adultOnly?: boolean\n  locales: LabelValueDefinitionStrings[]\n  [k: string]: unknown\n}\n\nexport function isLabelValueDefinition(v: unknown): v is LabelValueDefinition {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.label.defs#labelValueDefinition'\n  )\n}\n\nexport function validateLabelValueDefinition(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.label.defs#labelValueDefinition', v)\n}\n\n/** Strings which describe the label in the UI, localized into a specific language. */\nexport interface LabelValueDefinitionStrings {\n  /** The code of the language these strings are written in. */\n  lang: string\n  /** A short human-readable name for the label. */\n  name: string\n  /** A longer description of what the label means and why it might be applied. */\n  description: string\n  [k: string]: unknown\n}\n\nexport function isLabelValueDefinitionStrings(\n  v: unknown,\n): v is LabelValueDefinitionStrings {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.label.defs#labelValueDefinitionStrings'\n  )\n}\n\nexport function validateLabelValueDefinitionStrings(\n  v: unknown,\n): ValidationResult {\n  return lexicons.validate(\n    'com.atproto.label.defs#labelValueDefinitionStrings',\n    v,\n  )\n}\n\nexport type LabelValue =\n  | '!hide'\n  | '!no-promote'\n  | '!warn'\n  | '!no-unauthenticated'\n  | 'dmca-violation'\n  | 'doxxing'\n  | 'porn'\n  | 'sexual'\n  | 'nudity'\n  | 'nsfl'\n  | 'gore'\n  | (string & {})\n"],"names":[],"mappings":";;;;AA+BA,QAAA,OAAA,GAAA,QAMC;AAED,QAAA,aAAA,GAAA,cAEC;AAQD,QAAA,YAAA,GAAA,aAMC;AAED,QAAA,kBAAA,GAAA,mBAEC;AASD,QAAA,WAAA,GAAA,YAMC;AAED,QAAA,iBAAA,GAAA,kBAEC;AAkBD,QAAA,sBAAA,GAAA,uBAMC;AAED,QAAA,4BAAA,GAAA,6BAEC;AAaD,QAAA,6BAAA,GAAA,8BAQC;AAED,QAAA,mCAAA,GAAA,oCAOC;AApID,MAAA,qCAAiD;AACjD,MAAA,6CAA+C;AA0B/C,SAAgB,OAAO,CAAC,CAAU;IAChC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,8BAA8B,CAC3C,CAAA;AACH,CAAC;AAED,SAAgB,aAAa,CAAC,CAAU;IACtC,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,8BAA8B,EAAE,CAAC,CAAC,CAAA;AAC7D,CAAC;AAQD,SAAgB,YAAY,CAAC,CAAU;IACrC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,mCAAmC,CAChD,CAAA;AACH,CAAC;AAED,SAAgB,kBAAkB,CAAC,CAAU;IAC3C,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,mCAAmC,EAAE,CAAC,CAAC,CAAA;AAClE,CAAC;AASD,SAAgB,WAAW,CAAC,CAAU;IACpC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,kCAAkC,CAC/C,CAAA;AACH,CAAC;AAED,SAAgB,iBAAiB,CAAC,CAAU;IAC1C,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,kCAAkC,EAAE,CAAC,CAAC,CAAA;AACjE,CAAC;AAkBD,SAAgB,sBAAsB,CAAC,CAAU;IAC/C,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,6CAA6C,CAC1D,CAAA;AACH,CAAC;AAED,SAAgB,4BAA4B,CAAC,CAAU;IACrD,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,6CAA6C,EAAE,CAAC,CAAC,CAAA;AAC5E,CAAC;AAaD,SAAgB,6BAA6B,CAC3C,CAAU;IAEV,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,oDAAoD,CACjE,CAAA;AACH,CAAC;AAED,SAAgB,mCAAmC,CACjD,CAAU;IAEV,OAAO,WAAA,QAAQ,CAAC,QAAQ,CACtB,oDAAoD,EACpD,CAAC,CACF,CAAA;AACH,CAAC","ignoreList":[0]}},
    {"offset": {"line": 16972, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16977, "column": 0}, "map": {"version":3,"file":"queryLabels.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/label/queryLabels.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoLabelDefs from './defs'\n\nexport interface QueryParams {\n  /** List of AT URI patterns to match (boolean 'OR'). Each may be a prefix (ending with '*'; will match inclusive of the string leading to '*'), or a full URI. */\n  uriPatterns: string[]\n  /** Optional list of label sources (DIDs) to filter on. */\n  sources?: string[]\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  labels: ComAtprotoLabelDefs.Label[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAsCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 16985, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16990, "column": 0}, "map": {"version":3,"file":"subscribeLabels.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/label/subscribeLabels.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoLabelDefs from './defs'\n\nexport interface Labels {\n  seq: number\n  labels: ComAtprotoLabelDefs.Label[]\n  [k: string]: unknown\n}\n\nexport function isLabels(v: unknown): v is Labels {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.label.subscribeLabels#labels'\n  )\n}\n\nexport function validateLabels(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.label.subscribeLabels#labels', v)\n}\n\nexport interface Info {\n  name: 'OutdatedCursor' | (string & {})\n  message?: string\n  [k: string]: unknown\n}\n\nexport function isInfo(v: unknown): v is Info {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.label.subscribeLabels#info'\n  )\n}\n\nexport function validateInfo(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.label.subscribeLabels#info', v)\n}\n"],"names":[],"mappings":";;;;AAgBA,QAAA,QAAA,GAAA,SAMC;AAED,QAAA,cAAA,GAAA,eAEC;AAQD,QAAA,MAAA,GAAA,OAMC;AAED,QAAA,YAAA,GAAA,aAEC;AAvCD,MAAA,qCAAiD;AACjD,MAAA,6CAA+C;AAU/C,SAAgB,QAAQ,CAAC,CAAU;IACjC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,0CAA0C,CACvD,CAAA;AACH,CAAC;AAED,SAAgB,cAAc,CAAC,CAAU;IACvC,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,0CAA0C,EAAE,CAAC,CAAC,CAAA;AACzE,CAAC;AAQD,SAAgB,MAAM,CAAC,CAAU;IAC/B,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,wCAAwC,CACrD,CAAA;AACH,CAAC;AAED,SAAgB,YAAY,CAAC,CAAU;IACrC,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,wCAAwC,EAAE,CAAC,CAAC,CAAA;AACvE,CAAC","ignoreList":[0]}},
    {"offset": {"line": 17012, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17017, "column": 0}, "map": {"version":3,"file":"schema.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/lexicon/schema.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface Record {\n  /** Indicates the 'version' of the Lexicon language. Must be '1' for the current atproto/Lexicon schema system. */\n  lexicon: number\n  [k: string]: unknown\n}\n\nexport function isRecord(v: unknown): v is Record {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'com.atproto.lexicon.schema#main' ||\n      v.$type === 'com.atproto.lexicon.schema')\n  )\n}\n\nexport function validateRecord(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.lexicon.schema#main', v)\n}\n"],"names":[],"mappings":";;;;AAcA,QAAA,QAAA,GAAA,SAOC;AAED,QAAA,cAAA,GAAA,eAEC;AArBD,MAAA,qCAAiD;AACjD,MAAA,6CAA+C;AAS/C,SAAgB,QAAQ,CAAC,CAAU;IACjC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,CAAC,KAAK,KAAK,iCAAiC,IAC5C,CAAC,CAAC,KAAK,KAAK,4BAA4B,CAAC,CAC5C,CAAA;AACH,CAAC;AAED,SAAgB,cAAc,CAAC,CAAU;IACvC,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,iCAAiC,EAAE,CAAC,CAAC,CAAA;AAChE,CAAC","ignoreList":[0]}},
    {"offset": {"line": 17031, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17036, "column": 0}, "map": {"version":3,"file":"createReport.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/moderation/createReport.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoModerationDefs from './defs'\nimport * as ComAtprotoAdminDefs from '../admin/defs'\nimport * as ComAtprotoRepoStrongRef from '../repo/strongRef'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  reasonType: ComAtprotoModerationDefs.ReasonType\n  /** Additional context about the content and violation. */\n  reason?: string\n  subject:\n    | ComAtprotoAdminDefs.RepoRef\n    | ComAtprotoRepoStrongRef.Main\n    | { $type: string; [k: string]: unknown }\n  [k: string]: unknown\n}\n\nexport interface OutputSchema {\n  id: number\n  reasonType: ComAtprotoModerationDefs.ReasonType\n  reason?: string\n  subject:\n    | ComAtprotoAdminDefs.RepoRef\n    | ComAtprotoRepoStrongRef.Main\n    | { $type: string; [k: string]: unknown }\n  reportedBy: string\n  createdAt: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAmDA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 17044, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17049, "column": 0}, "map": {"version":3,"file":"defs.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/moderation/defs.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport type ReasonType =\n  | 'com.atproto.moderation.defs#reasonSpam'\n  | 'com.atproto.moderation.defs#reasonViolation'\n  | 'com.atproto.moderation.defs#reasonMisleading'\n  | 'com.atproto.moderation.defs#reasonSexual'\n  | 'com.atproto.moderation.defs#reasonRude'\n  | 'com.atproto.moderation.defs#reasonOther'\n  | 'com.atproto.moderation.defs#reasonAppeal'\n  | (string & {})\n\n/** Spam: frequent unwanted promotion, replies, mentions */\nexport const REASONSPAM = 'com.atproto.moderation.defs#reasonSpam'\n/** Direct violation of server rules, laws, terms of service */\nexport const REASONVIOLATION = 'com.atproto.moderation.defs#reasonViolation'\n/** Misleading identity, affiliation, or content */\nexport const REASONMISLEADING = 'com.atproto.moderation.defs#reasonMisleading'\n/** Unwanted or mislabeled sexual content */\nexport const REASONSEXUAL = 'com.atproto.moderation.defs#reasonSexual'\n/** Rude, harassing, explicit, or otherwise unwelcoming behavior */\nexport const REASONRUDE = 'com.atproto.moderation.defs#reasonRude'\n/** Other: reports not falling under another report category */\nexport const REASONOTHER = 'com.atproto.moderation.defs#reasonOther'\n/** Appeal: appeal a previously taken moderation action */\nexport const REASONAPPEAL = 'com.atproto.moderation.defs#reasonAppeal'\n"],"names":[],"mappings":";;;;;AAkBA,yDAAA,EAA2D,CAC9C,QAAA,UAAU,GAAG,wCAAwC,CAAA;AAClE,6DAAA,EAA+D,CAClD,QAAA,eAAe,GAAG,6CAA6C,CAAA;AAC5E,iDAAA,EAAmD,CACtC,QAAA,gBAAgB,GAAG,8CAA8C,CAAA;AAC9E,0CAAA,EAA4C,CAC/B,QAAA,YAAY,GAAG,0CAA0C,CAAA;AACtE,iEAAA,EAAmE,CACtD,QAAA,UAAU,GAAG,wCAAwC,CAAA;AAClE,6DAAA,EAA+D,CAClD,QAAA,WAAW,GAAG,yCAAyC,CAAA;AACpE,wDAAA,EAA0D,CAC7C,QAAA,YAAY,GAAG,0CAA0C,CAAA","ignoreList":[0]}},
    {"offset": {"line": 17061, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17066, "column": 0}, "map": {"version":3,"file":"defs.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/repo/defs.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface CommitMeta {\n  cid: string\n  rev: string\n  [k: string]: unknown\n}\n\nexport function isCommitMeta(v: unknown): v is CommitMeta {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.repo.defs#commitMeta'\n  )\n}\n\nexport function validateCommitMeta(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.repo.defs#commitMeta', v)\n}\n"],"names":[],"mappings":";;;;AAcA,QAAA,YAAA,GAAA,aAMC;AAED,QAAA,kBAAA,GAAA,mBAEC;AApBD,MAAA,qCAAiD;AACjD,MAAA,6CAA+C;AAS/C,SAAgB,YAAY,CAAC,CAAU;IACrC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,kCAAkC,CAC/C,CAAA;AACH,CAAC;AAED,SAAgB,kBAAkB,CAAC,CAAU;IAC3C,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,kCAAkC,EAAE,CAAC,CAAC,CAAA;AACjE,CAAC","ignoreList":[0]}},
    {"offset": {"line": 17080, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17085, "column": 0}, "map": {"version":3,"file":"describeRepo.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/repo/describeRepo.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  /** The handle or DID of the repo. */\n  repo: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  handle: string\n  did: string\n  /** The complete DID document for this account. */\n  didDoc: {}\n  /** List of all the collections (NSIDs) for which this repo contains at least one record. */\n  collections: string[]\n  /** Indicates if handle is currently valid (resolves bi-directionally) */\n  handleIsCorrect: boolean\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAuCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 17093, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17098, "column": 0}, "map": {"version":3,"file":"importRepo.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/repo/importRepo.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport type InputSchema = string | Uint8Array | Blob\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/vnd.ipld.car'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAyBA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 17106, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17111, "column": 0}, "map": {"version":3,"file":"listMissingBlobs.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/repo/listMissingBlobs.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  blobs: RecordBlob[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n\nexport interface RecordBlob {\n  cid: string\n  recordUri: string\n  [k: string]: unknown\n}\n\nexport function isRecordBlob(v: unknown): v is RecordBlob {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.repo.listMissingBlobs#recordBlob'\n  )\n}\n\nexport function validateRecordBlob(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.repo.listMissingBlobs#recordBlob', v)\n}\n"],"names":[],"mappings":";;;;AAiCA,QAAA,UAAA,GAAA,WAEC;AAQD,QAAA,YAAA,GAAA,aAMC;AAED,QAAA,kBAAA,GAAA,mBAEC;AAhDD,MAAA,qCAAiD;AACjD,MAAA,6CAA+C;AA2B/C,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC;AAQD,SAAgB,YAAY,CAAC,CAAU;IACrC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,8CAA8C,CAC3D,CAAA;AACH,CAAC;AAED,SAAgB,kBAAkB,CAAC,CAAU;IAC3C,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,8CAA8C,EAAE,CAAC,CAAC,CAAA;AAC7E,CAAC","ignoreList":[0]}},
    {"offset": {"line": 17129, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17134, "column": 0}, "map": {"version":3,"file":"listRecords.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/repo/listRecords.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  /** The handle or DID of the repo. */\n  repo: string\n  /** The NSID of the record type. */\n  collection: string\n  /** The number of records to return. */\n  limit?: number\n  cursor?: string\n  /** DEPRECATED: The lowest sort-ordered rkey to start from (exclusive) */\n  rkeyStart?: string\n  /** DEPRECATED: The highest sort-ordered rkey to stop at (exclusive) */\n  rkeyEnd?: string\n  /** Flag to reverse the order of the returned records. */\n  reverse?: boolean\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  records: Record[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n\nexport interface Record {\n  uri: string\n  cid: string\n  value: {}\n  [k: string]: unknown\n}\n\nexport function isRecord(v: unknown): v is Record {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.repo.listRecords#record'\n  )\n}\n\nexport function validateRecord(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.repo.listRecords#record', v)\n}\n"],"names":[],"mappings":";;;;AA4CA,QAAA,UAAA,GAAA,WAEC;AASD,QAAA,QAAA,GAAA,SAMC;AAED,QAAA,cAAA,GAAA,eAEC;AA5DD,MAAA,qCAAiD;AACjD,MAAA,6CAA+C;AAsC/C,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC;AASD,SAAgB,QAAQ,CAAC,CAAU;IACjC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,qCAAqC,CAClD,CAAA;AACH,CAAC;AAED,SAAgB,cAAc,CAAC,CAAU;IACvC,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,qCAAqC,EAAE,CAAC,CAAC,CAAA;AACpE,CAAC","ignoreList":[0]}},
    {"offset": {"line": 17152, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17157, "column": 0}, "map": {"version":3,"file":"strongRef.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/repo/strongRef.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface Main {\n  uri: string\n  cid: string\n  [k: string]: unknown\n}\n\nexport function isMain(v: unknown): v is Main {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'com.atproto.repo.strongRef#main' ||\n      v.$type === 'com.atproto.repo.strongRef')\n  )\n}\n\nexport function validateMain(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.repo.strongRef#main', v)\n}\n"],"names":[],"mappings":";;;;AAcA,QAAA,MAAA,GAAA,OAOC;AAED,QAAA,YAAA,GAAA,aAEC;AArBD,MAAA,qCAAiD;AACjD,MAAA,6CAA+C;AAS/C,SAAgB,MAAM,CAAC,CAAU;IAC/B,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,CAAC,KAAK,KAAK,iCAAiC,IAC5C,CAAC,CAAC,KAAK,KAAK,4BAA4B,CAAC,CAC5C,CAAA;AACH,CAAC;AAED,SAAgB,YAAY,CAAC,CAAU;IACrC,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,iCAAiC,EAAE,CAAC,CAAC,CAAA;AAChE,CAAC","ignoreList":[0]}},
    {"offset": {"line": 17171, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17176, "column": 0}, "map": {"version":3,"file":"uploadBlob.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/repo/uploadBlob.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport type InputSchema = string | Uint8Array | Blob\n\nexport interface OutputSchema {\n  blob: BlobRef\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: string\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AA+BA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 17184, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17189, "column": 0}, "map": {"version":3,"file":"activateAccount.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/server/activateAccount.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAwBA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 17197, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17202, "column": 0}, "map": {"version":3,"file":"checkAccountStatus.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/server/checkAccountStatus.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  activated: boolean\n  validDid: boolean\n  repoCommit: string\n  repoRev: string\n  repoBlocks: number\n  indexedRecords: number\n  privateStateValues: number\n  expectedBlobs: number\n  importedBlobs: number\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAqCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 17210, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17215, "column": 0}, "map": {"version":3,"file":"createInviteCode.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/server/createInviteCode.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  useCount: number\n  forAccount?: string\n  [k: string]: unknown\n}\n\nexport interface OutputSchema {\n  code: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAmCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 17223, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17228, "column": 0}, "map": {"version":3,"file":"createInviteCodes.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/server/createInviteCodes.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  codeCount: number\n  useCount: number\n  forAccounts?: string[]\n  [k: string]: unknown\n}\n\nexport interface OutputSchema {\n  codes: AccountCodes[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n\nexport interface AccountCodes {\n  account: string\n  codes: string[]\n  [k: string]: unknown\n}\n\nexport function isAccountCodes(v: unknown): v is AccountCodes {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.server.createInviteCodes#accountCodes'\n  )\n}\n\nexport function validateAccountCodes(v: unknown): ValidationResult {\n  return lexicons.validate(\n    'com.atproto.server.createInviteCodes#accountCodes',\n    v,\n  )\n}\n"],"names":[],"mappings":";;;;AAoCA,QAAA,UAAA,GAAA,WAEC;AAQD,QAAA,cAAA,GAAA,eAMC;AAED,QAAA,oBAAA,GAAA,qBAKC;AAtDD,MAAA,qCAAiD;AACjD,MAAA,6CAA+C;AA8B/C,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC;AAQD,SAAgB,cAAc,CAAC,CAAU;IACvC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,mDAAmD,CAChE,CAAA;AACH,CAAC;AAED,SAAgB,oBAAoB,CAAC,CAAU;IAC7C,OAAO,WAAA,QAAQ,CAAC,QAAQ,CACtB,mDAAmD,EACnD,CAAC,CACF,CAAA;AACH,CAAC","ignoreList":[0]}},
    {"offset": {"line": 17246, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17251, "column": 0}, "map": {"version":3,"file":"deactivateAccount.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/server/deactivateAccount.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** A recommendation to server as to how long they should hold onto the deactivated account before deleting. */\n  deleteAfter?: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AA6BA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 17259, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17264, "column": 0}, "map": {"version":3,"file":"defs.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/server/defs.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface InviteCode {\n  code: string\n  available: number\n  disabled: boolean\n  forAccount: string\n  createdBy: string\n  createdAt: string\n  uses: InviteCodeUse[]\n  [k: string]: unknown\n}\n\nexport function isInviteCode(v: unknown): v is InviteCode {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.server.defs#inviteCode'\n  )\n}\n\nexport function validateInviteCode(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.server.defs#inviteCode', v)\n}\n\nexport interface InviteCodeUse {\n  usedBy: string\n  usedAt: string\n  [k: string]: unknown\n}\n\nexport function isInviteCodeUse(v: unknown): v is InviteCodeUse {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.server.defs#inviteCodeUse'\n  )\n}\n\nexport function validateInviteCodeUse(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.server.defs#inviteCodeUse', v)\n}\n"],"names":[],"mappings":";;;;AAmBA,QAAA,YAAA,GAAA,aAMC;AAED,QAAA,kBAAA,GAAA,mBAEC;AAQD,QAAA,eAAA,GAAA,gBAMC;AAED,QAAA,qBAAA,GAAA,sBAEC;AA3CD,MAAA,qCAAiD;AACjD,MAAA,6CAA+C;AAc/C,SAAgB,YAAY,CAAC,CAAU;IACrC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,oCAAoC,CACjD,CAAA;AACH,CAAC;AAED,SAAgB,kBAAkB,CAAC,CAAU;IAC3C,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,oCAAoC,EAAE,CAAC,CAAC,CAAA;AACnE,CAAC;AAQD,SAAgB,eAAe,CAAC,CAAU;IACxC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,uCAAuC,CACpD,CAAA;AACH,CAAC;AAED,SAAgB,qBAAqB,CAAC,CAAU;IAC9C,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,uCAAuC,EAAE,CAAC,CAAC,CAAA;AACtE,CAAC","ignoreList":[0]}},
    {"offset": {"line": 17286, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17291, "column": 0}, "map": {"version":3,"file":"deleteSession.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/server/deleteSession.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAwBA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 17299, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17304, "column": 0}, "map": {"version":3,"file":"describeServer.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/server/describeServer.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  /** If true, an invite code must be supplied to create an account on this instance. */\n  inviteCodeRequired?: boolean\n  /** If true, a phone verification token must be supplied to create an account on this instance. */\n  phoneVerificationRequired?: boolean\n  /** List of domain suffixes that can be used in account handles. */\n  availableUserDomains: string[]\n  links?: Links\n  contact?: Contact\n  did: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n\nexport interface Links {\n  privacyPolicy?: string\n  termsOfService?: string\n  [k: string]: unknown\n}\n\nexport function isLinks(v: unknown): v is Links {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.server.describeServer#links'\n  )\n}\n\nexport function validateLinks(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.server.describeServer#links', v)\n}\n\nexport interface Contact {\n  email?: string\n  [k: string]: unknown\n}\n\nexport function isContact(v: unknown): v is Contact {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.server.describeServer#contact'\n  )\n}\n\nexport function validateContact(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.server.describeServer#contact', v)\n}\n"],"names":[],"mappings":";;;;AAqCA,QAAA,UAAA,GAAA,WAEC;AAQD,QAAA,OAAA,GAAA,QAMC;AAED,QAAA,aAAA,GAAA,cAEC;AAOD,QAAA,SAAA,GAAA,UAMC;AAED,QAAA,eAAA,GAAA,gBAEC;AArED,MAAA,qCAAiD;AACjD,MAAA,6CAA+C;AA+B/C,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC;AAQD,SAAgB,OAAO,CAAC,CAAU;IAChC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,yCAAyC,CACtD,CAAA;AACH,CAAC;AAED,SAAgB,aAAa,CAAC,CAAU;IACtC,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,yCAAyC,EAAE,CAAC,CAAC,CAAA;AACxE,CAAC;AAOD,SAAgB,SAAS,CAAC,CAAU;IAClC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,2CAA2C,CACxD,CAAA;AACH,CAAC;AAED,SAAgB,eAAe,CAAC,CAAU;IACxC,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,2CAA2C,EAAE,CAAC,CAAC,CAAA;AAC1E,CAAC","ignoreList":[0]}},
    {"offset": {"line": 17330, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17335, "column": 0}, "map": {"version":3,"file":"getSession.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/server/getSession.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  handle: string\n  did: string\n  email?: string\n  emailConfirmed?: boolean\n  emailAuthFactor?: boolean\n  didDoc?: {}\n  active?: boolean\n  /** If active=false, this optional field indicates a possible reason for why the account is not active. If active=false and no status is supplied, then the host makes no claim for why the repository is no longer being hosted. */\n  status?: 'takendown' | 'suspended' | 'deactivated' | (string & {})\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAqCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 17343, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17348, "column": 0}, "map": {"version":3,"file":"requestAccountDelete.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/server/requestAccountDelete.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAwBA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 17356, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17361, "column": 0}, "map": {"version":3,"file":"requestEmailConfirmation.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/server/requestEmailConfirmation.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAwBA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 17369, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17374, "column": 0}, "map": {"version":3,"file":"requestEmailUpdate.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/server/requestEmailUpdate.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  tokenRequired: boolean\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AA8BA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 17382, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17387, "column": 0}, "map": {"version":3,"file":"requestPasswordReset.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/server/requestPasswordReset.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  email: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AA4BA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 17395, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17400, "column": 0}, "map": {"version":3,"file":"reserveSigningKey.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/server/reserveSigningKey.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** The DID to reserve a key for. */\n  did?: string\n  [k: string]: unknown\n}\n\nexport interface OutputSchema {\n  /** The public key for the reserved signing key, in did:key serialization. */\n  signingKey: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAoCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 17408, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17413, "column": 0}, "map": {"version":3,"file":"revokeAppPassword.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/server/revokeAppPassword.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  name: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AA4BA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 17421, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17426, "column": 0}, "map": {"version":3,"file":"getCheckout.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/sync/getCheckout.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  /** The DID of the repo. */\n  did: string\n}\n\nexport type InputSchema = undefined\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: Uint8Array\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AA2BA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 17434, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17439, "column": 0}, "map": {"version":3,"file":"listRepos.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/sync/listRepos.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  repos: Repo[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n\nexport interface Repo {\n  did: string\n  /** Current repo commit CID */\n  head: string\n  rev: string\n  active?: boolean\n  /** If active=false, this optional field indicates a possible reason for why the account is not active. If active=false and no status is supplied, then the host makes no claim for why the repository is no longer being hosted. */\n  status?: 'takendown' | 'suspended' | 'deactivated' | (string & {})\n  [k: string]: unknown\n}\n\nexport function isRepo(v: unknown): v is Repo {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.sync.listRepos#repo'\n  )\n}\n\nexport function validateRepo(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.sync.listRepos#repo', v)\n}\n"],"names":[],"mappings":";;;;AAiCA,QAAA,UAAA,GAAA,WAEC;AAaD,QAAA,MAAA,GAAA,OAMC;AAED,QAAA,YAAA,GAAA,aAEC;AArDD,MAAA,qCAAiD;AACjD,MAAA,6CAA+C;AA2B/C,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC;AAaD,SAAgB,MAAM,CAAC,CAAU;IAC/B,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,iCAAiC,CAC9C,CAAA;AACH,CAAC;AAED,SAAgB,YAAY,CAAC,CAAU;IACrC,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,iCAAiC,EAAE,CAAC,CAAC,CAAA;AAChE,CAAC","ignoreList":[0]}},
    {"offset": {"line": 17457, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17462, "column": 0}, "map": {"version":3,"file":"notifyOfUpdate.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/sync/notifyOfUpdate.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** Hostname of the current service (usually a PDS) that is notifying of update. */\n  hostname: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AA6BA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 17470, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17475, "column": 0}, "map": {"version":3,"file":"requestCrawl.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/sync/requestCrawl.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** Hostname of the current service (eg, PDS) that is requesting to be crawled. */\n  hostname: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AA6BA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 17483, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17488, "column": 0}, "map": {"version":3,"file":"subscribeRepos.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/sync/subscribeRepos.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\n/** Represents an update of repository state. Note that empty commits are allowed, which include no repo data changes, but an update to rev and signature. */\nexport interface Commit {\n  /** The stream sequence number of this message. */\n  seq: number\n  /** DEPRECATED -- unused */\n  rebase: boolean\n  /** Indicates that this commit contained too many ops, or data size was too large. Consumers will need to make a separate request to get missing data. */\n  tooBig: boolean\n  /** The repo this event comes from. */\n  repo: string\n  /** Repo commit object CID. */\n  commit: CID\n  /** DEPRECATED -- unused. WARNING -- nullable and optional; stick with optional to ensure golang interoperability. */\n  prev?: CID | null\n  /** The rev of the emitted commit. Note that this information is also in the commit object included in blocks, unless this is a tooBig event. */\n  rev: string\n  /** The rev of the last emitted commit from this repo (if any). */\n  since: string | null\n  /** CAR file containing relevant blocks, as a diff since the previous repo state. */\n  blocks: Uint8Array\n  ops: RepoOp[]\n  blobs: CID[]\n  /** Timestamp of when this message was originally broadcast. */\n  time: string\n  [k: string]: unknown\n}\n\nexport function isCommit(v: unknown): v is Commit {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.sync.subscribeRepos#commit'\n  )\n}\n\nexport function validateCommit(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.sync.subscribeRepos#commit', v)\n}\n\n/** Represents a change to an account's identity. Could be an updated handle, signing key, or pds hosting endpoint. Serves as a prod to all downstream services to refresh their identity cache. */\nexport interface Identity {\n  seq: number\n  did: string\n  time: string\n  /** The current handle for the account, or 'handle.invalid' if validation fails. This field is optional, might have been validated or passed-through from an upstream source. Semantics and behaviors for PDS vs Relay may evolve in the future; see atproto specs for more details. */\n  handle?: string\n  [k: string]: unknown\n}\n\nexport function isIdentity(v: unknown): v is Identity {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.sync.subscribeRepos#identity'\n  )\n}\n\nexport function validateIdentity(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.sync.subscribeRepos#identity', v)\n}\n\n/** Represents a change to an account's status on a host (eg, PDS or Relay). The semantics of this event are that the status is at the host which emitted the event, not necessarily that at the currently active PDS. Eg, a Relay takedown would emit a takedown with active=false, even if the PDS is still active. */\nexport interface Account {\n  seq: number\n  did: string\n  time: string\n  /** Indicates that the account has a repository which can be fetched from the host that emitted this event. */\n  active: boolean\n  /** If active=false, this optional field indicates a reason for why the account is not active. */\n  status?: 'takendown' | 'suspended' | 'deleted' | 'deactivated' | (string & {})\n  [k: string]: unknown\n}\n\nexport function isAccount(v: unknown): v is Account {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.sync.subscribeRepos#account'\n  )\n}\n\nexport function validateAccount(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.sync.subscribeRepos#account', v)\n}\n\n/** DEPRECATED -- Use #identity event instead */\nexport interface Handle {\n  seq: number\n  did: string\n  handle: string\n  time: string\n  [k: string]: unknown\n}\n\nexport function isHandle(v: unknown): v is Handle {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.sync.subscribeRepos#handle'\n  )\n}\n\nexport function validateHandle(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.sync.subscribeRepos#handle', v)\n}\n\n/** DEPRECATED -- Use #account event instead */\nexport interface Migrate {\n  seq: number\n  did: string\n  migrateTo: string | null\n  time: string\n  [k: string]: unknown\n}\n\nexport function isMigrate(v: unknown): v is Migrate {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.sync.subscribeRepos#migrate'\n  )\n}\n\nexport function validateMigrate(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.sync.subscribeRepos#migrate', v)\n}\n\n/** DEPRECATED -- Use #account event instead */\nexport interface Tombstone {\n  seq: number\n  did: string\n  time: string\n  [k: string]: unknown\n}\n\nexport function isTombstone(v: unknown): v is Tombstone {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.sync.subscribeRepos#tombstone'\n  )\n}\n\nexport function validateTombstone(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.sync.subscribeRepos#tombstone', v)\n}\n\nexport interface Info {\n  name: 'OutdatedCursor' | (string & {})\n  message?: string\n  [k: string]: unknown\n}\n\nexport function isInfo(v: unknown): v is Info {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.sync.subscribeRepos#info'\n  )\n}\n\nexport function validateInfo(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.sync.subscribeRepos#info', v)\n}\n\n/** A repo operation, ie a mutation of a single record. */\nexport interface RepoOp {\n  action: 'create' | 'update' | 'delete' | (string & {})\n  path: string\n  /** For creates and updates, the new record CID. For deletions, null. */\n  cid: CID | null\n  [k: string]: unknown\n}\n\nexport function isRepoOp(v: unknown): v is RepoOp {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.sync.subscribeRepos#repoOp'\n  )\n}\n\nexport function validateRepoOp(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.sync.subscribeRepos#repoOp', v)\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 17558, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17563, "column": 0}, "map": {"version":3,"file":"addReservedHandle.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/temp/addReservedHandle.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  handle: string\n  [k: string]: unknown\n}\n\nexport interface OutputSchema {\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAiCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 17571, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17576, "column": 0}, "map": {"version":3,"file":"checkSignupQueue.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/temp/checkSignupQueue.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  activated: boolean\n  placeInQueue?: number\n  estimatedTimeMs?: number\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AA+BA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 17584, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17589, "column": 0}, "map": {"version":3,"file":"fetchLabels.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/temp/fetchLabels.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoLabelDefs from '../label/defs'\n\nexport interface QueryParams {\n  since?: number\n  limit?: number\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  labels: ComAtprotoLabelDefs.Label[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAiCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 17597, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17602, "column": 0}, "map": {"version":3,"file":"requestPhoneVerification.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/com/atproto/temp/requestPhoneVerification.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  phoneNumber: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AA4BA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 17610, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17615, "column": 0}, "map": {"version":3,"file":"defs.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/actor/defs.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoLabelDefs from '../../../com/atproto/label/defs'\nimport * as AppBskyGraphDefs from '../graph/defs'\nimport * as ComAtprotoRepoStrongRef from '../../../com/atproto/repo/strongRef'\n\nexport interface ProfileViewBasic {\n  did: string\n  handle: string\n  displayName?: string\n  avatar?: string\n  associated?: ProfileAssociated\n  viewer?: ViewerState\n  labels?: ComAtprotoLabelDefs.Label[]\n  createdAt?: string\n  [k: string]: unknown\n}\n\nexport function isProfileViewBasic(v: unknown): v is ProfileViewBasic {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.actor.defs#profileViewBasic'\n  )\n}\n\nexport function validateProfileViewBasic(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#profileViewBasic', v)\n}\n\nexport interface ProfileView {\n  did: string\n  handle: string\n  displayName?: string\n  description?: string\n  avatar?: string\n  associated?: ProfileAssociated\n  indexedAt?: string\n  createdAt?: string\n  viewer?: ViewerState\n  labels?: ComAtprotoLabelDefs.Label[]\n  [k: string]: unknown\n}\n\nexport function isProfileView(v: unknown): v is ProfileView {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.actor.defs#profileView'\n  )\n}\n\nexport function validateProfileView(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#profileView', v)\n}\n\nexport interface ProfileViewDetailed {\n  did: string\n  handle: string\n  displayName?: string\n  description?: string\n  avatar?: string\n  banner?: string\n  followersCount?: number\n  followsCount?: number\n  postsCount?: number\n  associated?: ProfileAssociated\n  joinedViaStarterPack?: AppBskyGraphDefs.StarterPackViewBasic\n  indexedAt?: string\n  createdAt?: string\n  viewer?: ViewerState\n  labels?: ComAtprotoLabelDefs.Label[]\n  pinnedPost?: ComAtprotoRepoStrongRef.Main\n  [k: string]: unknown\n}\n\nexport function isProfileViewDetailed(v: unknown): v is ProfileViewDetailed {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.actor.defs#profileViewDetailed'\n  )\n}\n\nexport function validateProfileViewDetailed(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#profileViewDetailed', v)\n}\n\nexport interface ProfileAssociated {\n  lists?: number\n  feedgens?: number\n  starterPacks?: number\n  labeler?: boolean\n  chat?: ProfileAssociatedChat\n  [k: string]: unknown\n}\n\nexport function isProfileAssociated(v: unknown): v is ProfileAssociated {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.actor.defs#profileAssociated'\n  )\n}\n\nexport function validateProfileAssociated(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#profileAssociated', v)\n}\n\nexport interface ProfileAssociatedChat {\n  allowIncoming: 'all' | 'none' | 'following' | (string & {})\n  [k: string]: unknown\n}\n\nexport function isProfileAssociatedChat(\n  v: unknown,\n): v is ProfileAssociatedChat {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.actor.defs#profileAssociatedChat'\n  )\n}\n\nexport function validateProfileAssociatedChat(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#profileAssociatedChat', v)\n}\n\n/** Metadata about the requesting account's relationship with the subject account. Only has meaningful content for authed requests. */\nexport interface ViewerState {\n  muted?: boolean\n  mutedByList?: AppBskyGraphDefs.ListViewBasic\n  blockedBy?: boolean\n  blocking?: string\n  blockingByList?: AppBskyGraphDefs.ListViewBasic\n  following?: string\n  followedBy?: string\n  knownFollowers?: KnownFollowers\n  [k: string]: unknown\n}\n\nexport function isViewerState(v: unknown): v is ViewerState {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.actor.defs#viewerState'\n  )\n}\n\nexport function validateViewerState(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#viewerState', v)\n}\n\n/** The subject's followers whom you also follow */\nexport interface KnownFollowers {\n  count: number\n  followers: ProfileViewBasic[]\n  [k: string]: unknown\n}\n\nexport function isKnownFollowers(v: unknown): v is KnownFollowers {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.actor.defs#knownFollowers'\n  )\n}\n\nexport function validateKnownFollowers(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#knownFollowers', v)\n}\n\nexport type Preferences = (\n  | AdultContentPref\n  | ContentLabelPref\n  | SavedFeedsPref\n  | SavedFeedsPrefV2\n  | PersonalDetailsPref\n  | FeedViewPref\n  | ThreadViewPref\n  | InterestsPref\n  | MutedWordsPref\n  | HiddenPostsPref\n  | BskyAppStatePref\n  | LabelersPref\n  | { $type: string; [k: string]: unknown }\n)[]\n\nexport interface AdultContentPref {\n  enabled: boolean\n  [k: string]: unknown\n}\n\nexport function isAdultContentPref(v: unknown): v is AdultContentPref {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.actor.defs#adultContentPref'\n  )\n}\n\nexport function validateAdultContentPref(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#adultContentPref', v)\n}\n\nexport interface ContentLabelPref {\n  /** Which labeler does this preference apply to? If undefined, applies globally. */\n  labelerDid?: string\n  label: string\n  visibility: 'ignore' | 'show' | 'warn' | 'hide' | (string & {})\n  [k: string]: unknown\n}\n\nexport function isContentLabelPref(v: unknown): v is ContentLabelPref {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.actor.defs#contentLabelPref'\n  )\n}\n\nexport function validateContentLabelPref(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#contentLabelPref', v)\n}\n\nexport interface SavedFeed {\n  id: string\n  type: 'feed' | 'list' | 'timeline' | (string & {})\n  value: string\n  pinned: boolean\n  [k: string]: unknown\n}\n\nexport function isSavedFeed(v: unknown): v is SavedFeed {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.actor.defs#savedFeed'\n  )\n}\n\nexport function validateSavedFeed(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#savedFeed', v)\n}\n\nexport interface SavedFeedsPrefV2 {\n  items: SavedFeed[]\n  [k: string]: unknown\n}\n\nexport function isSavedFeedsPrefV2(v: unknown): v is SavedFeedsPrefV2 {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.actor.defs#savedFeedsPrefV2'\n  )\n}\n\nexport function validateSavedFeedsPrefV2(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#savedFeedsPrefV2', v)\n}\n\nexport interface SavedFeedsPref {\n  pinned: string[]\n  saved: string[]\n  timelineIndex?: number\n  [k: string]: unknown\n}\n\nexport function isSavedFeedsPref(v: unknown): v is SavedFeedsPref {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.actor.defs#savedFeedsPref'\n  )\n}\n\nexport function validateSavedFeedsPref(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#savedFeedsPref', v)\n}\n\nexport interface PersonalDetailsPref {\n  /** The birth date of account owner. */\n  birthDate?: string\n  [k: string]: unknown\n}\n\nexport function isPersonalDetailsPref(v: unknown): v is PersonalDetailsPref {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.actor.defs#personalDetailsPref'\n  )\n}\n\nexport function validatePersonalDetailsPref(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#personalDetailsPref', v)\n}\n\nexport interface FeedViewPref {\n  /** The URI of the feed, or an identifier which describes the feed. */\n  feed: string\n  /** Hide replies in the feed. */\n  hideReplies?: boolean\n  /** Hide replies in the feed if they are not by followed users. */\n  hideRepliesByUnfollowed: boolean\n  /** Hide replies in the feed if they do not have this number of likes. */\n  hideRepliesByLikeCount?: number\n  /** Hide reposts in the feed. */\n  hideReposts?: boolean\n  /** Hide quote posts in the feed. */\n  hideQuotePosts?: boolean\n  [k: string]: unknown\n}\n\nexport function isFeedViewPref(v: unknown): v is FeedViewPref {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.actor.defs#feedViewPref'\n  )\n}\n\nexport function validateFeedViewPref(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#feedViewPref', v)\n}\n\nexport interface ThreadViewPref {\n  /** Sorting mode for threads. */\n  sort?:\n    | 'oldest'\n    | 'newest'\n    | 'most-likes'\n    | 'random'\n    | 'hotness'\n    | (string & {})\n  /** Show followed users at the top of all replies. */\n  prioritizeFollowedUsers?: boolean\n  [k: string]: unknown\n}\n\nexport function isThreadViewPref(v: unknown): v is ThreadViewPref {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.actor.defs#threadViewPref'\n  )\n}\n\nexport function validateThreadViewPref(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#threadViewPref', v)\n}\n\nexport interface InterestsPref {\n  /** A list of tags which describe the account owner's interests gathered during onboarding. */\n  tags: string[]\n  [k: string]: unknown\n}\n\nexport function isInterestsPref(v: unknown): v is InterestsPref {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.actor.defs#interestsPref'\n  )\n}\n\nexport function validateInterestsPref(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#interestsPref', v)\n}\n\nexport type MutedWordTarget = 'content' | 'tag' | (string & {})\n\n/** A word that the account owner has muted. */\nexport interface MutedWord {\n  id?: string\n  /** The muted word itself. */\n  value: string\n  /** The intended targets of the muted word. */\n  targets: MutedWordTarget[]\n  /** Groups of users to apply the muted word to. If undefined, applies to all users. */\n  actorTarget: 'all' | 'exclude-following' | (string & {})\n  /** The date and time at which the muted word will expire and no longer be applied. */\n  expiresAt?: string\n  [k: string]: unknown\n}\n\nexport function isMutedWord(v: unknown): v is MutedWord {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.actor.defs#mutedWord'\n  )\n}\n\nexport function validateMutedWord(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#mutedWord', v)\n}\n\nexport interface MutedWordsPref {\n  /** A list of words the account owner has muted. */\n  items: MutedWord[]\n  [k: string]: unknown\n}\n\nexport function isMutedWordsPref(v: unknown): v is MutedWordsPref {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.actor.defs#mutedWordsPref'\n  )\n}\n\nexport function validateMutedWordsPref(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#mutedWordsPref', v)\n}\n\nexport interface HiddenPostsPref {\n  /** A list of URIs of posts the account owner has hidden. */\n  items: string[]\n  [k: string]: unknown\n}\n\nexport function isHiddenPostsPref(v: unknown): v is HiddenPostsPref {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.actor.defs#hiddenPostsPref'\n  )\n}\n\nexport function validateHiddenPostsPref(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#hiddenPostsPref', v)\n}\n\nexport interface LabelersPref {\n  labelers: LabelerPrefItem[]\n  [k: string]: unknown\n}\n\nexport function isLabelersPref(v: unknown): v is LabelersPref {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.actor.defs#labelersPref'\n  )\n}\n\nexport function validateLabelersPref(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#labelersPref', v)\n}\n\nexport interface LabelerPrefItem {\n  did: string\n  [k: string]: unknown\n}\n\nexport function isLabelerPrefItem(v: unknown): v is LabelerPrefItem {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.actor.defs#labelerPrefItem'\n  )\n}\n\nexport function validateLabelerPrefItem(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#labelerPrefItem', v)\n}\n\n/** A grab bag of state that's specific to the bsky.app program. Third-party apps shouldn't use this. */\nexport interface BskyAppStatePref {\n  activeProgressGuide?: BskyAppProgressGuide\n  /** An array of tokens which identify nudges (modals, popups, tours, highlight dots) that should be shown to the user. */\n  queuedNudges?: string[]\n  /** Storage for NUXs the user has encountered. */\n  nuxs?: Nux[]\n  [k: string]: unknown\n}\n\nexport function isBskyAppStatePref(v: unknown): v is BskyAppStatePref {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.actor.defs#bskyAppStatePref'\n  )\n}\n\nexport function validateBskyAppStatePref(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#bskyAppStatePref', v)\n}\n\n/** If set, an active progress guide. Once completed, can be set to undefined. Should have unspecced fields tracking progress. */\nexport interface BskyAppProgressGuide {\n  guide: string\n  [k: string]: unknown\n}\n\nexport function isBskyAppProgressGuide(v: unknown): v is BskyAppProgressGuide {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.actor.defs#bskyAppProgressGuide'\n  )\n}\n\nexport function validateBskyAppProgressGuide(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#bskyAppProgressGuide', v)\n}\n\n/** A new user experiences (NUX) storage object */\nexport interface Nux {\n  id: string\n  completed: boolean\n  /** Arbitrary data for the NUX. The structure is defined by the NUX itself. Limited to 300 characters. */\n  data?: string\n  /** The date and time at which the NUX will expire and should be considered completed. */\n  expiresAt?: string\n  [k: string]: unknown\n}\n\nexport function isNux(v: unknown): v is Nux {\n  return (\n    isObj(v) && hasProp(v, '$type') && v.$type === 'app.bsky.actor.defs#nux'\n  )\n}\n\nexport function validateNux(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#nux', v)\n}\n"],"names":[],"mappings":";;;;AAuBA,QAAA,kBAAA,GAAA,mBAMC;AAED,QAAA,wBAAA,GAAA,yBAEC;AAgBD,QAAA,aAAA,GAAA,cAMC;AAED,QAAA,mBAAA,GAAA,oBAEC;AAsBD,QAAA,qBAAA,GAAA,sBAMC;AAED,QAAA,2BAAA,GAAA,4BAEC;AAWD,QAAA,mBAAA,GAAA,oBAMC;AAED,QAAA,yBAAA,GAAA,0BAEC;AAOD,QAAA,uBAAA,GAAA,wBAQC;AAED,QAAA,6BAAA,GAAA,8BAEC;AAeD,QAAA,aAAA,GAAA,cAMC;AAED,QAAA,mBAAA,GAAA,oBAEC;AASD,QAAA,gBAAA,GAAA,iBAMC;AAED,QAAA,sBAAA,GAAA,uBAEC;AAuBD,QAAA,kBAAA,GAAA,mBAMC;AAED,QAAA,wBAAA,GAAA,yBAEC;AAUD,QAAA,kBAAA,GAAA,mBAMC;AAED,QAAA,wBAAA,GAAA,yBAEC;AAUD,QAAA,WAAA,GAAA,YAMC;AAED,QAAA,iBAAA,GAAA,kBAEC;AAOD,QAAA,kBAAA,GAAA,mBAMC;AAED,QAAA,wBAAA,GAAA,yBAEC;AASD,QAAA,gBAAA,GAAA,iBAMC;AAED,QAAA,sBAAA,GAAA,uBAEC;AAQD,QAAA,qBAAA,GAAA,sBAMC;AAED,QAAA,2BAAA,GAAA,4BAEC;AAkBD,QAAA,cAAA,GAAA,eAMC;AAED,QAAA,oBAAA,GAAA,qBAEC;AAgBD,QAAA,gBAAA,GAAA,iBAMC;AAED,QAAA,sBAAA,GAAA,uBAEC;AAQD,QAAA,eAAA,GAAA,gBAMC;AAED,QAAA,qBAAA,GAAA,sBAEC;AAkBD,QAAA,WAAA,GAAA,YAMC;AAED,QAAA,iBAAA,GAAA,kBAEC;AAQD,QAAA,gBAAA,GAAA,iBAMC;AAED,QAAA,sBAAA,GAAA,uBAEC;AAQD,QAAA,iBAAA,GAAA,kBAMC;AAED,QAAA,uBAAA,GAAA,wBAEC;AAOD,QAAA,cAAA,GAAA,eAMC;AAED,QAAA,oBAAA,GAAA,qBAEC;AAOD,QAAA,iBAAA,GAAA,kBAMC;AAED,QAAA,uBAAA,GAAA,wBAEC;AAYD,QAAA,kBAAA,GAAA,mBAMC;AAED,QAAA,wBAAA,GAAA,yBAEC;AAQD,QAAA,sBAAA,GAAA,uBAMC;AAED,QAAA,4BAAA,GAAA,6BAEC;AAaD,QAAA,KAAA,GAAA,MAIC;AAED,QAAA,WAAA,GAAA,YAEC;AAjhBD,MAAA,qCAAiD;AACjD,MAAA,6CAA+C;AAkB/C,SAAgB,kBAAkB,CAAC,CAAU;IAC3C,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,sCAAsC,CACnD,CAAA;AACH,CAAC;AAED,SAAgB,wBAAwB,CAAC,CAAU;IACjD,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,sCAAsC,EAAE,CAAC,CAAC,CAAA;AACrE,CAAC;AAgBD,SAAgB,aAAa,CAAC,CAAU;IACtC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,iCAAiC,CAC9C,CAAA;AACH,CAAC;AAED,SAAgB,mBAAmB,CAAC,CAAU;IAC5C,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,iCAAiC,EAAE,CAAC,CAAC,CAAA;AAChE,CAAC;AAsBD,SAAgB,qBAAqB,CAAC,CAAU;IAC9C,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,yCAAyC,CACtD,CAAA;AACH,CAAC;AAED,SAAgB,2BAA2B,CAAC,CAAU;IACpD,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,yCAAyC,EAAE,CAAC,CAAC,CAAA;AACxE,CAAC;AAWD,SAAgB,mBAAmB,CAAC,CAAU;IAC5C,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,uCAAuC,CACpD,CAAA;AACH,CAAC;AAED,SAAgB,yBAAyB,CAAC,CAAU;IAClD,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,uCAAuC,EAAE,CAAC,CAAC,CAAA;AACtE,CAAC;AAOD,SAAgB,uBAAuB,CACrC,CAAU;IAEV,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,2CAA2C,CACxD,CAAA;AACH,CAAC;AAED,SAAgB,6BAA6B,CAAC,CAAU;IACtD,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,2CAA2C,EAAE,CAAC,CAAC,CAAA;AAC1E,CAAC;AAeD,SAAgB,aAAa,CAAC,CAAU;IACtC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,iCAAiC,CAC9C,CAAA;AACH,CAAC;AAED,SAAgB,mBAAmB,CAAC,CAAU;IAC5C,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,iCAAiC,EAAE,CAAC,CAAC,CAAA;AAChE,CAAC;AASD,SAAgB,gBAAgB,CAAC,CAAU;IACzC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,oCAAoC,CACjD,CAAA;AACH,CAAC;AAED,SAAgB,sBAAsB,CAAC,CAAU;IAC/C,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,oCAAoC,EAAE,CAAC,CAAC,CAAA;AACnE,CAAC;AAuBD,SAAgB,kBAAkB,CAAC,CAAU;IAC3C,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,sCAAsC,CACnD,CAAA;AACH,CAAC;AAED,SAAgB,wBAAwB,CAAC,CAAU;IACjD,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,sCAAsC,EAAE,CAAC,CAAC,CAAA;AACrE,CAAC;AAUD,SAAgB,kBAAkB,CAAC,CAAU;IAC3C,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,sCAAsC,CACnD,CAAA;AACH,CAAC;AAED,SAAgB,wBAAwB,CAAC,CAAU;IACjD,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,sCAAsC,EAAE,CAAC,CAAC,CAAA;AACrE,CAAC;AAUD,SAAgB,WAAW,CAAC,CAAU;IACpC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,+BAA+B,CAC5C,CAAA;AACH,CAAC;AAED,SAAgB,iBAAiB,CAAC,CAAU;IAC1C,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,+BAA+B,EAAE,CAAC,CAAC,CAAA;AAC9D,CAAC;AAOD,SAAgB,kBAAkB,CAAC,CAAU;IAC3C,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,sCAAsC,CACnD,CAAA;AACH,CAAC;AAED,SAAgB,wBAAwB,CAAC,CAAU;IACjD,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,sCAAsC,EAAE,CAAC,CAAC,CAAA;AACrE,CAAC;AASD,SAAgB,gBAAgB,CAAC,CAAU;IACzC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,oCAAoC,CACjD,CAAA;AACH,CAAC;AAED,SAAgB,sBAAsB,CAAC,CAAU;IAC/C,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,oCAAoC,EAAE,CAAC,CAAC,CAAA;AACnE,CAAC;AAQD,SAAgB,qBAAqB,CAAC,CAAU;IAC9C,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,yCAAyC,CACtD,CAAA;AACH,CAAC;AAED,SAAgB,2BAA2B,CAAC,CAAU;IACpD,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,yCAAyC,EAAE,CAAC,CAAC,CAAA;AACxE,CAAC;AAkBD,SAAgB,cAAc,CAAC,CAAU;IACvC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,kCAAkC,CAC/C,CAAA;AACH,CAAC;AAED,SAAgB,oBAAoB,CAAC,CAAU;IAC7C,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,kCAAkC,EAAE,CAAC,CAAC,CAAA;AACjE,CAAC;AAgBD,SAAgB,gBAAgB,CAAC,CAAU;IACzC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,oCAAoC,CACjD,CAAA;AACH,CAAC;AAED,SAAgB,sBAAsB,CAAC,CAAU;IAC/C,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,oCAAoC,EAAE,CAAC,CAAC,CAAA;AACnE,CAAC;AAQD,SAAgB,eAAe,CAAC,CAAU;IACxC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,mCAAmC,CAChD,CAAA;AACH,CAAC;AAED,SAAgB,qBAAqB,CAAC,CAAU;IAC9C,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,mCAAmC,EAAE,CAAC,CAAC,CAAA;AAClE,CAAC;AAkBD,SAAgB,WAAW,CAAC,CAAU;IACpC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,+BAA+B,CAC5C,CAAA;AACH,CAAC;AAED,SAAgB,iBAAiB,CAAC,CAAU;IAC1C,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,+BAA+B,EAAE,CAAC,CAAC,CAAA;AAC9D,CAAC;AAQD,SAAgB,gBAAgB,CAAC,CAAU;IACzC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,oCAAoC,CACjD,CAAA;AACH,CAAC;AAED,SAAgB,sBAAsB,CAAC,CAAU;IAC/C,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,oCAAoC,EAAE,CAAC,CAAC,CAAA;AACnE,CAAC;AAQD,SAAgB,iBAAiB,CAAC,CAAU;IAC1C,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,qCAAqC,CAClD,CAAA;AACH,CAAC;AAED,SAAgB,uBAAuB,CAAC,CAAU;IAChD,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,qCAAqC,EAAE,CAAC,CAAC,CAAA;AACpE,CAAC;AAOD,SAAgB,cAAc,CAAC,CAAU;IACvC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,kCAAkC,CAC/C,CAAA;AACH,CAAC;AAED,SAAgB,oBAAoB,CAAC,CAAU;IAC7C,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,kCAAkC,EAAE,CAAC,CAAC,CAAA;AACjE,CAAC;AAOD,SAAgB,iBAAiB,CAAC,CAAU;IAC1C,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,qCAAqC,CAClD,CAAA;AACH,CAAC;AAED,SAAgB,uBAAuB,CAAC,CAAU;IAChD,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,qCAAqC,EAAE,CAAC,CAAC,CAAA;AACpE,CAAC;AAYD,SAAgB,kBAAkB,CAAC,CAAU;IAC3C,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,sCAAsC,CACnD,CAAA;AACH,CAAC;AAED,SAAgB,wBAAwB,CAAC,CAAU;IACjD,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,sCAAsC,EAAE,CAAC,CAAC,CAAA;AACrE,CAAC;AAQD,SAAgB,sBAAsB,CAAC,CAAU;IAC/C,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,0CAA0C,CACvD,CAAA;AACH,CAAC;AAED,SAAgB,4BAA4B,CAAC,CAAU;IACrD,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,0CAA0C,EAAE,CAAC,CAAC,CAAA;AACzE,CAAC;AAaD,SAAgB,KAAK,CAAC,CAAU;IAC9B,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IAAI,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,KAAK,KAAK,yBAAyB,CACzE,CAAA;AACH,CAAC;AAED,SAAgB,WAAW,CAAC,CAAU;IACpC,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,yBAAyB,EAAE,CAAC,CAAC,CAAA;AACxD,CAAC","ignoreList":[0]}},
    {"offset": {"line": 17813, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17818, "column": 0}, "map": {"version":3,"file":"getPreferences.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/actor/getPreferences.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from './defs'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  preferences: AppBskyActorDefs.Preferences\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AA8BA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 17826, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17831, "column": 0}, "map": {"version":3,"file":"getProfile.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/actor/getProfile.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from './defs'\n\nexport interface QueryParams {\n  /** Handle or DID of account to fetch profile of. */\n  actor: string\n}\n\nexport type InputSchema = undefined\nexport type OutputSchema = AppBskyActorDefs.ProfileViewDetailed\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AA6BA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 17839, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17844, "column": 0}, "map": {"version":3,"file":"getProfiles.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/actor/getProfiles.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from './defs'\n\nexport interface QueryParams {\n  actors: string[]\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  profiles: AppBskyActorDefs.ProfileViewDetailed[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAgCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 17852, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17857, "column": 0}, "map": {"version":3,"file":"getSuggestions.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/actor/getSuggestions.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from './defs'\n\nexport interface QueryParams {\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  actors: AppBskyActorDefs.ProfileView[]\n  /** Snowflake for this recommendation, use when submitting recommendation events. */\n  recId?: number\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAoCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 17865, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17870, "column": 0}, "map": {"version":3,"file":"profile.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/actor/profile.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoLabelDefs from '../../../com/atproto/label/defs'\nimport * as ComAtprotoRepoStrongRef from '../../../com/atproto/repo/strongRef'\n\nexport interface Record {\n  displayName?: string\n  /** Free-form profile description text. */\n  description?: string\n  /** Small image to be displayed next to posts from account. AKA, 'profile picture' */\n  avatar?: BlobRef\n  /** Larger horizontal image to display behind profile view. */\n  banner?: BlobRef\n  labels?:\n    | ComAtprotoLabelDefs.SelfLabels\n    | { $type: string; [k: string]: unknown }\n  joinedViaStarterPack?: ComAtprotoRepoStrongRef.Main\n  pinnedPost?: ComAtprotoRepoStrongRef.Main\n  createdAt?: string\n  [k: string]: unknown\n}\n\nexport function isRecord(v: unknown): v is Record {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.actor.profile#main' ||\n      v.$type === 'app.bsky.actor.profile')\n  )\n}\n\nexport function validateRecord(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.profile#main', v)\n}\n"],"names":[],"mappings":";;;;AA2BA,QAAA,QAAA,GAAA,SAOC;AAED,QAAA,cAAA,GAAA,eAEC;AAlCD,MAAA,qCAAiD;AACjD,MAAA,6CAA+C;AAsB/C,SAAgB,QAAQ,CAAC,CAAU;IACjC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,CAAC,KAAK,KAAK,6BAA6B,IACxC,CAAC,CAAC,KAAK,KAAK,wBAAwB,CAAC,CACxC,CAAA;AACH,CAAC;AAED,SAAgB,cAAc,CAAC,CAAU;IACvC,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,6BAA6B,EAAE,CAAC,CAAC,CAAA;AAC5D,CAAC","ignoreList":[0]}},
    {"offset": {"line": 17884, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17889, "column": 0}, "map": {"version":3,"file":"putPreferences.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/actor/putPreferences.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from './defs'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  preferences: AppBskyActorDefs.Preferences\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AA6BA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 17897, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17902, "column": 0}, "map": {"version":3,"file":"searchActors.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/actor/searchActors.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from './defs'\n\nexport interface QueryParams {\n  /** DEPRECATED: use 'q' instead. */\n  term?: string\n  /** Search query string. Syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended. */\n  q?: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  actors: AppBskyActorDefs.ProfileView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAsCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 17910, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17915, "column": 0}, "map": {"version":3,"file":"searchActorsTypeahead.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/actor/searchActorsTypeahead.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from './defs'\n\nexport interface QueryParams {\n  /** DEPRECATED: use 'q' instead. */\n  term?: string\n  /** Search query prefix; not a full query string. */\n  q?: string\n  limit?: number\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  actors: AppBskyActorDefs.ProfileViewBasic[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAoCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 17923, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17928, "column": 0}, "map": {"version":3,"file":"defs.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/embed/defs.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\n/** width:height represents an aspect ratio. It may be approximate, and may not correspond to absolute dimensions in any given unit. */\nexport interface AspectRatio {\n  width: number\n  height: number\n  [k: string]: unknown\n}\n\nexport function isAspectRatio(v: unknown): v is AspectRatio {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.embed.defs#aspectRatio'\n  )\n}\n\nexport function validateAspectRatio(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.defs#aspectRatio', v)\n}\n"],"names":[],"mappings":";;;;AAeA,QAAA,aAAA,GAAA,cAMC;AAED,QAAA,mBAAA,GAAA,oBAEC;AArBD,MAAA,qCAAiD;AACjD,MAAA,6CAA+C;AAU/C,SAAgB,aAAa,CAAC,CAAU;IACtC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,iCAAiC,CAC9C,CAAA;AACH,CAAC;AAED,SAAgB,mBAAmB,CAAC,CAAU;IAC5C,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,iCAAiC,EAAE,CAAC,CAAC,CAAA;AAChE,CAAC","ignoreList":[0]}},
    {"offset": {"line": 17942, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17947, "column": 0}, "map": {"version":3,"file":"external.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/embed/external.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\n/** A representation of some externally linked content (eg, a URL and 'card'), embedded in a Bluesky record (eg, a post). */\nexport interface Main {\n  external: External\n  [k: string]: unknown\n}\n\nexport function isMain(v: unknown): v is Main {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.embed.external#main' ||\n      v.$type === 'app.bsky.embed.external')\n  )\n}\n\nexport function validateMain(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.external#main', v)\n}\n\nexport interface External {\n  uri: string\n  title: string\n  description: string\n  thumb?: BlobRef\n  [k: string]: unknown\n}\n\nexport function isExternal(v: unknown): v is External {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.embed.external#external'\n  )\n}\n\nexport function validateExternal(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.external#external', v)\n}\n\nexport interface View {\n  external: ViewExternal\n  [k: string]: unknown\n}\n\nexport function isView(v: unknown): v is View {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.embed.external#view'\n  )\n}\n\nexport function validateView(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.external#view', v)\n}\n\nexport interface ViewExternal {\n  uri: string\n  title: string\n  description: string\n  thumb?: string\n  [k: string]: unknown\n}\n\nexport function isViewExternal(v: unknown): v is ViewExternal {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.embed.external#viewExternal'\n  )\n}\n\nexport function validateViewExternal(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.external#viewExternal', v)\n}\n"],"names":[],"mappings":";;;;AAcA,QAAA,MAAA,GAAA,OAOC;AAED,QAAA,YAAA,GAAA,aAEC;AAUD,QAAA,UAAA,GAAA,WAMC;AAED,QAAA,gBAAA,GAAA,iBAEC;AAOD,QAAA,MAAA,GAAA,OAMC;AAED,QAAA,YAAA,GAAA,aAEC;AAUD,QAAA,cAAA,GAAA,eAMC;AAED,QAAA,oBAAA,GAAA,qBAEC;AA9ED,MAAA,qCAAiD;AACjD,MAAA,6CAA+C;AAS/C,SAAgB,MAAM,CAAC,CAAU;IAC/B,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,CAAC,KAAK,KAAK,8BAA8B,IACzC,CAAC,CAAC,KAAK,KAAK,yBAAyB,CAAC,CACzC,CAAA;AACH,CAAC;AAED,SAAgB,YAAY,CAAC,CAAU;IACrC,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,8BAA8B,EAAE,CAAC,CAAC,CAAA;AAC7D,CAAC;AAUD,SAAgB,UAAU,CAAC,CAAU;IACnC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,kCAAkC,CAC/C,CAAA;AACH,CAAC;AAED,SAAgB,gBAAgB,CAAC,CAAU;IACzC,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,kCAAkC,EAAE,CAAC,CAAC,CAAA;AACjE,CAAC;AAOD,SAAgB,MAAM,CAAC,CAAU;IAC/B,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,8BAA8B,CAC3C,CAAA;AACH,CAAC;AAED,SAAgB,YAAY,CAAC,CAAU;IACrC,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,8BAA8B,EAAE,CAAC,CAAC,CAAA;AAC7D,CAAC;AAUD,SAAgB,cAAc,CAAC,CAAU;IACvC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,sCAAsC,CACnD,CAAA;AACH,CAAC;AAED,SAAgB,oBAAoB,CAAC,CAAU;IAC7C,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,sCAAsC,EAAE,CAAC,CAAC,CAAA;AACrE,CAAC","ignoreList":[0]}},
    {"offset": {"line": 17985, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17990, "column": 0}, "map": {"version":3,"file":"images.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/embed/images.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyEmbedDefs from './defs'\n\nexport interface Main {\n  images: Image[]\n  [k: string]: unknown\n}\n\nexport function isMain(v: unknown): v is Main {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.embed.images#main' ||\n      v.$type === 'app.bsky.embed.images')\n  )\n}\n\nexport function validateMain(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.images#main', v)\n}\n\nexport interface Image {\n  image: BlobRef\n  /** Alt text description of the image, for accessibility. */\n  alt: string\n  aspectRatio?: AppBskyEmbedDefs.AspectRatio\n  [k: string]: unknown\n}\n\nexport function isImage(v: unknown): v is Image {\n  return (\n    isObj(v) && hasProp(v, '$type') && v.$type === 'app.bsky.embed.images#image'\n  )\n}\n\nexport function validateImage(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.images#image', v)\n}\n\nexport interface View {\n  images: ViewImage[]\n  [k: string]: unknown\n}\n\nexport function isView(v: unknown): v is View {\n  return (\n    isObj(v) && hasProp(v, '$type') && v.$type === 'app.bsky.embed.images#view'\n  )\n}\n\nexport function validateView(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.images#view', v)\n}\n\nexport interface ViewImage {\n  /** Fully-qualified URL where a thumbnail of the image can be fetched. For example, CDN location provided by the App View. */\n  thumb: string\n  /** Fully-qualified URL where a large version of the image can be fetched. May or may not be the exact original blob. For example, CDN location provided by the App View. */\n  fullsize: string\n  /** Alt text description of the image, for accessibility. */\n  alt: string\n  aspectRatio?: AppBskyEmbedDefs.AspectRatio\n  [k: string]: unknown\n}\n\nexport function isViewImage(v: unknown): v is ViewImage {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.embed.images#viewImage'\n  )\n}\n\nexport function validateViewImage(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.images#viewImage', v)\n}\n"],"names":[],"mappings":";;;;AAcA,QAAA,MAAA,GAAA,OAOC;AAED,QAAA,YAAA,GAAA,aAEC;AAUD,QAAA,OAAA,GAAA,QAIC;AAED,QAAA,aAAA,GAAA,cAEC;AAOD,QAAA,MAAA,GAAA,OAIC;AAED,QAAA,YAAA,GAAA,aAEC;AAaD,QAAA,WAAA,GAAA,YAMC;AAED,QAAA,iBAAA,GAAA,kBAEC;AA7ED,MAAA,qCAAiD;AACjD,MAAA,6CAA+C;AAS/C,SAAgB,MAAM,CAAC,CAAU;IAC/B,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,CAAC,KAAK,KAAK,4BAA4B,IACvC,CAAC,CAAC,KAAK,KAAK,uBAAuB,CAAC,CACvC,CAAA;AACH,CAAC;AAED,SAAgB,YAAY,CAAC,CAAU;IACrC,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,4BAA4B,EAAE,CAAC,CAAC,CAAA;AAC3D,CAAC;AAUD,SAAgB,OAAO,CAAC,CAAU;IAChC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IAAI,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,KAAK,KAAK,6BAA6B,CAC7E,CAAA;AACH,CAAC;AAED,SAAgB,aAAa,CAAC,CAAU;IACtC,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,6BAA6B,EAAE,CAAC,CAAC,CAAA;AAC5D,CAAC;AAOD,SAAgB,MAAM,CAAC,CAAU;IAC/B,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IAAI,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,KAAK,KAAK,4BAA4B,CAC5E,CAAA;AACH,CAAC;AAED,SAAgB,YAAY,CAAC,CAAU;IACrC,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,4BAA4B,EAAE,CAAC,CAAC,CAAA;AAC3D,CAAC;AAaD,SAAgB,WAAW,CAAC,CAAU;IACpC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,iCAAiC,CAC9C,CAAA;AACH,CAAC;AAED,SAAgB,iBAAiB,CAAC,CAAU;IAC1C,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,iCAAiC,EAAE,CAAC,CAAC,CAAA;AAChE,CAAC","ignoreList":[0]}},
    {"offset": {"line": 18028, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18033, "column": 0}, "map": {"version":3,"file":"record.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/embed/record.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoRepoStrongRef from '../../../com/atproto/repo/strongRef'\nimport * as AppBskyFeedDefs from '../feed/defs'\nimport * as AppBskyGraphDefs from '../graph/defs'\nimport * as AppBskyLabelerDefs from '../labeler/defs'\nimport * as AppBskyActorDefs from '../actor/defs'\nimport * as ComAtprotoLabelDefs from '../../../com/atproto/label/defs'\nimport * as AppBskyEmbedImages from './images'\nimport * as AppBskyEmbedVideo from './video'\nimport * as AppBskyEmbedExternal from './external'\nimport * as AppBskyEmbedRecordWithMedia from './recordWithMedia'\n\nexport interface Main {\n  record: ComAtprotoRepoStrongRef.Main\n  [k: string]: unknown\n}\n\nexport function isMain(v: unknown): v is Main {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.embed.record#main' ||\n      v.$type === 'app.bsky.embed.record')\n  )\n}\n\nexport function validateMain(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.record#main', v)\n}\n\nexport interface View {\n  record:\n    | ViewRecord\n    | ViewNotFound\n    | ViewBlocked\n    | ViewDetached\n    | AppBskyFeedDefs.GeneratorView\n    | AppBskyGraphDefs.ListView\n    | AppBskyLabelerDefs.LabelerView\n    | AppBskyGraphDefs.StarterPackViewBasic\n    | { $type: string; [k: string]: unknown }\n  [k: string]: unknown\n}\n\nexport function isView(v: unknown): v is View {\n  return (\n    isObj(v) && hasProp(v, '$type') && v.$type === 'app.bsky.embed.record#view'\n  )\n}\n\nexport function validateView(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.record#view', v)\n}\n\nexport interface ViewRecord {\n  uri: string\n  cid: string\n  author: AppBskyActorDefs.ProfileViewBasic\n  /** The record data itself. */\n  value: {}\n  labels?: ComAtprotoLabelDefs.Label[]\n  replyCount?: number\n  repostCount?: number\n  likeCount?: number\n  quoteCount?: number\n  embeds?: (\n    | AppBskyEmbedImages.View\n    | AppBskyEmbedVideo.View\n    | AppBskyEmbedExternal.View\n    | View\n    | AppBskyEmbedRecordWithMedia.View\n    | { $type: string; [k: string]: unknown }\n  )[]\n  indexedAt: string\n  [k: string]: unknown\n}\n\nexport function isViewRecord(v: unknown): v is ViewRecord {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.embed.record#viewRecord'\n  )\n}\n\nexport function validateViewRecord(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.record#viewRecord', v)\n}\n\nexport interface ViewNotFound {\n  uri: string\n  notFound: true\n  [k: string]: unknown\n}\n\nexport function isViewNotFound(v: unknown): v is ViewNotFound {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.embed.record#viewNotFound'\n  )\n}\n\nexport function validateViewNotFound(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.record#viewNotFound', v)\n}\n\nexport interface ViewBlocked {\n  uri: string\n  blocked: true\n  author: AppBskyFeedDefs.BlockedAuthor\n  [k: string]: unknown\n}\n\nexport function isViewBlocked(v: unknown): v is ViewBlocked {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.embed.record#viewBlocked'\n  )\n}\n\nexport function validateViewBlocked(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.record#viewBlocked', v)\n}\n\nexport interface ViewDetached {\n  uri: string\n  detached: true\n  [k: string]: unknown\n}\n\nexport function isViewDetached(v: unknown): v is ViewDetached {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.embed.record#viewDetached'\n  )\n}\n\nexport function validateViewDetached(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.record#viewDetached', v)\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 18087, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18092, "column": 0}, "map": {"version":3,"file":"recordWithMedia.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/embed/recordWithMedia.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyEmbedRecord from './record'\nimport * as AppBskyEmbedImages from './images'\nimport * as AppBskyEmbedVideo from './video'\nimport * as AppBskyEmbedExternal from './external'\n\nexport interface Main {\n  record: AppBskyEmbedRecord.Main\n  media:\n    | AppBskyEmbedImages.Main\n    | AppBskyEmbedVideo.Main\n    | AppBskyEmbedExternal.Main\n    | { $type: string; [k: string]: unknown }\n  [k: string]: unknown\n}\n\nexport function isMain(v: unknown): v is Main {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.embed.recordWithMedia#main' ||\n      v.$type === 'app.bsky.embed.recordWithMedia')\n  )\n}\n\nexport function validateMain(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.recordWithMedia#main', v)\n}\n\nexport interface View {\n  record: AppBskyEmbedRecord.View\n  media:\n    | AppBskyEmbedImages.View\n    | AppBskyEmbedVideo.View\n    | AppBskyEmbedExternal.View\n    | { $type: string; [k: string]: unknown }\n  [k: string]: unknown\n}\n\nexport function isView(v: unknown): v is View {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.embed.recordWithMedia#view'\n  )\n}\n\nexport function validateView(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.recordWithMedia#view', v)\n}\n"],"names":[],"mappings":";;;;AAsBA,QAAA,MAAA,GAAA,OAOC;AAED,QAAA,YAAA,GAAA,aAEC;AAYD,QAAA,MAAA,GAAA,OAMC;AAED,QAAA,YAAA,GAAA,aAEC;AAnDD,MAAA,qCAAiD;AACjD,MAAA,6CAA+C;AAiB/C,SAAgB,MAAM,CAAC,CAAU;IAC/B,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,CAAC,KAAK,KAAK,qCAAqC,IAChD,CAAC,CAAC,KAAK,KAAK,gCAAgC,CAAC,CAChD,CAAA;AACH,CAAC;AAED,SAAgB,YAAY,CAAC,CAAU;IACrC,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,qCAAqC,EAAE,CAAC,CAAC,CAAA;AACpE,CAAC;AAYD,SAAgB,MAAM,CAAC,CAAU;IAC/B,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,qCAAqC,CAClD,CAAA;AACH,CAAC;AAED,SAAgB,YAAY,CAAC,CAAU;IACrC,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,qCAAqC,EAAE,CAAC,CAAC,CAAA;AACpE,CAAC","ignoreList":[0]}},
    {"offset": {"line": 18114, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18119, "column": 0}, "map": {"version":3,"file":"video.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/embed/video.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyEmbedDefs from './defs'\n\nexport interface Main {\n  video: BlobRef\n  captions?: Caption[]\n  /** Alt text description of the video, for accessibility. */\n  alt?: string\n  aspectRatio?: AppBskyEmbedDefs.AspectRatio\n  [k: string]: unknown\n}\n\nexport function isMain(v: unknown): v is Main {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.embed.video#main' ||\n      v.$type === 'app.bsky.embed.video')\n  )\n}\n\nexport function validateMain(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.video#main', v)\n}\n\nexport interface Caption {\n  lang: string\n  file: BlobRef\n  [k: string]: unknown\n}\n\nexport function isCaption(v: unknown): v is Caption {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.embed.video#caption'\n  )\n}\n\nexport function validateCaption(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.video#caption', v)\n}\n\nexport interface View {\n  cid: string\n  playlist: string\n  thumbnail?: string\n  alt?: string\n  aspectRatio?: AppBskyEmbedDefs.AspectRatio\n  [k: string]: unknown\n}\n\nexport function isView(v: unknown): v is View {\n  return (\n    isObj(v) && hasProp(v, '$type') && v.$type === 'app.bsky.embed.video#view'\n  )\n}\n\nexport function validateView(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.video#view', v)\n}\n"],"names":[],"mappings":";;;;AAkBA,QAAA,MAAA,GAAA,OAOC;AAED,QAAA,YAAA,GAAA,aAEC;AAQD,QAAA,SAAA,GAAA,UAMC;AAED,QAAA,eAAA,GAAA,gBAEC;AAWD,QAAA,MAAA,GAAA,OAIC;AAED,QAAA,YAAA,GAAA,aAEC;AA9DD,MAAA,qCAAiD;AACjD,MAAA,6CAA+C;AAa/C,SAAgB,MAAM,CAAC,CAAU;IAC/B,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,CAAC,KAAK,KAAK,2BAA2B,IACtC,CAAC,CAAC,KAAK,KAAK,sBAAsB,CAAC,CACtC,CAAA;AACH,CAAC;AAED,SAAgB,YAAY,CAAC,CAAU;IACrC,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,2BAA2B,EAAE,CAAC,CAAC,CAAA;AAC1D,CAAC;AAQD,SAAgB,SAAS,CAAC,CAAU;IAClC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,8BAA8B,CAC3C,CAAA;AACH,CAAC;AAED,SAAgB,eAAe,CAAC,CAAU;IACxC,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,8BAA8B,EAAE,CAAC,CAAC,CAAA;AAC7D,CAAC;AAWD,SAAgB,MAAM,CAAC,CAAU;IAC/B,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IAAI,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,KAAK,KAAK,2BAA2B,CAC3E,CAAA;AACH,CAAC;AAED,SAAgB,YAAY,CAAC,CAAU;IACrC,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,2BAA2B,EAAE,CAAC,CAAC,CAAA;AAC1D,CAAC","ignoreList":[0]}},
    {"offset": {"line": 18149, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18154, "column": 0}, "map": {"version":3,"file":"defs.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/feed/defs.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from '../actor/defs'\nimport * as AppBskyEmbedImages from '../embed/images'\nimport * as AppBskyEmbedVideo from '../embed/video'\nimport * as AppBskyEmbedExternal from '../embed/external'\nimport * as AppBskyEmbedRecord from '../embed/record'\nimport * as AppBskyEmbedRecordWithMedia from '../embed/recordWithMedia'\nimport * as ComAtprotoLabelDefs from '../../../com/atproto/label/defs'\nimport * as AppBskyRichtextFacet from '../richtext/facet'\nimport * as AppBskyGraphDefs from '../graph/defs'\n\nexport interface PostView {\n  uri: string\n  cid: string\n  author: AppBskyActorDefs.ProfileViewBasic\n  record: {}\n  embed?:\n    | AppBskyEmbedImages.View\n    | AppBskyEmbedVideo.View\n    | AppBskyEmbedExternal.View\n    | AppBskyEmbedRecord.View\n    | AppBskyEmbedRecordWithMedia.View\n    | { $type: string; [k: string]: unknown }\n  replyCount?: number\n  repostCount?: number\n  likeCount?: number\n  quoteCount?: number\n  indexedAt: string\n  viewer?: ViewerState\n  labels?: ComAtprotoLabelDefs.Label[]\n  threadgate?: ThreadgateView\n  [k: string]: unknown\n}\n\nexport function isPostView(v: unknown): v is PostView {\n  return (\n    isObj(v) && hasProp(v, '$type') && v.$type === 'app.bsky.feed.defs#postView'\n  )\n}\n\nexport function validatePostView(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.defs#postView', v)\n}\n\n/** Metadata about the requesting account's relationship with the subject content. Only has meaningful content for authed requests. */\nexport interface ViewerState {\n  repost?: string\n  like?: string\n  threadMuted?: boolean\n  replyDisabled?: boolean\n  embeddingDisabled?: boolean\n  pinned?: boolean\n  [k: string]: unknown\n}\n\nexport function isViewerState(v: unknown): v is ViewerState {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.defs#viewerState'\n  )\n}\n\nexport function validateViewerState(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.defs#viewerState', v)\n}\n\nexport interface FeedViewPost {\n  post: PostView\n  reply?: ReplyRef\n  reason?: ReasonRepost | ReasonPin | { $type: string; [k: string]: unknown }\n  /** Context provided by feed generator that may be passed back alongside interactions. */\n  feedContext?: string\n  [k: string]: unknown\n}\n\nexport function isFeedViewPost(v: unknown): v is FeedViewPost {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.defs#feedViewPost'\n  )\n}\n\nexport function validateFeedViewPost(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.defs#feedViewPost', v)\n}\n\nexport interface ReplyRef {\n  root:\n    | PostView\n    | NotFoundPost\n    | BlockedPost\n    | { $type: string; [k: string]: unknown }\n  parent:\n    | PostView\n    | NotFoundPost\n    | BlockedPost\n    | { $type: string; [k: string]: unknown }\n  grandparentAuthor?: AppBskyActorDefs.ProfileViewBasic\n  [k: string]: unknown\n}\n\nexport function isReplyRef(v: unknown): v is ReplyRef {\n  return (\n    isObj(v) && hasProp(v, '$type') && v.$type === 'app.bsky.feed.defs#replyRef'\n  )\n}\n\nexport function validateReplyRef(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.defs#replyRef', v)\n}\n\nexport interface ReasonRepost {\n  by: AppBskyActorDefs.ProfileViewBasic\n  indexedAt: string\n  [k: string]: unknown\n}\n\nexport function isReasonRepost(v: unknown): v is ReasonRepost {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.defs#reasonRepost'\n  )\n}\n\nexport function validateReasonRepost(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.defs#reasonRepost', v)\n}\n\nexport interface ReasonPin {\n  [k: string]: unknown\n}\n\nexport function isReasonPin(v: unknown): v is ReasonPin {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.defs#reasonPin'\n  )\n}\n\nexport function validateReasonPin(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.defs#reasonPin', v)\n}\n\nexport interface ThreadViewPost {\n  post: PostView\n  parent?:\n    | ThreadViewPost\n    | NotFoundPost\n    | BlockedPost\n    | { $type: string; [k: string]: unknown }\n  replies?: (\n    | ThreadViewPost\n    | NotFoundPost\n    | BlockedPost\n    | { $type: string; [k: string]: unknown }\n  )[]\n  [k: string]: unknown\n}\n\nexport function isThreadViewPost(v: unknown): v is ThreadViewPost {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.defs#threadViewPost'\n  )\n}\n\nexport function validateThreadViewPost(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.defs#threadViewPost', v)\n}\n\nexport interface NotFoundPost {\n  uri: string\n  notFound: true\n  [k: string]: unknown\n}\n\nexport function isNotFoundPost(v: unknown): v is NotFoundPost {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.defs#notFoundPost'\n  )\n}\n\nexport function validateNotFoundPost(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.defs#notFoundPost', v)\n}\n\nexport interface BlockedPost {\n  uri: string\n  blocked: true\n  author: BlockedAuthor\n  [k: string]: unknown\n}\n\nexport function isBlockedPost(v: unknown): v is BlockedPost {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.defs#blockedPost'\n  )\n}\n\nexport function validateBlockedPost(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.defs#blockedPost', v)\n}\n\nexport interface BlockedAuthor {\n  did: string\n  viewer?: AppBskyActorDefs.ViewerState\n  [k: string]: unknown\n}\n\nexport function isBlockedAuthor(v: unknown): v is BlockedAuthor {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.defs#blockedAuthor'\n  )\n}\n\nexport function validateBlockedAuthor(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.defs#blockedAuthor', v)\n}\n\nexport interface GeneratorView {\n  uri: string\n  cid: string\n  did: string\n  creator: AppBskyActorDefs.ProfileView\n  displayName: string\n  description?: string\n  descriptionFacets?: AppBskyRichtextFacet.Main[]\n  avatar?: string\n  likeCount?: number\n  acceptsInteractions?: boolean\n  labels?: ComAtprotoLabelDefs.Label[]\n  viewer?: GeneratorViewerState\n  contentMode?:\n    | 'app.bsky.feed.defs#contentModeUnspecified'\n    | 'app.bsky.feed.defs#contentModeVideo'\n    | (string & {})\n  indexedAt: string\n  [k: string]: unknown\n}\n\nexport function isGeneratorView(v: unknown): v is GeneratorView {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.defs#generatorView'\n  )\n}\n\nexport function validateGeneratorView(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.defs#generatorView', v)\n}\n\nexport interface GeneratorViewerState {\n  like?: string\n  [k: string]: unknown\n}\n\nexport function isGeneratorViewerState(v: unknown): v is GeneratorViewerState {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.defs#generatorViewerState'\n  )\n}\n\nexport function validateGeneratorViewerState(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.defs#generatorViewerState', v)\n}\n\nexport interface SkeletonFeedPost {\n  post: string\n  reason?:\n    | SkeletonReasonRepost\n    | SkeletonReasonPin\n    | { $type: string; [k: string]: unknown }\n  /** Context that will be passed through to client and may be passed to feed generator back alongside interactions. */\n  feedContext?: string\n  [k: string]: unknown\n}\n\nexport function isSkeletonFeedPost(v: unknown): v is SkeletonFeedPost {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.defs#skeletonFeedPost'\n  )\n}\n\nexport function validateSkeletonFeedPost(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.defs#skeletonFeedPost', v)\n}\n\nexport interface SkeletonReasonRepost {\n  repost: string\n  [k: string]: unknown\n}\n\nexport function isSkeletonReasonRepost(v: unknown): v is SkeletonReasonRepost {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.defs#skeletonReasonRepost'\n  )\n}\n\nexport function validateSkeletonReasonRepost(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.defs#skeletonReasonRepost', v)\n}\n\nexport interface SkeletonReasonPin {\n  [k: string]: unknown\n}\n\nexport function isSkeletonReasonPin(v: unknown): v is SkeletonReasonPin {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.defs#skeletonReasonPin'\n  )\n}\n\nexport function validateSkeletonReasonPin(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.defs#skeletonReasonPin', v)\n}\n\nexport interface ThreadgateView {\n  uri?: string\n  cid?: string\n  record?: {}\n  lists?: AppBskyGraphDefs.ListViewBasic[]\n  [k: string]: unknown\n}\n\nexport function isThreadgateView(v: unknown): v is ThreadgateView {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.defs#threadgateView'\n  )\n}\n\nexport function validateThreadgateView(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.defs#threadgateView', v)\n}\n\nexport interface Interaction {\n  item?: string\n  event?:\n    | 'app.bsky.feed.defs#requestLess'\n    | 'app.bsky.feed.defs#requestMore'\n    | 'app.bsky.feed.defs#clickthroughItem'\n    | 'app.bsky.feed.defs#clickthroughAuthor'\n    | 'app.bsky.feed.defs#clickthroughReposter'\n    | 'app.bsky.feed.defs#clickthroughEmbed'\n    | 'app.bsky.feed.defs#interactionSeen'\n    | 'app.bsky.feed.defs#interactionLike'\n    | 'app.bsky.feed.defs#interactionRepost'\n    | 'app.bsky.feed.defs#interactionReply'\n    | 'app.bsky.feed.defs#interactionQuote'\n    | 'app.bsky.feed.defs#interactionShare'\n    | (string & {})\n  /** Context on a feed item that was originally supplied by the feed generator on getFeedSkeleton. */\n  feedContext?: string\n  [k: string]: unknown\n}\n\nexport function isInteraction(v: unknown): v is Interaction {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.defs#interaction'\n  )\n}\n\nexport function validateInteraction(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.defs#interaction', v)\n}\n\n/** Request that less content like the given feed item be shown in the feed */\nexport const REQUESTLESS = 'app.bsky.feed.defs#requestLess'\n/** Request that more content like the given feed item be shown in the feed */\nexport const REQUESTMORE = 'app.bsky.feed.defs#requestMore'\n/** User clicked through to the feed item */\nexport const CLICKTHROUGHITEM = 'app.bsky.feed.defs#clickthroughItem'\n/** User clicked through to the author of the feed item */\nexport const CLICKTHROUGHAUTHOR = 'app.bsky.feed.defs#clickthroughAuthor'\n/** User clicked through to the reposter of the feed item */\nexport const CLICKTHROUGHREPOSTER = 'app.bsky.feed.defs#clickthroughReposter'\n/** User clicked through to the embedded content of the feed item */\nexport const CLICKTHROUGHEMBED = 'app.bsky.feed.defs#clickthroughEmbed'\n/** Declares the feed generator returns any types of posts. */\nexport const CONTENTMODEUNSPECIFIED =\n  'app.bsky.feed.defs#contentModeUnspecified'\n/** Declares the feed generator returns posts containing app.bsky.embed.video embeds. */\nexport const CONTENTMODEVIDEO = 'app.bsky.feed.defs#contentModeVideo'\n/** Feed item was seen by user */\nexport const INTERACTIONSEEN = 'app.bsky.feed.defs#interactionSeen'\n/** User liked the feed item */\nexport const INTERACTIONLIKE = 'app.bsky.feed.defs#interactionLike'\n/** User reposted the feed item */\nexport const INTERACTIONREPOST = 'app.bsky.feed.defs#interactionRepost'\n/** User replied to the feed item */\nexport const INTERACTIONREPLY = 'app.bsky.feed.defs#interactionReply'\n/** User quoted the feed item */\nexport const INTERACTIONQUOTE = 'app.bsky.feed.defs#interactionQuote'\n/** User shared the feed item */\nexport const INTERACTIONSHARE = 'app.bsky.feed.defs#interactionShare'\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 18311, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18316, "column": 0}, "map": {"version":3,"file":"describeFeedGenerator.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/feed/describeFeedGenerator.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  did: string\n  feeds: Feed[]\n  links?: Links\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n\nexport interface Feed {\n  uri: string\n  [k: string]: unknown\n}\n\nexport function isFeed(v: unknown): v is Feed {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.describeFeedGenerator#feed'\n  )\n}\n\nexport function validateFeed(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.describeFeedGenerator#feed', v)\n}\n\nexport interface Links {\n  privacyPolicy?: string\n  termsOfService?: string\n  [k: string]: unknown\n}\n\nexport function isLinks(v: unknown): v is Links {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.describeFeedGenerator#links'\n  )\n}\n\nexport function validateLinks(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.describeFeedGenerator#links', v)\n}\n"],"names":[],"mappings":";;;;AA+BA,QAAA,UAAA,GAAA,WAEC;AAOD,QAAA,MAAA,GAAA,OAMC;AAED,QAAA,YAAA,GAAA,aAEC;AAQD,QAAA,OAAA,GAAA,QAMC;AAED,QAAA,aAAA,GAAA,cAEC;AA/DD,MAAA,qCAAiD;AACjD,MAAA,6CAA+C;AAyB/C,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC;AAOD,SAAgB,MAAM,CAAC,CAAU;IAC/B,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,0CAA0C,CACvD,CAAA;AACH,CAAC;AAED,SAAgB,YAAY,CAAC,CAAU;IACrC,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,0CAA0C,EAAE,CAAC,CAAC,CAAA;AACzE,CAAC;AAQD,SAAgB,OAAO,CAAC,CAAU;IAChC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,2CAA2C,CACxD,CAAA;AACH,CAAC;AAED,SAAgB,aAAa,CAAC,CAAU;IACtC,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,2CAA2C,EAAE,CAAC,CAAC,CAAA;AAC1E,CAAC","ignoreList":[0]}},
    {"offset": {"line": 18342, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18347, "column": 0}, "map": {"version":3,"file":"generator.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/feed/generator.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyRichtextFacet from '../richtext/facet'\nimport * as ComAtprotoLabelDefs from '../../../com/atproto/label/defs'\n\nexport interface Record {\n  did: string\n  displayName: string\n  description?: string\n  descriptionFacets?: AppBskyRichtextFacet.Main[]\n  avatar?: BlobRef\n  /** Declaration that a feed accepts feedback interactions from a client through app.bsky.feed.sendInteractions */\n  acceptsInteractions?: boolean\n  labels?:\n    | ComAtprotoLabelDefs.SelfLabels\n    | { $type: string; [k: string]: unknown }\n  contentMode?:\n    | 'app.bsky.feed.defs#contentModeUnspecified'\n    | 'app.bsky.feed.defs#contentModeVideo'\n    | (string & {})\n  createdAt: string\n  [k: string]: unknown\n}\n\nexport function isRecord(v: unknown): v is Record {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.feed.generator#main' ||\n      v.$type === 'app.bsky.feed.generator')\n  )\n}\n\nexport function validateRecord(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.generator#main', v)\n}\n"],"names":[],"mappings":";;;;AA6BA,QAAA,QAAA,GAAA,SAOC;AAED,QAAA,cAAA,GAAA,eAEC;AApCD,MAAA,qCAAiD;AACjD,MAAA,6CAA+C;AAwB/C,SAAgB,QAAQ,CAAC,CAAU;IACjC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,CAAC,KAAK,KAAK,8BAA8B,IACzC,CAAC,CAAC,KAAK,KAAK,yBAAyB,CAAC,CACzC,CAAA;AACH,CAAC;AAED,SAAgB,cAAc,CAAC,CAAU;IACvC,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,8BAA8B,EAAE,CAAC,CAAC,CAAA;AAC7D,CAAC","ignoreList":[0]}},
    {"offset": {"line": 18361, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18366, "column": 0}, "map": {"version":3,"file":"getActorFeeds.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/feed/getActorFeeds.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from './defs'\n\nexport interface QueryParams {\n  actor: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  feeds: AppBskyFeedDefs.GeneratorView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAmCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 18374, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18379, "column": 0}, "map": {"version":3,"file":"getFeedGenerator.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/feed/getFeedGenerator.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from './defs'\n\nexport interface QueryParams {\n  /** AT-URI of the feed generator record. */\n  feed: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  view: AppBskyFeedDefs.GeneratorView\n  /** Indicates whether the feed generator service has been online recently, or else seems to be inactive. */\n  isOnline: boolean\n  /** Indicates whether the feed generator service is compatible with the record declaration. */\n  isValid: boolean\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAqCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 18387, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18392, "column": 0}, "map": {"version":3,"file":"getFeedGenerators.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/feed/getFeedGenerators.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from './defs'\n\nexport interface QueryParams {\n  feeds: string[]\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  feeds: AppBskyFeedDefs.GeneratorView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAgCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 18400, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18405, "column": 0}, "map": {"version":3,"file":"getLikes.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/feed/getLikes.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from '../actor/defs'\n\nexport interface QueryParams {\n  /** AT-URI of the subject (eg, a post record). */\n  uri: string\n  /** CID of the subject record (aka, specific version of record), to filter likes. */\n  cid?: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  uri: string\n  cid?: string\n  cursor?: string\n  likes: Like[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n\nexport interface Like {\n  indexedAt: string\n  createdAt: string\n  actor: AppBskyActorDefs.ProfileView\n  [k: string]: unknown\n}\n\nexport function isLike(v: unknown): v is Like {\n  return (\n    isObj(v) && hasProp(v, '$type') && v.$type === 'app.bsky.feed.getLikes#like'\n  )\n}\n\nexport function validateLike(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.getLikes#like', v)\n}\n"],"names":[],"mappings":";;;;AAwCA,QAAA,UAAA,GAAA,WAEC;AASD,QAAA,MAAA,GAAA,OAIC;AAED,QAAA,YAAA,GAAA,aAEC;AAtDD,MAAA,qCAAiD;AACjD,MAAA,6CAA+C;AAkC/C,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC;AASD,SAAgB,MAAM,CAAC,CAAU;IAC/B,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IAAI,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,KAAK,KAAK,6BAA6B,CAC7E,CAAA;AACH,CAAC;AAED,SAAgB,YAAY,CAAC,CAAU;IACrC,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,6BAA6B,EAAE,CAAC,CAAC,CAAA;AAC5D,CAAC","ignoreList":[0]}},
    {"offset": {"line": 18423, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18428, "column": 0}, "map": {"version":3,"file":"getPosts.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/feed/getPosts.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from './defs'\n\nexport interface QueryParams {\n  /** List of post AT-URIs to return hydrated views for. */\n  uris: string[]\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  posts: AppBskyFeedDefs.PostView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAiCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 18436, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18441, "column": 0}, "map": {"version":3,"file":"getQuotes.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/feed/getQuotes.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from './defs'\n\nexport interface QueryParams {\n  /** Reference (AT-URI) of post record */\n  uri: string\n  /** If supplied, filters to quotes of specific version (by CID) of the post record. */\n  cid?: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  uri: string\n  cid?: string\n  cursor?: string\n  posts: AppBskyFeedDefs.PostView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAwCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 18449, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18454, "column": 0}, "map": {"version":3,"file":"getRepostedBy.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/feed/getRepostedBy.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from '../actor/defs'\n\nexport interface QueryParams {\n  /** Reference (AT-URI) of post record */\n  uri: string\n  /** If supplied, filters to reposts of specific version (by CID) of the post record. */\n  cid?: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  uri: string\n  cid?: string\n  cursor?: string\n  repostedBy: AppBskyActorDefs.ProfileView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAwCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 18462, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18467, "column": 0}, "map": {"version":3,"file":"getSuggestedFeeds.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/feed/getSuggestedFeeds.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from './defs'\n\nexport interface QueryParams {\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  feeds: AppBskyFeedDefs.GeneratorView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAkCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 18475, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18480, "column": 0}, "map": {"version":3,"file":"getTimeline.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/feed/getTimeline.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from './defs'\n\nexport interface QueryParams {\n  /** Variant 'algorithm' for timeline. Implementation-specific. NOTE: most feed flexibility has been moved to feed generator mechanism. */\n  algorithm?: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  feed: AppBskyFeedDefs.FeedViewPost[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAoCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 18488, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18493, "column": 0}, "map": {"version":3,"file":"like.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/feed/like.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoRepoStrongRef from '../../../com/atproto/repo/strongRef'\n\nexport interface Record {\n  subject: ComAtprotoRepoStrongRef.Main\n  createdAt: string\n  [k: string]: unknown\n}\n\nexport function isRecord(v: unknown): v is Record {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.feed.like#main' || v.$type === 'app.bsky.feed.like')\n  )\n}\n\nexport function validateRecord(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.like#main', v)\n}\n"],"names":[],"mappings":";;;;AAeA,QAAA,QAAA,GAAA,SAMC;AAED,QAAA,cAAA,GAAA,eAEC;AArBD,MAAA,qCAAiD;AACjD,MAAA,6CAA+C;AAU/C,SAAgB,QAAQ,CAAC,CAAU;IACjC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,CAAC,KAAK,KAAK,yBAAyB,IAAI,CAAC,CAAC,KAAK,KAAK,oBAAoB,CAAC,CAC5E,CAAA;AACH,CAAC;AAED,SAAgB,cAAc,CAAC,CAAU;IACvC,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,yBAAyB,EAAE,CAAC,CAAC,CAAA;AACxD,CAAC","ignoreList":[0]}},
    {"offset": {"line": 18507, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18512, "column": 0}, "map": {"version":3,"file":"post.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/feed/post.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyRichtextFacet from '../richtext/facet'\nimport * as AppBskyEmbedImages from '../embed/images'\nimport * as AppBskyEmbedVideo from '../embed/video'\nimport * as AppBskyEmbedExternal from '../embed/external'\nimport * as AppBskyEmbedRecord from '../embed/record'\nimport * as AppBskyEmbedRecordWithMedia from '../embed/recordWithMedia'\nimport * as ComAtprotoLabelDefs from '../../../com/atproto/label/defs'\nimport * as ComAtprotoRepoStrongRef from '../../../com/atproto/repo/strongRef'\n\nexport interface Record {\n  /** The primary post content. May be an empty string, if there are embeds. */\n  text: string\n  /** DEPRECATED: replaced by app.bsky.richtext.facet. */\n  entities?: Entity[]\n  /** Annotations of text (mentions, URLs, hashtags, etc) */\n  facets?: AppBskyRichtextFacet.Main[]\n  reply?: ReplyRef\n  embed?:\n    | AppBskyEmbedImages.Main\n    | AppBskyEmbedVideo.Main\n    | AppBskyEmbedExternal.Main\n    | AppBskyEmbedRecord.Main\n    | AppBskyEmbedRecordWithMedia.Main\n    | { $type: string; [k: string]: unknown }\n  /** Indicates human language of post primary text content. */\n  langs?: string[]\n  labels?:\n    | ComAtprotoLabelDefs.SelfLabels\n    | { $type: string; [k: string]: unknown }\n  /** Additional hashtags, in addition to any included in post text and facets. */\n  tags?: string[]\n  /** Client-declared timestamp when this post was originally created. */\n  createdAt: string\n  [k: string]: unknown\n}\n\nexport function isRecord(v: unknown): v is Record {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.feed.post#main' || v.$type === 'app.bsky.feed.post')\n  )\n}\n\nexport function validateRecord(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.post#main', v)\n}\n\nexport interface ReplyRef {\n  root: ComAtprotoRepoStrongRef.Main\n  parent: ComAtprotoRepoStrongRef.Main\n  [k: string]: unknown\n}\n\nexport function isReplyRef(v: unknown): v is ReplyRef {\n  return (\n    isObj(v) && hasProp(v, '$type') && v.$type === 'app.bsky.feed.post#replyRef'\n  )\n}\n\nexport function validateReplyRef(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.post#replyRef', v)\n}\n\n/** Deprecated: use facets instead. */\nexport interface Entity {\n  index: TextSlice\n  /** Expected values are 'mention' and 'link'. */\n  type: string\n  value: string\n  [k: string]: unknown\n}\n\nexport function isEntity(v: unknown): v is Entity {\n  return (\n    isObj(v) && hasProp(v, '$type') && v.$type === 'app.bsky.feed.post#entity'\n  )\n}\n\nexport function validateEntity(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.post#entity', v)\n}\n\n/** Deprecated. Use app.bsky.richtext instead -- A text segment. Start is inclusive, end is exclusive. Indices are for utf16-encoded strings. */\nexport interface TextSlice {\n  start: number\n  end: number\n  [k: string]: unknown\n}\n\nexport function isTextSlice(v: unknown): v is TextSlice {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.post#textSlice'\n  )\n}\n\nexport function validateTextSlice(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.post#textSlice', v)\n}\n"],"names":[],"mappings":";;;;AA2CA,QAAA,QAAA,GAAA,SAMC;AAED,QAAA,cAAA,GAAA,eAEC;AAQD,QAAA,UAAA,GAAA,WAIC;AAED,QAAA,gBAAA,GAAA,iBAEC;AAWD,QAAA,QAAA,GAAA,SAIC;AAED,QAAA,cAAA,GAAA,eAEC;AASD,QAAA,WAAA,GAAA,YAMC;AAED,QAAA,iBAAA,GAAA,kBAEC;AAvGD,MAAA,qCAAiD;AACjD,MAAA,6CAA+C;AAsC/C,SAAgB,QAAQ,CAAC,CAAU;IACjC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,CAAC,KAAK,KAAK,yBAAyB,IAAI,CAAC,CAAC,KAAK,KAAK,oBAAoB,CAAC,CAC5E,CAAA;AACH,CAAC;AAED,SAAgB,cAAc,CAAC,CAAU;IACvC,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,yBAAyB,EAAE,CAAC,CAAC,CAAA;AACxD,CAAC;AAQD,SAAgB,UAAU,CAAC,CAAU;IACnC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IAAI,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,KAAK,KAAK,6BAA6B,CAC7E,CAAA;AACH,CAAC;AAED,SAAgB,gBAAgB,CAAC,CAAU;IACzC,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,6BAA6B,EAAE,CAAC,CAAC,CAAA;AAC5D,CAAC;AAWD,SAAgB,QAAQ,CAAC,CAAU;IACjC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IAAI,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,KAAK,KAAK,2BAA2B,CAC3E,CAAA;AACH,CAAC;AAED,SAAgB,cAAc,CAAC,CAAU;IACvC,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,2BAA2B,EAAE,CAAC,CAAC,CAAA;AAC1D,CAAC;AASD,SAAgB,WAAW,CAAC,CAAU;IACpC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,8BAA8B,CAC3C,CAAA;AACH,CAAC;AAED,SAAgB,iBAAiB,CAAC,CAAU;IAC1C,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,8BAA8B,EAAE,CAAC,CAAC,CAAA;AAC7D,CAAC","ignoreList":[0]}},
    {"offset": {"line": 18550, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18555, "column": 0}, "map": {"version":3,"file":"postgate.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/feed/postgate.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface Record {\n  createdAt: string\n  /** Reference (AT-URI) to the post record. */\n  post: string\n  /** List of AT-URIs embedding this post that the author has detached from. */\n  detachedEmbeddingUris?: string[]\n  embeddingRules?: (DisableRule | { $type: string; [k: string]: unknown })[]\n  [k: string]: unknown\n}\n\nexport function isRecord(v: unknown): v is Record {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.feed.postgate#main' ||\n      v.$type === 'app.bsky.feed.postgate')\n  )\n}\n\nexport function validateRecord(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.postgate#main', v)\n}\n\n/** Disables embedding of this post. */\nexport interface DisableRule {\n  [k: string]: unknown\n}\n\nexport function isDisableRule(v: unknown): v is DisableRule {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.postgate#disableRule'\n  )\n}\n\nexport function validateDisableRule(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.postgate#disableRule', v)\n}\n"],"names":[],"mappings":";;;;AAkBA,QAAA,QAAA,GAAA,SAOC;AAED,QAAA,cAAA,GAAA,eAEC;AAOD,QAAA,aAAA,GAAA,cAMC;AAED,QAAA,mBAAA,GAAA,oBAEC;AA1CD,MAAA,qCAAiD;AACjD,MAAA,6CAA+C;AAa/C,SAAgB,QAAQ,CAAC,CAAU;IACjC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,CAAC,KAAK,KAAK,6BAA6B,IACxC,CAAC,CAAC,KAAK,KAAK,wBAAwB,CAAC,CACxC,CAAA;AACH,CAAC;AAED,SAAgB,cAAc,CAAC,CAAU;IACvC,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,6BAA6B,EAAE,CAAC,CAAC,CAAA;AAC5D,CAAC;AAOD,SAAgB,aAAa,CAAC,CAAU;IACtC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,oCAAoC,CACjD,CAAA;AACH,CAAC;AAED,SAAgB,mBAAmB,CAAC,CAAU;IAC5C,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,oCAAoC,EAAE,CAAC,CAAC,CAAA;AACnE,CAAC","ignoreList":[0]}},
    {"offset": {"line": 18577, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18582, "column": 0}, "map": {"version":3,"file":"repost.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/feed/repost.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoRepoStrongRef from '../../../com/atproto/repo/strongRef'\n\nexport interface Record {\n  subject: ComAtprotoRepoStrongRef.Main\n  createdAt: string\n  [k: string]: unknown\n}\n\nexport function isRecord(v: unknown): v is Record {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.feed.repost#main' ||\n      v.$type === 'app.bsky.feed.repost')\n  )\n}\n\nexport function validateRecord(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.repost#main', v)\n}\n"],"names":[],"mappings":";;;;AAeA,QAAA,QAAA,GAAA,SAOC;AAED,QAAA,cAAA,GAAA,eAEC;AAtBD,MAAA,qCAAiD;AACjD,MAAA,6CAA+C;AAU/C,SAAgB,QAAQ,CAAC,CAAU;IACjC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,CAAC,KAAK,KAAK,2BAA2B,IACtC,CAAC,CAAC,KAAK,KAAK,sBAAsB,CAAC,CACtC,CAAA;AACH,CAAC;AAED,SAAgB,cAAc,CAAC,CAAU;IACvC,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,2BAA2B,EAAE,CAAC,CAAC,CAAA;AAC1D,CAAC","ignoreList":[0]}},
    {"offset": {"line": 18596, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18601, "column": 0}, "map": {"version":3,"file":"sendInteractions.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/feed/sendInteractions.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from './defs'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  interactions: AppBskyFeedDefs.Interaction[]\n  [k: string]: unknown\n}\n\nexport interface OutputSchema {\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAkCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 18609, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18614, "column": 0}, "map": {"version":3,"file":"threadgate.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/feed/threadgate.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface Record {\n  /** Reference (AT-URI) to the post record. */\n  post: string\n  allow?: (\n    | MentionRule\n    | FollowingRule\n    | ListRule\n    | { $type: string; [k: string]: unknown }\n  )[]\n  createdAt: string\n  /** List of hidden reply URIs. */\n  hiddenReplies?: string[]\n  [k: string]: unknown\n}\n\nexport function isRecord(v: unknown): v is Record {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.feed.threadgate#main' ||\n      v.$type === 'app.bsky.feed.threadgate')\n  )\n}\n\nexport function validateRecord(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.threadgate#main', v)\n}\n\n/** Allow replies from actors mentioned in your post. */\nexport interface MentionRule {\n  [k: string]: unknown\n}\n\nexport function isMentionRule(v: unknown): v is MentionRule {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.threadgate#mentionRule'\n  )\n}\n\nexport function validateMentionRule(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.threadgate#mentionRule', v)\n}\n\n/** Allow replies from actors you follow. */\nexport interface FollowingRule {\n  [k: string]: unknown\n}\n\nexport function isFollowingRule(v: unknown): v is FollowingRule {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.threadgate#followingRule'\n  )\n}\n\nexport function validateFollowingRule(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.threadgate#followingRule', v)\n}\n\n/** Allow replies from actors on a list. */\nexport interface ListRule {\n  list: string\n  [k: string]: unknown\n}\n\nexport function isListRule(v: unknown): v is ListRule {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.threadgate#listRule'\n  )\n}\n\nexport function validateListRule(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.threadgate#listRule', v)\n}\n"],"names":[],"mappings":";;;;AAuBA,QAAA,QAAA,GAAA,SAOC;AAED,QAAA,cAAA,GAAA,eAEC;AAOD,QAAA,aAAA,GAAA,cAMC;AAED,QAAA,mBAAA,GAAA,oBAEC;AAOD,QAAA,eAAA,GAAA,gBAMC;AAED,QAAA,qBAAA,GAAA,sBAEC;AAQD,QAAA,UAAA,GAAA,WAMC;AAED,QAAA,gBAAA,GAAA,iBAEC;AAlFD,MAAA,qCAAiD;AACjD,MAAA,6CAA+C;AAkB/C,SAAgB,QAAQ,CAAC,CAAU;IACjC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,CAAC,KAAK,KAAK,+BAA+B,IAC1C,CAAC,CAAC,KAAK,KAAK,0BAA0B,CAAC,CAC1C,CAAA;AACH,CAAC;AAED,SAAgB,cAAc,CAAC,CAAU;IACvC,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,+BAA+B,EAAE,CAAC,CAAC,CAAA;AAC9D,CAAC;AAOD,SAAgB,aAAa,CAAC,CAAU;IACtC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,sCAAsC,CACnD,CAAA;AACH,CAAC;AAED,SAAgB,mBAAmB,CAAC,CAAU;IAC5C,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,sCAAsC,EAAE,CAAC,CAAC,CAAA;AACrE,CAAC;AAOD,SAAgB,eAAe,CAAC,CAAU;IACxC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,wCAAwC,CACrD,CAAA;AACH,CAAC;AAED,SAAgB,qBAAqB,CAAC,CAAU;IAC9C,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,wCAAwC,EAAE,CAAC,CAAC,CAAA;AACvE,CAAC;AAQD,SAAgB,UAAU,CAAC,CAAU;IACnC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,mCAAmC,CAChD,CAAA;AACH,CAAC;AAED,SAAgB,gBAAgB,CAAC,CAAU;IACzC,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,mCAAmC,EAAE,CAAC,CAAC,CAAA;AAClE,CAAC","ignoreList":[0]}},
    {"offset": {"line": 18652, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18657, "column": 0}, "map": {"version":3,"file":"block.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/graph/block.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface Record {\n  /** DID of the account to be blocked. */\n  subject: string\n  createdAt: string\n  [k: string]: unknown\n}\n\nexport function isRecord(v: unknown): v is Record {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.graph.block#main' ||\n      v.$type === 'app.bsky.graph.block')\n  )\n}\n\nexport function validateRecord(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.graph.block#main', v)\n}\n"],"names":[],"mappings":";;;;AAeA,QAAA,QAAA,GAAA,SAOC;AAED,QAAA,cAAA,GAAA,eAEC;AAtBD,MAAA,qCAAiD;AACjD,MAAA,6CAA+C;AAU/C,SAAgB,QAAQ,CAAC,CAAU;IACjC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,CAAC,KAAK,KAAK,2BAA2B,IACtC,CAAC,CAAC,KAAK,KAAK,sBAAsB,CAAC,CACtC,CAAA;AACH,CAAC;AAED,SAAgB,cAAc,CAAC,CAAU;IACvC,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,2BAA2B,EAAE,CAAC,CAAC,CAAA;AAC1D,CAAC","ignoreList":[0]}},
    {"offset": {"line": 18671, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18676, "column": 0}, "map": {"version":3,"file":"defs.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/graph/defs.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoLabelDefs from '../../../com/atproto/label/defs'\nimport * as AppBskyActorDefs from '../actor/defs'\nimport * as AppBskyRichtextFacet from '../richtext/facet'\nimport * as AppBskyFeedDefs from '../feed/defs'\n\nexport interface ListViewBasic {\n  uri: string\n  cid: string\n  name: string\n  purpose: ListPurpose\n  avatar?: string\n  listItemCount?: number\n  labels?: ComAtprotoLabelDefs.Label[]\n  viewer?: ListViewerState\n  indexedAt?: string\n  [k: string]: unknown\n}\n\nexport function isListViewBasic(v: unknown): v is ListViewBasic {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.graph.defs#listViewBasic'\n  )\n}\n\nexport function validateListViewBasic(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.graph.defs#listViewBasic', v)\n}\n\nexport interface ListView {\n  uri: string\n  cid: string\n  creator: AppBskyActorDefs.ProfileView\n  name: string\n  purpose: ListPurpose\n  description?: string\n  descriptionFacets?: AppBskyRichtextFacet.Main[]\n  avatar?: string\n  listItemCount?: number\n  labels?: ComAtprotoLabelDefs.Label[]\n  viewer?: ListViewerState\n  indexedAt: string\n  [k: string]: unknown\n}\n\nexport function isListView(v: unknown): v is ListView {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.graph.defs#listView'\n  )\n}\n\nexport function validateListView(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.graph.defs#listView', v)\n}\n\nexport interface ListItemView {\n  uri: string\n  subject: AppBskyActorDefs.ProfileView\n  [k: string]: unknown\n}\n\nexport function isListItemView(v: unknown): v is ListItemView {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.graph.defs#listItemView'\n  )\n}\n\nexport function validateListItemView(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.graph.defs#listItemView', v)\n}\n\nexport interface StarterPackView {\n  uri: string\n  cid: string\n  record: {}\n  creator: AppBskyActorDefs.ProfileViewBasic\n  list?: ListViewBasic\n  listItemsSample?: ListItemView[]\n  feeds?: AppBskyFeedDefs.GeneratorView[]\n  joinedWeekCount?: number\n  joinedAllTimeCount?: number\n  labels?: ComAtprotoLabelDefs.Label[]\n  indexedAt: string\n  [k: string]: unknown\n}\n\nexport function isStarterPackView(v: unknown): v is StarterPackView {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.graph.defs#starterPackView'\n  )\n}\n\nexport function validateStarterPackView(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.graph.defs#starterPackView', v)\n}\n\nexport interface StarterPackViewBasic {\n  uri: string\n  cid: string\n  record: {}\n  creator: AppBskyActorDefs.ProfileViewBasic\n  listItemCount?: number\n  joinedWeekCount?: number\n  joinedAllTimeCount?: number\n  labels?: ComAtprotoLabelDefs.Label[]\n  indexedAt: string\n  [k: string]: unknown\n}\n\nexport function isStarterPackViewBasic(v: unknown): v is StarterPackViewBasic {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.graph.defs#starterPackViewBasic'\n  )\n}\n\nexport function validateStarterPackViewBasic(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.graph.defs#starterPackViewBasic', v)\n}\n\nexport type ListPurpose =\n  | 'app.bsky.graph.defs#modlist'\n  | 'app.bsky.graph.defs#curatelist'\n  | 'app.bsky.graph.defs#referencelist'\n  | (string & {})\n\n/** A list of actors to apply an aggregate moderation action (mute/block) on. */\nexport const MODLIST = 'app.bsky.graph.defs#modlist'\n/** A list of actors used for curation purposes such as list feeds or interaction gating. */\nexport const CURATELIST = 'app.bsky.graph.defs#curatelist'\n/** A list of actors used for only for reference purposes such as within a starter pack. */\nexport const REFERENCELIST = 'app.bsky.graph.defs#referencelist'\n\nexport interface ListViewerState {\n  muted?: boolean\n  blocked?: string\n  [k: string]: unknown\n}\n\nexport function isListViewerState(v: unknown): v is ListViewerState {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.graph.defs#listViewerState'\n  )\n}\n\nexport function validateListViewerState(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.graph.defs#listViewerState', v)\n}\n\n/** indicates that a handle or DID could not be resolved */\nexport interface NotFoundActor {\n  actor: string\n  notFound: true\n  [k: string]: unknown\n}\n\nexport function isNotFoundActor(v: unknown): v is NotFoundActor {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.graph.defs#notFoundActor'\n  )\n}\n\nexport function validateNotFoundActor(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.graph.defs#notFoundActor', v)\n}\n\n/** lists the bi-directional graph relationships between one actor (not indicated in the object), and the target actors (the DID included in the object) */\nexport interface Relationship {\n  did: string\n  /** if the actor follows this DID, this is the AT-URI of the follow record */\n  following?: string\n  /** if the actor is followed by this DID, contains the AT-URI of the follow record */\n  followedBy?: string\n  [k: string]: unknown\n}\n\nexport function isRelationship(v: unknown): v is Relationship {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.graph.defs#relationship'\n  )\n}\n\nexport function validateRelationship(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.graph.defs#relationship', v)\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 18750, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18755, "column": 0}, "map": {"version":3,"file":"follow.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/graph/follow.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface Record {\n  subject: string\n  createdAt: string\n  [k: string]: unknown\n}\n\nexport function isRecord(v: unknown): v is Record {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.graph.follow#main' ||\n      v.$type === 'app.bsky.graph.follow')\n  )\n}\n\nexport function validateRecord(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.graph.follow#main', v)\n}\n"],"names":[],"mappings":";;;;AAcA,QAAA,QAAA,GAAA,SAOC;AAED,QAAA,cAAA,GAAA,eAEC;AArBD,MAAA,qCAAiD;AACjD,MAAA,6CAA+C;AAS/C,SAAgB,QAAQ,CAAC,CAAU;IACjC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,CAAC,KAAK,KAAK,4BAA4B,IACvC,CAAC,CAAC,KAAK,KAAK,uBAAuB,CAAC,CACvC,CAAA;AACH,CAAC;AAED,SAAgB,cAAc,CAAC,CAAU;IACvC,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,4BAA4B,EAAE,CAAC,CAAC,CAAA;AAC3D,CAAC","ignoreList":[0]}},
    {"offset": {"line": 18769, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18774, "column": 0}, "map": {"version":3,"file":"getActorStarterPacks.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/graph/getActorStarterPacks.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyGraphDefs from './defs'\n\nexport interface QueryParams {\n  actor: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  starterPacks: AppBskyGraphDefs.StarterPackViewBasic[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAmCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 18782, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18787, "column": 0}, "map": {"version":3,"file":"getBlocks.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/graph/getBlocks.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from '../actor/defs'\n\nexport interface QueryParams {\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  blocks: AppBskyActorDefs.ProfileView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAkCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 18795, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18800, "column": 0}, "map": {"version":3,"file":"getFollowers.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/graph/getFollowers.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from '../actor/defs'\n\nexport interface QueryParams {\n  actor: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  subject: AppBskyActorDefs.ProfileView\n  cursor?: string\n  followers: AppBskyActorDefs.ProfileView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAoCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 18808, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18813, "column": 0}, "map": {"version":3,"file":"getFollows.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/graph/getFollows.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from '../actor/defs'\n\nexport interface QueryParams {\n  actor: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  subject: AppBskyActorDefs.ProfileView\n  cursor?: string\n  follows: AppBskyActorDefs.ProfileView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAoCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 18821, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18826, "column": 0}, "map": {"version":3,"file":"getKnownFollowers.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/graph/getKnownFollowers.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from '../actor/defs'\n\nexport interface QueryParams {\n  actor: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  subject: AppBskyActorDefs.ProfileView\n  cursor?: string\n  followers: AppBskyActorDefs.ProfileView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAoCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 18834, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18839, "column": 0}, "map": {"version":3,"file":"getList.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/graph/getList.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyGraphDefs from './defs'\n\nexport interface QueryParams {\n  /** Reference (AT-URI) of the list record to hydrate. */\n  list: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  list: AppBskyGraphDefs.ListView\n  items: AppBskyGraphDefs.ListItemView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAqCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 18847, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18852, "column": 0}, "map": {"version":3,"file":"getListBlocks.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/graph/getListBlocks.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyGraphDefs from './defs'\n\nexport interface QueryParams {\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  lists: AppBskyGraphDefs.ListView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAkCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 18860, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18865, "column": 0}, "map": {"version":3,"file":"getListMutes.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/graph/getListMutes.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyGraphDefs from './defs'\n\nexport interface QueryParams {\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  lists: AppBskyGraphDefs.ListView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAkCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 18873, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18878, "column": 0}, "map": {"version":3,"file":"getLists.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/graph/getLists.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyGraphDefs from './defs'\n\nexport interface QueryParams {\n  /** The account (actor) to enumerate lists from. */\n  actor: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  lists: AppBskyGraphDefs.ListView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAoCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 18886, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18891, "column": 0}, "map": {"version":3,"file":"getMutes.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/graph/getMutes.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from '../actor/defs'\n\nexport interface QueryParams {\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  mutes: AppBskyActorDefs.ProfileView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAkCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 18899, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18904, "column": 0}, "map": {"version":3,"file":"getStarterPack.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/graph/getStarterPack.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyGraphDefs from './defs'\n\nexport interface QueryParams {\n  /** Reference (AT-URI) of the starter pack record. */\n  starterPack: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  starterPack: AppBskyGraphDefs.StarterPackView\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAiCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 18912, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18917, "column": 0}, "map": {"version":3,"file":"getStarterPacks.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/graph/getStarterPacks.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyGraphDefs from './defs'\n\nexport interface QueryParams {\n  uris: string[]\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  starterPacks: AppBskyGraphDefs.StarterPackViewBasic[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAgCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 18925, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18930, "column": 0}, "map": {"version":3,"file":"getSuggestedFollowsByActor.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/graph/getSuggestedFollowsByActor.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from '../actor/defs'\n\nexport interface QueryParams {\n  actor: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  suggestions: AppBskyActorDefs.ProfileView[]\n  /** If true, response has fallen-back to generic results, and is not scoped using relativeToDid */\n  isFallback: boolean\n  /** Snowflake for this recommendation, use when submitting recommendation events. */\n  recId?: number\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAoCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 18938, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18943, "column": 0}, "map": {"version":3,"file":"list.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/graph/list.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyGraphDefs from './defs'\nimport * as AppBskyRichtextFacet from '../richtext/facet'\nimport * as ComAtprotoLabelDefs from '../../../com/atproto/label/defs'\n\nexport interface Record {\n  purpose: AppBskyGraphDefs.ListPurpose\n  /** Display name for list; can not be empty. */\n  name: string\n  description?: string\n  descriptionFacets?: AppBskyRichtextFacet.Main[]\n  avatar?: BlobRef\n  labels?:\n    | ComAtprotoLabelDefs.SelfLabels\n    | { $type: string; [k: string]: unknown }\n  createdAt: string\n  [k: string]: unknown\n}\n\nexport function isRecord(v: unknown): v is Record {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.graph.list#main' ||\n      v.$type === 'app.bsky.graph.list')\n  )\n}\n\nexport function validateRecord(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.graph.list#main', v)\n}\n"],"names":[],"mappings":";;;;AAyBA,QAAA,QAAA,GAAA,SAOC;AAED,QAAA,cAAA,GAAA,eAEC;AAhCD,MAAA,qCAAiD;AACjD,MAAA,6CAA+C;AAoB/C,SAAgB,QAAQ,CAAC,CAAU;IACjC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,CAAC,KAAK,KAAK,0BAA0B,IACrC,CAAC,CAAC,KAAK,KAAK,qBAAqB,CAAC,CACrC,CAAA;AACH,CAAC;AAED,SAAgB,cAAc,CAAC,CAAU;IACvC,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,0BAA0B,EAAE,CAAC,CAAC,CAAA;AACzD,CAAC","ignoreList":[0]}},
    {"offset": {"line": 18957, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18962, "column": 0}, "map": {"version":3,"file":"listblock.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/graph/listblock.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface Record {\n  /** Reference (AT-URI) to the mod list record. */\n  subject: string\n  createdAt: string\n  [k: string]: unknown\n}\n\nexport function isRecord(v: unknown): v is Record {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.graph.listblock#main' ||\n      v.$type === 'app.bsky.graph.listblock')\n  )\n}\n\nexport function validateRecord(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.graph.listblock#main', v)\n}\n"],"names":[],"mappings":";;;;AAeA,QAAA,QAAA,GAAA,SAOC;AAED,QAAA,cAAA,GAAA,eAEC;AAtBD,MAAA,qCAAiD;AACjD,MAAA,6CAA+C;AAU/C,SAAgB,QAAQ,CAAC,CAAU;IACjC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,CAAC,KAAK,KAAK,+BAA+B,IAC1C,CAAC,CAAC,KAAK,KAAK,0BAA0B,CAAC,CAC1C,CAAA;AACH,CAAC;AAED,SAAgB,cAAc,CAAC,CAAU;IACvC,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,+BAA+B,EAAE,CAAC,CAAC,CAAA;AAC9D,CAAC","ignoreList":[0]}},
    {"offset": {"line": 18976, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18981, "column": 0}, "map": {"version":3,"file":"listitem.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/graph/listitem.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface Record {\n  /** The account which is included on the list. */\n  subject: string\n  /** Reference (AT-URI) to the list record (app.bsky.graph.list). */\n  list: string\n  createdAt: string\n  [k: string]: unknown\n}\n\nexport function isRecord(v: unknown): v is Record {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.graph.listitem#main' ||\n      v.$type === 'app.bsky.graph.listitem')\n  )\n}\n\nexport function validateRecord(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.graph.listitem#main', v)\n}\n"],"names":[],"mappings":";;;;AAiBA,QAAA,QAAA,GAAA,SAOC;AAED,QAAA,cAAA,GAAA,eAEC;AAxBD,MAAA,qCAAiD;AACjD,MAAA,6CAA+C;AAY/C,SAAgB,QAAQ,CAAC,CAAU;IACjC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,CAAC,KAAK,KAAK,8BAA8B,IACzC,CAAC,CAAC,KAAK,KAAK,yBAAyB,CAAC,CACzC,CAAA;AACH,CAAC;AAED,SAAgB,cAAc,CAAC,CAAU;IACvC,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,8BAA8B,EAAE,CAAC,CAAC,CAAA;AAC7D,CAAC","ignoreList":[0]}},
    {"offset": {"line": 18995, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19000, "column": 0}, "map": {"version":3,"file":"muteActor.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/graph/muteActor.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  actor: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AA4BA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 19008, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19013, "column": 0}, "map": {"version":3,"file":"muteActorList.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/graph/muteActorList.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  list: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AA4BA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 19021, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19026, "column": 0}, "map": {"version":3,"file":"muteThread.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/graph/muteThread.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  root: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AA4BA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 19034, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19039, "column": 0}, "map": {"version":3,"file":"searchStarterPacks.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/graph/searchStarterPacks.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyGraphDefs from './defs'\n\nexport interface QueryParams {\n  /** Search query string. Syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended. */\n  q: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  starterPacks: AppBskyGraphDefs.StarterPackViewBasic[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAoCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 19047, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19052, "column": 0}, "map": {"version":3,"file":"starterpack.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/graph/starterpack.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyRichtextFacet from '../richtext/facet'\n\nexport interface Record {\n  /** Display name for starter pack; can not be empty. */\n  name: string\n  description?: string\n  descriptionFacets?: AppBskyRichtextFacet.Main[]\n  /** Reference (AT-URI) to the list record. */\n  list: string\n  feeds?: FeedItem[]\n  createdAt: string\n  [k: string]: unknown\n}\n\nexport function isRecord(v: unknown): v is Record {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.graph.starterpack#main' ||\n      v.$type === 'app.bsky.graph.starterpack')\n  )\n}\n\nexport function validateRecord(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.graph.starterpack#main', v)\n}\n\nexport interface FeedItem {\n  uri: string\n  [k: string]: unknown\n}\n\nexport function isFeedItem(v: unknown): v is FeedItem {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.graph.starterpack#feedItem'\n  )\n}\n\nexport function validateFeedItem(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.graph.starterpack#feedItem', v)\n}\n"],"names":[],"mappings":";;;;AAqBA,QAAA,QAAA,GAAA,SAOC;AAED,QAAA,cAAA,GAAA,eAEC;AAOD,QAAA,UAAA,GAAA,WAMC;AAED,QAAA,gBAAA,GAAA,iBAEC;AA7CD,MAAA,qCAAiD;AACjD,MAAA,6CAA+C;AAgB/C,SAAgB,QAAQ,CAAC,CAAU;IACjC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,CAAC,KAAK,KAAK,iCAAiC,IAC5C,CAAC,CAAC,KAAK,KAAK,4BAA4B,CAAC,CAC5C,CAAA;AACH,CAAC;AAED,SAAgB,cAAc,CAAC,CAAU;IACvC,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,iCAAiC,EAAE,CAAC,CAAC,CAAA;AAChE,CAAC;AAOD,SAAgB,UAAU,CAAC,CAAU;IACnC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,qCAAqC,CAClD,CAAA;AACH,CAAC;AAED,SAAgB,gBAAgB,CAAC,CAAU;IACzC,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,qCAAqC,EAAE,CAAC,CAAC,CAAA;AACpE,CAAC","ignoreList":[0]}},
    {"offset": {"line": 19074, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19079, "column": 0}, "map": {"version":3,"file":"unmuteActor.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/graph/unmuteActor.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  actor: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AA4BA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 19087, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19092, "column": 0}, "map": {"version":3,"file":"unmuteActorList.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/graph/unmuteActorList.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  list: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AA4BA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 19100, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19105, "column": 0}, "map": {"version":3,"file":"unmuteThread.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/graph/unmuteThread.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  root: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AA4BA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 19113, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19118, "column": 0}, "map": {"version":3,"file":"defs.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/labeler/defs.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from '../actor/defs'\nimport * as ComAtprotoLabelDefs from '../../../com/atproto/label/defs'\n\nexport interface LabelerView {\n  uri: string\n  cid: string\n  creator: AppBskyActorDefs.ProfileView\n  likeCount?: number\n  viewer?: LabelerViewerState\n  indexedAt: string\n  labels?: ComAtprotoLabelDefs.Label[]\n  [k: string]: unknown\n}\n\nexport function isLabelerView(v: unknown): v is LabelerView {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.labeler.defs#labelerView'\n  )\n}\n\nexport function validateLabelerView(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.labeler.defs#labelerView', v)\n}\n\nexport interface LabelerViewDetailed {\n  uri: string\n  cid: string\n  creator: AppBskyActorDefs.ProfileView\n  policies: LabelerPolicies\n  likeCount?: number\n  viewer?: LabelerViewerState\n  indexedAt: string\n  labels?: ComAtprotoLabelDefs.Label[]\n  [k: string]: unknown\n}\n\nexport function isLabelerViewDetailed(v: unknown): v is LabelerViewDetailed {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.labeler.defs#labelerViewDetailed'\n  )\n}\n\nexport function validateLabelerViewDetailed(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.labeler.defs#labelerViewDetailed', v)\n}\n\nexport interface LabelerViewerState {\n  like?: string\n  [k: string]: unknown\n}\n\nexport function isLabelerViewerState(v: unknown): v is LabelerViewerState {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.labeler.defs#labelerViewerState'\n  )\n}\n\nexport function validateLabelerViewerState(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.labeler.defs#labelerViewerState', v)\n}\n\nexport interface LabelerPolicies {\n  /** The label values which this labeler publishes. May include global or custom labels. */\n  labelValues: ComAtprotoLabelDefs.LabelValue[]\n  /** Label values created by this labeler and scoped exclusively to it. Labels defined here will override global label definitions for this labeler. */\n  labelValueDefinitions?: ComAtprotoLabelDefs.LabelValueDefinition[]\n  [k: string]: unknown\n}\n\nexport function isLabelerPolicies(v: unknown): v is LabelerPolicies {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.labeler.defs#labelerPolicies'\n  )\n}\n\nexport function validateLabelerPolicies(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.labeler.defs#labelerPolicies', v)\n}\n"],"names":[],"mappings":";;;;AAqBA,QAAA,aAAA,GAAA,cAMC;AAED,QAAA,mBAAA,GAAA,oBAEC;AAcD,QAAA,qBAAA,GAAA,sBAMC;AAED,QAAA,2BAAA,GAAA,4BAEC;AAOD,QAAA,oBAAA,GAAA,qBAMC;AAED,QAAA,0BAAA,GAAA,2BAEC;AAUD,QAAA,iBAAA,GAAA,kBAMC;AAED,QAAA,uBAAA,GAAA,wBAEC;AAxFD,MAAA,qCAAiD;AACjD,MAAA,6CAA+C;AAgB/C,SAAgB,aAAa,CAAC,CAAU;IACtC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,mCAAmC,CAChD,CAAA;AACH,CAAC;AAED,SAAgB,mBAAmB,CAAC,CAAU;IAC5C,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,mCAAmC,EAAE,CAAC,CAAC,CAAA;AAClE,CAAC;AAcD,SAAgB,qBAAqB,CAAC,CAAU;IAC9C,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,2CAA2C,CACxD,CAAA;AACH,CAAC;AAED,SAAgB,2BAA2B,CAAC,CAAU;IACpD,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,2CAA2C,EAAE,CAAC,CAAC,CAAA;AAC1E,CAAC;AAOD,SAAgB,oBAAoB,CAAC,CAAU;IAC7C,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,0CAA0C,CACvD,CAAA;AACH,CAAC;AAED,SAAgB,0BAA0B,CAAC,CAAU;IACnD,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,0CAA0C,EAAE,CAAC,CAAC,CAAA;AACzE,CAAC;AAUD,SAAgB,iBAAiB,CAAC,CAAU;IAC1C,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,uCAAuC,CACpD,CAAA;AACH,CAAC;AAED,SAAgB,uBAAuB,CAAC,CAAU;IAChD,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,uCAAuC,EAAE,CAAC,CAAC,CAAA;AACtE,CAAC","ignoreList":[0]}},
    {"offset": {"line": 19156, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19161, "column": 0}, "map": {"version":3,"file":"getServices.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/labeler/getServices.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyLabelerDefs from './defs'\n\nexport interface QueryParams {\n  dids: string[]\n  detailed?: boolean\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  views: (\n    | AppBskyLabelerDefs.LabelerView\n    | AppBskyLabelerDefs.LabelerViewDetailed\n    | { $type: string; [k: string]: unknown }\n  )[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAqCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 19169, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19174, "column": 0}, "map": {"version":3,"file":"service.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/labeler/service.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyLabelerDefs from './defs'\nimport * as ComAtprotoLabelDefs from '../../../com/atproto/label/defs'\n\nexport interface Record {\n  policies: AppBskyLabelerDefs.LabelerPolicies\n  labels?:\n    | ComAtprotoLabelDefs.SelfLabels\n    | { $type: string; [k: string]: unknown }\n  createdAt: string\n  [k: string]: unknown\n}\n\nexport function isRecord(v: unknown): v is Record {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.labeler.service#main' ||\n      v.$type === 'app.bsky.labeler.service')\n  )\n}\n\nexport function validateRecord(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.labeler.service#main', v)\n}\n"],"names":[],"mappings":";;;;AAmBA,QAAA,QAAA,GAAA,SAOC;AAED,QAAA,cAAA,GAAA,eAEC;AA1BD,MAAA,qCAAiD;AACjD,MAAA,6CAA+C;AAc/C,SAAgB,QAAQ,CAAC,CAAU;IACjC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,CAAC,KAAK,KAAK,+BAA+B,IAC1C,CAAC,CAAC,KAAK,KAAK,0BAA0B,CAAC,CAC1C,CAAA;AACH,CAAC;AAED,SAAgB,cAAc,CAAC,CAAU;IACvC,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,+BAA+B,EAAE,CAAC,CAAC,CAAA;AAC9D,CAAC","ignoreList":[0]}},
    {"offset": {"line": 19188, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19193, "column": 0}, "map": {"version":3,"file":"getUnreadCount.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/notification/getUnreadCount.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  priority?: boolean\n  seenAt?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  count: number\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAgCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 19201, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19206, "column": 0}, "map": {"version":3,"file":"listNotifications.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/notification/listNotifications.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from '../actor/defs'\nimport * as ComAtprotoLabelDefs from '../../../com/atproto/label/defs'\n\nexport interface QueryParams {\n  /** Notification reasons to include in response. */\n  reasons?: string[]\n  limit?: number\n  priority?: boolean\n  cursor?: string\n  seenAt?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  notifications: Notification[]\n  priority?: boolean\n  seenAt?: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n\nexport interface Notification {\n  uri: string\n  cid: string\n  author: AppBskyActorDefs.ProfileView\n  /** Expected values are 'like', 'repost', 'follow', 'mention', 'reply', 'quote', and 'starterpack-joined'. */\n  reason:\n    | 'like'\n    | 'repost'\n    | 'follow'\n    | 'mention'\n    | 'reply'\n    | 'quote'\n    | 'starterpack-joined'\n    | (string & {})\n  reasonSubject?: string\n  record: {}\n  isRead: boolean\n  indexedAt: string\n  labels?: ComAtprotoLabelDefs.Label[]\n  [k: string]: unknown\n}\n\nexport function isNotification(v: unknown): v is Notification {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.notification.listNotifications#notification'\n  )\n}\n\nexport function validateNotification(v: unknown): ValidationResult {\n  return lexicons.validate(\n    'app.bsky.notification.listNotifications#notification',\n    v,\n  )\n}\n"],"names":[],"mappings":";;;;AAyCA,QAAA,UAAA,GAAA,WAEC;AAwBD,QAAA,cAAA,GAAA,eAMC;AAED,QAAA,oBAAA,GAAA,qBAKC;AA3ED,MAAA,qCAAiD;AACjD,MAAA,6CAA+C;AAmC/C,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC;AAwBD,SAAgB,cAAc,CAAC,CAAU;IACvC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,sDAAsD,CACnE,CAAA;AACH,CAAC;AAED,SAAgB,oBAAoB,CAAC,CAAU;IAC7C,OAAO,WAAA,QAAQ,CAAC,QAAQ,CACtB,sDAAsD,EACtD,CAAC,CACF,CAAA;AACH,CAAC","ignoreList":[0]}},
    {"offset": {"line": 19224, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19229, "column": 0}, "map": {"version":3,"file":"putPreferences.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/notification/putPreferences.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  priority: boolean\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AA4BA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 19237, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19242, "column": 0}, "map": {"version":3,"file":"registerPush.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/notification/registerPush.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  serviceDid: string\n  token: string\n  platform: 'ios' | 'android' | 'web' | (string & {})\n  appId: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AA+BA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 19250, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19255, "column": 0}, "map": {"version":3,"file":"updateSeen.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/notification/updateSeen.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  seenAt: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AA4BA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 19263, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19268, "column": 0}, "map": {"version":3,"file":"facet.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/richtext/facet.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\n/** Annotation of a sub-string within rich text. */\nexport interface Main {\n  index: ByteSlice\n  features: (Mention | Link | Tag | { $type: string; [k: string]: unknown })[]\n  [k: string]: unknown\n}\n\nexport function isMain(v: unknown): v is Main {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.richtext.facet#main' ||\n      v.$type === 'app.bsky.richtext.facet')\n  )\n}\n\nexport function validateMain(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.richtext.facet#main', v)\n}\n\n/** Facet feature for mention of another account. The text is usually a handle, including a '@' prefix, but the facet reference is a DID. */\nexport interface Mention {\n  did: string\n  [k: string]: unknown\n}\n\nexport function isMention(v: unknown): v is Mention {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.richtext.facet#mention'\n  )\n}\n\nexport function validateMention(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.richtext.facet#mention', v)\n}\n\n/** Facet feature for a URL. The text URL may have been simplified or truncated, but the facet reference should be a complete URL. */\nexport interface Link {\n  uri: string\n  [k: string]: unknown\n}\n\nexport function isLink(v: unknown): v is Link {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.richtext.facet#link'\n  )\n}\n\nexport function validateLink(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.richtext.facet#link', v)\n}\n\n/** Facet feature for a hashtag. The text usually includes a '#' prefix, but the facet reference should not (except in the case of 'double hash tags'). */\nexport interface Tag {\n  tag: string\n  [k: string]: unknown\n}\n\nexport function isTag(v: unknown): v is Tag {\n  return (\n    isObj(v) && hasProp(v, '$type') && v.$type === 'app.bsky.richtext.facet#tag'\n  )\n}\n\nexport function validateTag(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.richtext.facet#tag', v)\n}\n\n/** Specifies the sub-string range a facet feature applies to. Start index is inclusive, end index is exclusive. Indices are zero-indexed, counting bytes of the UTF-8 encoded text. NOTE: some languages, like Javascript, use UTF-16 or Unicode codepoints for string slice indexing; in these languages, convert to byte arrays before working with facets. */\nexport interface ByteSlice {\n  byteStart: number\n  byteEnd: number\n  [k: string]: unknown\n}\n\nexport function isByteSlice(v: unknown): v is ByteSlice {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.richtext.facet#byteSlice'\n  )\n}\n\nexport function validateByteSlice(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.richtext.facet#byteSlice', v)\n}\n"],"names":[],"mappings":";;;;AAeA,QAAA,MAAA,GAAA,OAOC;AAED,QAAA,YAAA,GAAA,aAEC;AAQD,QAAA,SAAA,GAAA,UAMC;AAED,QAAA,eAAA,GAAA,gBAEC;AAQD,QAAA,MAAA,GAAA,OAMC;AAED,QAAA,YAAA,GAAA,aAEC;AAQD,QAAA,KAAA,GAAA,MAIC;AAED,QAAA,WAAA,GAAA,YAEC;AASD,QAAA,WAAA,GAAA,YAMC;AAED,QAAA,iBAAA,GAAA,kBAEC;AA7FD,MAAA,qCAAiD;AACjD,MAAA,6CAA+C;AAU/C,SAAgB,MAAM,CAAC,CAAU;IAC/B,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,CAAC,KAAK,KAAK,8BAA8B,IACzC,CAAC,CAAC,KAAK,KAAK,yBAAyB,CAAC,CACzC,CAAA;AACH,CAAC;AAED,SAAgB,YAAY,CAAC,CAAU;IACrC,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,8BAA8B,EAAE,CAAC,CAAC,CAAA;AAC7D,CAAC;AAQD,SAAgB,SAAS,CAAC,CAAU;IAClC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,iCAAiC,CAC9C,CAAA;AACH,CAAC;AAED,SAAgB,eAAe,CAAC,CAAU;IACxC,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,iCAAiC,EAAE,CAAC,CAAC,CAAA;AAChE,CAAC;AAQD,SAAgB,MAAM,CAAC,CAAU;IAC/B,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,8BAA8B,CAC3C,CAAA;AACH,CAAC;AAED,SAAgB,YAAY,CAAC,CAAU;IACrC,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,8BAA8B,EAAE,CAAC,CAAC,CAAA;AAC7D,CAAC;AAQD,SAAgB,KAAK,CAAC,CAAU;IAC9B,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IAAI,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,KAAK,KAAK,6BAA6B,CAC7E,CAAA;AACH,CAAC;AAED,SAAgB,WAAW,CAAC,CAAU;IACpC,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,6BAA6B,EAAE,CAAC,CAAC,CAAA;AAC5D,CAAC;AASD,SAAgB,WAAW,CAAC,CAAU;IACpC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,mCAAmC,CAChD,CAAA;AACH,CAAC;AAED,SAAgB,iBAAiB,CAAC,CAAU;IAC1C,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,mCAAmC,EAAE,CAAC,CAAC,CAAA;AAClE,CAAC","ignoreList":[0]}},
    {"offset": {"line": 19314, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19319, "column": 0}, "map": {"version":3,"file":"defs.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/unspecced/defs.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface SkeletonSearchPost {\n  uri: string\n  [k: string]: unknown\n}\n\nexport function isSkeletonSearchPost(v: unknown): v is SkeletonSearchPost {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.unspecced.defs#skeletonSearchPost'\n  )\n}\n\nexport function validateSkeletonSearchPost(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.unspecced.defs#skeletonSearchPost', v)\n}\n\nexport interface SkeletonSearchActor {\n  did: string\n  [k: string]: unknown\n}\n\nexport function isSkeletonSearchActor(v: unknown): v is SkeletonSearchActor {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.unspecced.defs#skeletonSearchActor'\n  )\n}\n\nexport function validateSkeletonSearchActor(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.unspecced.defs#skeletonSearchActor', v)\n}\n\nexport interface SkeletonSearchStarterPack {\n  uri: string\n  [k: string]: unknown\n}\n\nexport function isSkeletonSearchStarterPack(\n  v: unknown,\n): v is SkeletonSearchStarterPack {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.unspecced.defs#skeletonSearchStarterPack'\n  )\n}\n\nexport function validateSkeletonSearchStarterPack(\n  v: unknown,\n): ValidationResult {\n  return lexicons.validate(\n    'app.bsky.unspecced.defs#skeletonSearchStarterPack',\n    v,\n  )\n}\n\nexport interface TrendingTopic {\n  topic: string\n  displayName?: string\n  description?: string\n  link: string\n  [k: string]: unknown\n}\n\nexport function isTrendingTopic(v: unknown): v is TrendingTopic {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.unspecced.defs#trendingTopic'\n  )\n}\n\nexport function validateTrendingTopic(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.unspecced.defs#trendingTopic', v)\n}\n"],"names":[],"mappings":";;;;AAaA,QAAA,oBAAA,GAAA,qBAMC;AAED,QAAA,0BAAA,GAAA,2BAEC;AAOD,QAAA,qBAAA,GAAA,sBAMC;AAED,QAAA,2BAAA,GAAA,4BAEC;AAOD,QAAA,2BAAA,GAAA,4BAQC;AAED,QAAA,iCAAA,GAAA,kCAOC;AAUD,QAAA,eAAA,GAAA,gBAMC;AAED,QAAA,qBAAA,GAAA,sBAEC;AAhFD,MAAA,qCAAiD;AACjD,MAAA,6CAA+C;AAQ/C,SAAgB,oBAAoB,CAAC,CAAU;IAC7C,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,4CAA4C,CACzD,CAAA;AACH,CAAC;AAED,SAAgB,0BAA0B,CAAC,CAAU;IACnD,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,4CAA4C,EAAE,CAAC,CAAC,CAAA;AAC3E,CAAC;AAOD,SAAgB,qBAAqB,CAAC,CAAU;IAC9C,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,6CAA6C,CAC1D,CAAA;AACH,CAAC;AAED,SAAgB,2BAA2B,CAAC,CAAU;IACpD,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,6CAA6C,EAAE,CAAC,CAAC,CAAA;AAC5E,CAAC;AAOD,SAAgB,2BAA2B,CACzC,CAAU;IAEV,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,mDAAmD,CAChE,CAAA;AACH,CAAC;AAED,SAAgB,iCAAiC,CAC/C,CAAU;IAEV,OAAO,WAAA,QAAQ,CAAC,QAAQ,CACtB,mDAAmD,EACnD,CAAC,CACF,CAAA;AACH,CAAC;AAUD,SAAgB,eAAe,CAAC,CAAU;IACxC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,uCAAuC,CACpD,CAAA;AACH,CAAC;AAED,SAAgB,qBAAqB,CAAC,CAAU;IAC9C,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,uCAAuC,EAAE,CAAC,CAAC,CAAA;AACtE,CAAC","ignoreList":[0]}},
    {"offset": {"line": 19357, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19362, "column": 0}, "map": {"version":3,"file":"getConfig.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/unspecced/getConfig.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  checkEmailConfirmed?: boolean\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AA6BA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 19370, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19375, "column": 0}, "map": {"version":3,"file":"getPopularFeedGenerators.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/unspecced/getPopularFeedGenerators.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from '../feed/defs'\n\nexport interface QueryParams {\n  limit?: number\n  cursor?: string\n  query?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  feeds: AppBskyFeedDefs.GeneratorView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAmCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 19383, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19388, "column": 0}, "map": {"version":3,"file":"getSuggestionsSkeleton.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/unspecced/getSuggestionsSkeleton.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyUnspeccedDefs from './defs'\n\nexport interface QueryParams {\n  /** DID of the account making the request (not included for public/unauthenticated queries). Used to boost followed accounts in ranking. */\n  viewer?: string\n  limit?: number\n  cursor?: string\n  /** DID of the account to get suggestions relative to. If not provided, suggestions will be based on the viewer. */\n  relativeToDid?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  actors: AppBskyUnspeccedDefs.SkeletonSearchActor[]\n  /** DID of the account these suggestions are relative to. If this is returned undefined, suggestions are based on the viewer. */\n  relativeToDid?: string\n  /** Snowflake for this recommendation, use when submitting recommendation events. */\n  recId?: number\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AA0CA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 19396, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19401, "column": 0}, "map": {"version":3,"file":"getTaggedSuggestions.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/unspecced/getTaggedSuggestions.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  suggestions: Suggestion[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n\nexport interface Suggestion {\n  tag: string\n  subjectType: 'actor' | 'feed' | (string & {})\n  subject: string\n  [k: string]: unknown\n}\n\nexport function isSuggestion(v: unknown): v is Suggestion {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.unspecced.getTaggedSuggestions#suggestion'\n  )\n}\n\nexport function validateSuggestion(v: unknown): ValidationResult {\n  return lexicons.validate(\n    'app.bsky.unspecced.getTaggedSuggestions#suggestion',\n    v,\n  )\n}\n"],"names":[],"mappings":";;;;AA6BA,QAAA,UAAA,GAAA,WAEC;AASD,QAAA,YAAA,GAAA,aAMC;AAED,QAAA,kBAAA,GAAA,mBAKC;AAhDD,MAAA,qCAAiD;AACjD,MAAA,6CAA+C;AAuB/C,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC;AASD,SAAgB,YAAY,CAAC,CAAU;IACrC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,oDAAoD,CACjE,CAAA;AACH,CAAC;AAED,SAAgB,kBAAkB,CAAC,CAAU;IAC3C,OAAO,WAAA,QAAQ,CAAC,QAAQ,CACtB,oDAAoD,EACpD,CAAC,CACF,CAAA;AACH,CAAC","ignoreList":[0]}},
    {"offset": {"line": 19419, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19424, "column": 0}, "map": {"version":3,"file":"getTrendingTopics.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/unspecced/getTrendingTopics.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyUnspeccedDefs from './defs'\n\nexport interface QueryParams {\n  /** DID of the account making the request (not included for public/unauthenticated queries). Used to boost followed accounts in ranking. */\n  viewer?: string\n  limit?: number\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  topics: AppBskyUnspeccedDefs.TrendingTopic[]\n  suggested: AppBskyUnspeccedDefs.TrendingTopic[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAmCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 19432, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19437, "column": 0}, "map": {"version":3,"file":"defs.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/video/defs.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface JobStatus {\n  jobId: string\n  did: string\n  /** The state of the video processing job. All values not listed as a known value indicate that the job is in process. */\n  state: 'JOB_STATE_COMPLETED' | 'JOB_STATE_FAILED' | (string & {})\n  /** Progress within the current processing state. */\n  progress?: number\n  blob?: BlobRef\n  error?: string\n  message?: string\n  [k: string]: unknown\n}\n\nexport function isJobStatus(v: unknown): v is JobStatus {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.video.defs#jobStatus'\n  )\n}\n\nexport function validateJobStatus(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.video.defs#jobStatus', v)\n}\n"],"names":[],"mappings":";;;;AAqBA,QAAA,WAAA,GAAA,YAMC;AAED,QAAA,iBAAA,GAAA,kBAEC;AA3BD,MAAA,qCAAiD;AACjD,MAAA,6CAA+C;AAgB/C,SAAgB,WAAW,CAAC,CAAU;IACpC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,+BAA+B,CAC5C,CAAA;AACH,CAAC;AAED,SAAgB,iBAAiB,CAAC,CAAU;IAC1C,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,+BAA+B,EAAE,CAAC,CAAC,CAAA;AAC9D,CAAC","ignoreList":[0]}},
    {"offset": {"line": 19451, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19456, "column": 0}, "map": {"version":3,"file":"getJobStatus.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/video/getJobStatus.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyVideoDefs from './defs'\n\nexport interface QueryParams {\n  jobId: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  jobStatus: AppBskyVideoDefs.JobStatus\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAgCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 19464, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19469, "column": 0}, "map": {"version":3,"file":"getUploadLimits.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/video/getUploadLimits.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  canUpload: boolean\n  remainingDailyVideos?: number\n  remainingDailyBytes?: number\n  message?: string\n  error?: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAiCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 19477, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19482, "column": 0}, "map": {"version":3,"file":"uploadVideo.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/app/bsky/video/uploadVideo.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyVideoDefs from './defs'\n\nexport interface QueryParams {}\n\nexport type InputSchema = string | Uint8Array | Blob\n\nexport interface OutputSchema {\n  jobStatus: AppBskyVideoDefs.JobStatus\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'video/mp4'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAgCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 19490, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19495, "column": 0}, "map": {"version":3,"file":"declaration.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/chat/bsky/actor/declaration.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface Record {\n  allowIncoming: 'all' | 'none' | 'following' | (string & {})\n  [k: string]: unknown\n}\n\nexport function isRecord(v: unknown): v is Record {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'chat.bsky.actor.declaration#main' ||\n      v.$type === 'chat.bsky.actor.declaration')\n  )\n}\n\nexport function validateRecord(v: unknown): ValidationResult {\n  return lexicons.validate('chat.bsky.actor.declaration#main', v)\n}\n"],"names":[],"mappings":";;;;AAaA,QAAA,QAAA,GAAA,SAOC;AAED,QAAA,cAAA,GAAA,eAEC;AApBD,MAAA,qCAAiD;AACjD,MAAA,6CAA+C;AAQ/C,SAAgB,QAAQ,CAAC,CAAU;IACjC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,CAAC,KAAK,KAAK,kCAAkC,IAC7C,CAAC,CAAC,KAAK,KAAK,6BAA6B,CAAC,CAC7C,CAAA;AACH,CAAC;AAED,SAAgB,cAAc,CAAC,CAAU;IACvC,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,kCAAkC,EAAE,CAAC,CAAC,CAAA;AACjE,CAAC","ignoreList":[0]}},
    {"offset": {"line": 19509, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19514, "column": 0}, "map": {"version":3,"file":"defs.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/chat/bsky/actor/defs.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from '../../../app/bsky/actor/defs'\nimport * as ComAtprotoLabelDefs from '../../../com/atproto/label/defs'\n\nexport interface ProfileViewBasic {\n  did: string\n  handle: string\n  displayName?: string\n  avatar?: string\n  associated?: AppBskyActorDefs.ProfileAssociated\n  viewer?: AppBskyActorDefs.ViewerState\n  labels?: ComAtprotoLabelDefs.Label[]\n  /** Set to true when the actor cannot actively participate in converations */\n  chatDisabled?: boolean\n  [k: string]: unknown\n}\n\nexport function isProfileViewBasic(v: unknown): v is ProfileViewBasic {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'chat.bsky.actor.defs#profileViewBasic'\n  )\n}\n\nexport function validateProfileViewBasic(v: unknown): ValidationResult {\n  return lexicons.validate('chat.bsky.actor.defs#profileViewBasic', v)\n}\n"],"names":[],"mappings":";;;;AAuBA,QAAA,kBAAA,GAAA,mBAMC;AAED,QAAA,wBAAA,GAAA,yBAEC;AA7BD,MAAA,qCAAiD;AACjD,MAAA,6CAA+C;AAkB/C,SAAgB,kBAAkB,CAAC,CAAU;IAC3C,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,uCAAuC,CACpD,CAAA;AACH,CAAC;AAED,SAAgB,wBAAwB,CAAC,CAAU;IACjD,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,uCAAuC,EAAE,CAAC,CAAC,CAAA;AACtE,CAAC","ignoreList":[0]}},
    {"offset": {"line": 19528, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19533, "column": 0}, "map": {"version":3,"file":"deleteAccount.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/chat/bsky/actor/deleteAccount.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AA6BA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 19541, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19546, "column": 0}, "map": {"version":3,"file":"exportAccountData.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/chat/bsky/actor/exportAccountData.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: Uint8Array\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAwBA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 19554, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19559, "column": 0}, "map": {"version":3,"file":"defs.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/chat/bsky/convo/defs.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyRichtextFacet from '../../../app/bsky/richtext/facet'\nimport * as AppBskyEmbedRecord from '../../../app/bsky/embed/record'\nimport * as ChatBskyActorDefs from '../actor/defs'\n\nexport interface MessageRef {\n  did: string\n  convoId: string\n  messageId: string\n  [k: string]: unknown\n}\n\nexport function isMessageRef(v: unknown): v is MessageRef {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'chat.bsky.convo.defs#messageRef'\n  )\n}\n\nexport function validateMessageRef(v: unknown): ValidationResult {\n  return lexicons.validate('chat.bsky.convo.defs#messageRef', v)\n}\n\nexport interface MessageInput {\n  text: string\n  /** Annotations of text (mentions, URLs, hashtags, etc) */\n  facets?: AppBskyRichtextFacet.Main[]\n  embed?: AppBskyEmbedRecord.Main | { $type: string; [k: string]: unknown }\n  [k: string]: unknown\n}\n\nexport function isMessageInput(v: unknown): v is MessageInput {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'chat.bsky.convo.defs#messageInput'\n  )\n}\n\nexport function validateMessageInput(v: unknown): ValidationResult {\n  return lexicons.validate('chat.bsky.convo.defs#messageInput', v)\n}\n\nexport interface MessageView {\n  id: string\n  rev: string\n  text: string\n  /** Annotations of text (mentions, URLs, hashtags, etc) */\n  facets?: AppBskyRichtextFacet.Main[]\n  embed?: AppBskyEmbedRecord.View | { $type: string; [k: string]: unknown }\n  sender: MessageViewSender\n  sentAt: string\n  [k: string]: unknown\n}\n\nexport function isMessageView(v: unknown): v is MessageView {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'chat.bsky.convo.defs#messageView'\n  )\n}\n\nexport function validateMessageView(v: unknown): ValidationResult {\n  return lexicons.validate('chat.bsky.convo.defs#messageView', v)\n}\n\nexport interface DeletedMessageView {\n  id: string\n  rev: string\n  sender: MessageViewSender\n  sentAt: string\n  [k: string]: unknown\n}\n\nexport function isDeletedMessageView(v: unknown): v is DeletedMessageView {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'chat.bsky.convo.defs#deletedMessageView'\n  )\n}\n\nexport function validateDeletedMessageView(v: unknown): ValidationResult {\n  return lexicons.validate('chat.bsky.convo.defs#deletedMessageView', v)\n}\n\nexport interface MessageViewSender {\n  did: string\n  [k: string]: unknown\n}\n\nexport function isMessageViewSender(v: unknown): v is MessageViewSender {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'chat.bsky.convo.defs#messageViewSender'\n  )\n}\n\nexport function validateMessageViewSender(v: unknown): ValidationResult {\n  return lexicons.validate('chat.bsky.convo.defs#messageViewSender', v)\n}\n\nexport interface ConvoView {\n  id: string\n  rev: string\n  members: ChatBskyActorDefs.ProfileViewBasic[]\n  lastMessage?:\n    | MessageView\n    | DeletedMessageView\n    | { $type: string; [k: string]: unknown }\n  muted: boolean\n  opened?: boolean\n  unreadCount: number\n  [k: string]: unknown\n}\n\nexport function isConvoView(v: unknown): v is ConvoView {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'chat.bsky.convo.defs#convoView'\n  )\n}\n\nexport function validateConvoView(v: unknown): ValidationResult {\n  return lexicons.validate('chat.bsky.convo.defs#convoView', v)\n}\n\nexport interface LogBeginConvo {\n  rev: string\n  convoId: string\n  [k: string]: unknown\n}\n\nexport function isLogBeginConvo(v: unknown): v is LogBeginConvo {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'chat.bsky.convo.defs#logBeginConvo'\n  )\n}\n\nexport function validateLogBeginConvo(v: unknown): ValidationResult {\n  return lexicons.validate('chat.bsky.convo.defs#logBeginConvo', v)\n}\n\nexport interface LogLeaveConvo {\n  rev: string\n  convoId: string\n  [k: string]: unknown\n}\n\nexport function isLogLeaveConvo(v: unknown): v is LogLeaveConvo {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'chat.bsky.convo.defs#logLeaveConvo'\n  )\n}\n\nexport function validateLogLeaveConvo(v: unknown): ValidationResult {\n  return lexicons.validate('chat.bsky.convo.defs#logLeaveConvo', v)\n}\n\nexport interface LogCreateMessage {\n  rev: string\n  convoId: string\n  message:\n    | MessageView\n    | DeletedMessageView\n    | { $type: string; [k: string]: unknown }\n  [k: string]: unknown\n}\n\nexport function isLogCreateMessage(v: unknown): v is LogCreateMessage {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'chat.bsky.convo.defs#logCreateMessage'\n  )\n}\n\nexport function validateLogCreateMessage(v: unknown): ValidationResult {\n  return lexicons.validate('chat.bsky.convo.defs#logCreateMessage', v)\n}\n\nexport interface LogDeleteMessage {\n  rev: string\n  convoId: string\n  message:\n    | MessageView\n    | DeletedMessageView\n    | { $type: string; [k: string]: unknown }\n  [k: string]: unknown\n}\n\nexport function isLogDeleteMessage(v: unknown): v is LogDeleteMessage {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'chat.bsky.convo.defs#logDeleteMessage'\n  )\n}\n\nexport function validateLogDeleteMessage(v: unknown): ValidationResult {\n  return lexicons.validate('chat.bsky.convo.defs#logDeleteMessage', v)\n}\n"],"names":[],"mappings":";;;;AAkBA,QAAA,YAAA,GAAA,aAMC;AAED,QAAA,kBAAA,GAAA,mBAEC;AAUD,QAAA,cAAA,GAAA,eAMC;AAED,QAAA,oBAAA,GAAA,qBAEC;AAcD,QAAA,aAAA,GAAA,cAMC;AAED,QAAA,mBAAA,GAAA,oBAEC;AAUD,QAAA,oBAAA,GAAA,qBAMC;AAED,QAAA,0BAAA,GAAA,2BAEC;AAOD,QAAA,mBAAA,GAAA,oBAMC;AAED,QAAA,yBAAA,GAAA,0BAEC;AAgBD,QAAA,WAAA,GAAA,YAMC;AAED,QAAA,iBAAA,GAAA,kBAEC;AAQD,QAAA,eAAA,GAAA,gBAMC;AAED,QAAA,qBAAA,GAAA,sBAEC;AAQD,QAAA,eAAA,GAAA,gBAMC;AAED,QAAA,qBAAA,GAAA,sBAEC;AAYD,QAAA,kBAAA,GAAA,mBAMC;AAED,QAAA,wBAAA,GAAA,yBAEC;AAYD,QAAA,kBAAA,GAAA,mBAMC;AAED,QAAA,wBAAA,GAAA,yBAEC;AAnND,MAAA,qCAAiD;AACjD,MAAA,6CAA+C;AAa/C,SAAgB,YAAY,CAAC,CAAU;IACrC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,iCAAiC,CAC9C,CAAA;AACH,CAAC;AAED,SAAgB,kBAAkB,CAAC,CAAU;IAC3C,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,iCAAiC,EAAE,CAAC,CAAC,CAAA;AAChE,CAAC;AAUD,SAAgB,cAAc,CAAC,CAAU;IACvC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,mCAAmC,CAChD,CAAA;AACH,CAAC;AAED,SAAgB,oBAAoB,CAAC,CAAU;IAC7C,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,mCAAmC,EAAE,CAAC,CAAC,CAAA;AAClE,CAAC;AAcD,SAAgB,aAAa,CAAC,CAAU;IACtC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,kCAAkC,CAC/C,CAAA;AACH,CAAC;AAED,SAAgB,mBAAmB,CAAC,CAAU;IAC5C,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,kCAAkC,EAAE,CAAC,CAAC,CAAA;AACjE,CAAC;AAUD,SAAgB,oBAAoB,CAAC,CAAU;IAC7C,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,yCAAyC,CACtD,CAAA;AACH,CAAC;AAED,SAAgB,0BAA0B,CAAC,CAAU;IACnD,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,yCAAyC,EAAE,CAAC,CAAC,CAAA;AACxE,CAAC;AAOD,SAAgB,mBAAmB,CAAC,CAAU;IAC5C,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,wCAAwC,CACrD,CAAA;AACH,CAAC;AAED,SAAgB,yBAAyB,CAAC,CAAU;IAClD,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,wCAAwC,EAAE,CAAC,CAAC,CAAA;AACvE,CAAC;AAgBD,SAAgB,WAAW,CAAC,CAAU;IACpC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,gCAAgC,CAC7C,CAAA;AACH,CAAC;AAED,SAAgB,iBAAiB,CAAC,CAAU;IAC1C,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,gCAAgC,EAAE,CAAC,CAAC,CAAA;AAC/D,CAAC;AAQD,SAAgB,eAAe,CAAC,CAAU;IACxC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,oCAAoC,CACjD,CAAA;AACH,CAAC;AAED,SAAgB,qBAAqB,CAAC,CAAU;IAC9C,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,oCAAoC,EAAE,CAAC,CAAC,CAAA;AACnE,CAAC;AAQD,SAAgB,eAAe,CAAC,CAAU;IACxC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,oCAAoC,CACjD,CAAA;AACH,CAAC;AAED,SAAgB,qBAAqB,CAAC,CAAU;IAC9C,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,oCAAoC,EAAE,CAAC,CAAC,CAAA;AACnE,CAAC;AAYD,SAAgB,kBAAkB,CAAC,CAAU;IAC3C,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,uCAAuC,CACpD,CAAA;AACH,CAAC;AAED,SAAgB,wBAAwB,CAAC,CAAU;IACjD,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,uCAAuC,EAAE,CAAC,CAAC,CAAA;AACtE,CAAC;AAYD,SAAgB,kBAAkB,CAAC,CAAU;IAC3C,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,uCAAuC,CACpD,CAAA;AACH,CAAC;AAED,SAAgB,wBAAwB,CAAC,CAAU;IACjD,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,uCAAuC,EAAE,CAAC,CAAC,CAAA;AACtE,CAAC","ignoreList":[0]}},
    {"offset": {"line": 19645, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19650, "column": 0}, "map": {"version":3,"file":"deleteMessageForSelf.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/chat/bsky/convo/deleteMessageForSelf.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ChatBskyConvoDefs from './defs'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  convoId: string\n  messageId: string\n  [k: string]: unknown\n}\n\nexport type OutputSchema = ChatBskyConvoDefs.DeletedMessageView\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAiCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 19658, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19663, "column": 0}, "map": {"version":3,"file":"getConvo.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/chat/bsky/convo/getConvo.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ChatBskyConvoDefs from './defs'\n\nexport interface QueryParams {\n  convoId: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  convo: ChatBskyConvoDefs.ConvoView\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAgCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 19671, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19676, "column": 0}, "map": {"version":3,"file":"getConvoForMembers.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/chat/bsky/convo/getConvoForMembers.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ChatBskyConvoDefs from './defs'\n\nexport interface QueryParams {\n  members: string[]\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  convo: ChatBskyConvoDefs.ConvoView\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAgCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 19684, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19689, "column": 0}, "map": {"version":3,"file":"getLog.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/chat/bsky/convo/getLog.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ChatBskyConvoDefs from './defs'\n\nexport interface QueryParams {\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  logs: (\n    | ChatBskyConvoDefs.LogBeginConvo\n    | ChatBskyConvoDefs.LogLeaveConvo\n    | ChatBskyConvoDefs.LogCreateMessage\n    | ChatBskyConvoDefs.LogDeleteMessage\n    | { $type: string; [k: string]: unknown }\n  )[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAuCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 19697, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19702, "column": 0}, "map": {"version":3,"file":"getMessages.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/chat/bsky/convo/getMessages.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ChatBskyConvoDefs from './defs'\n\nexport interface QueryParams {\n  convoId: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  messages: (\n    | ChatBskyConvoDefs.MessageView\n    | ChatBskyConvoDefs.DeletedMessageView\n    | { $type: string; [k: string]: unknown }\n  )[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAuCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 19710, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19715, "column": 0}, "map": {"version":3,"file":"leaveConvo.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/chat/bsky/convo/leaveConvo.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  convoId: string\n  [k: string]: unknown\n}\n\nexport interface OutputSchema {\n  convoId: string\n  rev: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAmCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 19723, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19728, "column": 0}, "map": {"version":3,"file":"listConvos.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/chat/bsky/convo/listConvos.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ChatBskyConvoDefs from './defs'\n\nexport interface QueryParams {\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  convos: ChatBskyConvoDefs.ConvoView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAkCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 19736, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19741, "column": 0}, "map": {"version":3,"file":"muteConvo.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/chat/bsky/convo/muteConvo.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ChatBskyConvoDefs from './defs'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  convoId: string\n  [k: string]: unknown\n}\n\nexport interface OutputSchema {\n  convo: ChatBskyConvoDefs.ConvoView\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAmCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 19749, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19754, "column": 0}, "map": {"version":3,"file":"sendMessage.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/chat/bsky/convo/sendMessage.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ChatBskyConvoDefs from './defs'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  convoId: string\n  message: ChatBskyConvoDefs.MessageInput\n  [k: string]: unknown\n}\n\nexport type OutputSchema = ChatBskyConvoDefs.MessageView\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAiCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 19762, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19767, "column": 0}, "map": {"version":3,"file":"sendMessageBatch.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/chat/bsky/convo/sendMessageBatch.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ChatBskyConvoDefs from './defs'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  items: BatchItem[]\n  [k: string]: unknown\n}\n\nexport interface OutputSchema {\n  items: ChatBskyConvoDefs.MessageView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n\nexport interface BatchItem {\n  convoId: string\n  message: ChatBskyConvoDefs.MessageInput\n  [k: string]: unknown\n}\n\nexport function isBatchItem(v: unknown): v is BatchItem {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'chat.bsky.convo.sendMessageBatch#batchItem'\n  )\n}\n\nexport function validateBatchItem(v: unknown): ValidationResult {\n  return lexicons.validate('chat.bsky.convo.sendMessageBatch#batchItem', v)\n}\n"],"names":[],"mappings":";;;;AAmCA,QAAA,UAAA,GAAA,WAEC;AAQD,QAAA,WAAA,GAAA,YAMC;AAED,QAAA,iBAAA,GAAA,kBAEC;AAlDD,MAAA,qCAAiD;AACjD,MAAA,6CAA+C;AA6B/C,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC;AAQD,SAAgB,WAAW,CAAC,CAAU;IACpC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,4CAA4C,CACzD,CAAA;AACH,CAAC;AAED,SAAgB,iBAAiB,CAAC,CAAU;IAC1C,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,4CAA4C,EAAE,CAAC,CAAC,CAAA;AAC3E,CAAC","ignoreList":[0]}},
    {"offset": {"line": 19785, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19790, "column": 0}, "map": {"version":3,"file":"unmuteConvo.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/chat/bsky/convo/unmuteConvo.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ChatBskyConvoDefs from './defs'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  convoId: string\n  [k: string]: unknown\n}\n\nexport interface OutputSchema {\n  convo: ChatBskyConvoDefs.ConvoView\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAmCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 19798, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19803, "column": 0}, "map": {"version":3,"file":"updateRead.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/chat/bsky/convo/updateRead.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ChatBskyConvoDefs from './defs'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  convoId: string\n  messageId?: string\n  [k: string]: unknown\n}\n\nexport interface OutputSchema {\n  convo: ChatBskyConvoDefs.ConvoView\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAoCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 19811, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19816, "column": 0}, "map": {"version":3,"file":"getActorMetadata.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/chat/bsky/moderation/getActorMetadata.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  actor: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  day: Metadata\n  month: Metadata\n  all: Metadata\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n\nexport interface Metadata {\n  messagesSent: number\n  messagesReceived: number\n  convos: number\n  convosStarted: number\n  [k: string]: unknown\n}\n\nexport function isMetadata(v: unknown): v is Metadata {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'chat.bsky.moderation.getActorMetadata#metadata'\n  )\n}\n\nexport function validateMetadata(v: unknown): ValidationResult {\n  return lexicons.validate('chat.bsky.moderation.getActorMetadata#metadata', v)\n}\n"],"names":[],"mappings":";;;;AAiCA,QAAA,UAAA,GAAA,WAEC;AAUD,QAAA,UAAA,GAAA,WAMC;AAED,QAAA,gBAAA,GAAA,iBAEC;AAlDD,MAAA,qCAAiD;AACjD,MAAA,6CAA+C;AA2B/C,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC;AAUD,SAAgB,UAAU,CAAC,CAAU;IACnC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,gDAAgD,CAC7D,CAAA;AACH,CAAC;AAED,SAAgB,gBAAgB,CAAC,CAAU;IACzC,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,gDAAgD,EAAE,CAAC,CAAC,CAAA;AAC/E,CAAC","ignoreList":[0]}},
    {"offset": {"line": 19834, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19839, "column": 0}, "map": {"version":3,"file":"getMessageContext.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/chat/bsky/moderation/getMessageContext.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ChatBskyConvoDefs from '../convo/defs'\n\nexport interface QueryParams {\n  /** Conversation that the message is from. NOTE: this field will eventually be required. */\n  convoId?: string\n  messageId: string\n  before?: number\n  after?: number\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  messages: (\n    | ChatBskyConvoDefs.MessageView\n    | ChatBskyConvoDefs.DeletedMessageView\n    | { $type: string; [k: string]: unknown }\n  )[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAwCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 19847, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19852, "column": 0}, "map": {"version":3,"file":"updateActorAccess.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/chat/bsky/moderation/updateActorAccess.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  actor: string\n  allowAccess: boolean\n  ref?: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AA8BA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 19860, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19865, "column": 0}, "map": {"version":3,"file":"defs.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/tools/ozone/communication/defs.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface TemplateView {\n  id: string\n  /** Name of the template. */\n  name: string\n  /** Content of the template, can contain markdown and variable placeholders. */\n  subject?: string\n  /** Subject of the message, used in emails. */\n  contentMarkdown: string\n  disabled: boolean\n  /** Message language. */\n  lang?: string\n  /** DID of the user who last updated the template. */\n  lastUpdatedBy: string\n  createdAt: string\n  updatedAt: string\n  [k: string]: unknown\n}\n\nexport function isTemplateView(v: unknown): v is TemplateView {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.communication.defs#templateView'\n  )\n}\n\nexport function validateTemplateView(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.communication.defs#templateView', v)\n}\n"],"names":[],"mappings":";;;;AA0BA,QAAA,cAAA,GAAA,eAMC;AAED,QAAA,oBAAA,GAAA,qBAEC;AAhCD,MAAA,qCAAiD;AACjD,MAAA,6CAA+C;AAqB/C,SAAgB,cAAc,CAAC,CAAU;IACvC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,6CAA6C,CAC1D,CAAA;AACH,CAAC;AAED,SAAgB,oBAAoB,CAAC,CAAU;IAC7C,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,6CAA6C,EAAE,CAAC,CAAC,CAAA;AAC5E,CAAC","ignoreList":[0]}},
    {"offset": {"line": 19879, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19884, "column": 0}, "map": {"version":3,"file":"deleteTemplate.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/tools/ozone/communication/deleteTemplate.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  id: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AA4BA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 19892, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19897, "column": 0}, "map": {"version":3,"file":"listTemplates.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/tools/ozone/communication/listTemplates.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ToolsOzoneCommunicationDefs from './defs'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  communicationTemplates: ToolsOzoneCommunicationDefs.TemplateView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AA8BA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 19905, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19910, "column": 0}, "map": {"version":3,"file":"defs.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/tools/ozone/moderation/defs.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoAdminDefs from '../../../com/atproto/admin/defs'\nimport * as ComAtprotoRepoStrongRef from '../../../com/atproto/repo/strongRef'\nimport * as ChatBskyConvoDefs from '../../../chat/bsky/convo/defs'\nimport * as ComAtprotoModerationDefs from '../../../com/atproto/moderation/defs'\nimport * as ComAtprotoServerDefs from '../../../com/atproto/server/defs'\nimport * as ComAtprotoLabelDefs from '../../../com/atproto/label/defs'\n\nexport interface ModEventView {\n  id: number\n  event:\n    | ModEventTakedown\n    | ModEventReverseTakedown\n    | ModEventComment\n    | ModEventReport\n    | ModEventLabel\n    | ModEventAcknowledge\n    | ModEventEscalate\n    | ModEventMute\n    | ModEventUnmute\n    | ModEventMuteReporter\n    | ModEventUnmuteReporter\n    | ModEventEmail\n    | ModEventResolveAppeal\n    | ModEventDivert\n    | ModEventTag\n    | AccountEvent\n    | IdentityEvent\n    | RecordEvent\n    | { $type: string; [k: string]: unknown }\n  subject:\n    | ComAtprotoAdminDefs.RepoRef\n    | ComAtprotoRepoStrongRef.Main\n    | ChatBskyConvoDefs.MessageRef\n    | { $type: string; [k: string]: unknown }\n  subjectBlobCids: string[]\n  createdBy: string\n  createdAt: string\n  creatorHandle?: string\n  subjectHandle?: string\n  [k: string]: unknown\n}\n\nexport function isModEventView(v: unknown): v is ModEventView {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#modEventView'\n  )\n}\n\nexport function validateModEventView(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.moderation.defs#modEventView', v)\n}\n\nexport interface ModEventViewDetail {\n  id: number\n  event:\n    | ModEventTakedown\n    | ModEventReverseTakedown\n    | ModEventComment\n    | ModEventReport\n    | ModEventLabel\n    | ModEventAcknowledge\n    | ModEventEscalate\n    | ModEventMute\n    | ModEventUnmute\n    | ModEventMuteReporter\n    | ModEventUnmuteReporter\n    | ModEventEmail\n    | ModEventResolveAppeal\n    | ModEventDivert\n    | ModEventTag\n    | AccountEvent\n    | IdentityEvent\n    | RecordEvent\n    | { $type: string; [k: string]: unknown }\n  subject:\n    | RepoView\n    | RepoViewNotFound\n    | RecordView\n    | RecordViewNotFound\n    | { $type: string; [k: string]: unknown }\n  subjectBlobs: BlobView[]\n  createdBy: string\n  createdAt: string\n  [k: string]: unknown\n}\n\nexport function isModEventViewDetail(v: unknown): v is ModEventViewDetail {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#modEventViewDetail'\n  )\n}\n\nexport function validateModEventViewDetail(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.moderation.defs#modEventViewDetail', v)\n}\n\nexport interface SubjectStatusView {\n  id: number\n  subject:\n    | ComAtprotoAdminDefs.RepoRef\n    | ComAtprotoRepoStrongRef.Main\n    | { $type: string; [k: string]: unknown }\n  hosting?:\n    | AccountHosting\n    | RecordHosting\n    | { $type: string; [k: string]: unknown }\n  subjectBlobCids?: string[]\n  subjectRepoHandle?: string\n  /** Timestamp referencing when the last update was made to the moderation status of the subject */\n  updatedAt: string\n  /** Timestamp referencing the first moderation status impacting event was emitted on the subject */\n  createdAt: string\n  reviewState: SubjectReviewState\n  /** Sticky comment on the subject. */\n  comment?: string\n  muteUntil?: string\n  muteReportingUntil?: string\n  lastReviewedBy?: string\n  lastReviewedAt?: string\n  lastReportedAt?: string\n  /** Timestamp referencing when the author of the subject appealed a moderation action */\n  lastAppealedAt?: string\n  takendown?: boolean\n  /** True indicates that the a previously taken moderator action was appealed against, by the author of the content. False indicates last appeal was resolved by moderators. */\n  appealed?: boolean\n  suspendUntil?: string\n  tags?: string[]\n  [k: string]: unknown\n}\n\nexport function isSubjectStatusView(v: unknown): v is SubjectStatusView {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#subjectStatusView'\n  )\n}\n\nexport function validateSubjectStatusView(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.moderation.defs#subjectStatusView', v)\n}\n\nexport type SubjectReviewState =\n  | 'lex:tools.ozone.moderation.defs#reviewOpen'\n  | 'lex:tools.ozone.moderation.defs#reviewEscalated'\n  | 'lex:tools.ozone.moderation.defs#reviewClosed'\n  | 'lex:tools.ozone.moderation.defs#reviewNone'\n  | (string & {})\n\n/** Moderator review status of a subject: Open. Indicates that the subject needs to be reviewed by a moderator */\nexport const REVIEWOPEN = 'tools.ozone.moderation.defs#reviewOpen'\n/** Moderator review status of a subject: Escalated. Indicates that the subject was escalated for review by a moderator */\nexport const REVIEWESCALATED = 'tools.ozone.moderation.defs#reviewEscalated'\n/** Moderator review status of a subject: Closed. Indicates that the subject was already reviewed and resolved by a moderator */\nexport const REVIEWCLOSED = 'tools.ozone.moderation.defs#reviewClosed'\n/** Moderator review status of a subject: Unnecessary. Indicates that the subject does not need a review at the moment but there is probably some moderation related metadata available for it */\nexport const REVIEWNONE = 'tools.ozone.moderation.defs#reviewNone'\n\n/** Take down a subject permanently or temporarily */\nexport interface ModEventTakedown {\n  comment?: string\n  /** Indicates how long the takedown should be in effect before automatically expiring. */\n  durationInHours?: number\n  /** If true, all other reports on content authored by this account will be resolved (acknowledged). */\n  acknowledgeAccountSubjects?: boolean\n  /** Names/Keywords of the policies that drove the decision. */\n  policies?: string[]\n  [k: string]: unknown\n}\n\nexport function isModEventTakedown(v: unknown): v is ModEventTakedown {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#modEventTakedown'\n  )\n}\n\nexport function validateModEventTakedown(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.moderation.defs#modEventTakedown', v)\n}\n\n/** Revert take down action on a subject */\nexport interface ModEventReverseTakedown {\n  /** Describe reasoning behind the reversal. */\n  comment?: string\n  [k: string]: unknown\n}\n\nexport function isModEventReverseTakedown(\n  v: unknown,\n): v is ModEventReverseTakedown {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#modEventReverseTakedown'\n  )\n}\n\nexport function validateModEventReverseTakedown(v: unknown): ValidationResult {\n  return lexicons.validate(\n    'tools.ozone.moderation.defs#modEventReverseTakedown',\n    v,\n  )\n}\n\n/** Resolve appeal on a subject */\nexport interface ModEventResolveAppeal {\n  /** Describe resolution. */\n  comment?: string\n  [k: string]: unknown\n}\n\nexport function isModEventResolveAppeal(\n  v: unknown,\n): v is ModEventResolveAppeal {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#modEventResolveAppeal'\n  )\n}\n\nexport function validateModEventResolveAppeal(v: unknown): ValidationResult {\n  return lexicons.validate(\n    'tools.ozone.moderation.defs#modEventResolveAppeal',\n    v,\n  )\n}\n\n/** Add a comment to a subject */\nexport interface ModEventComment {\n  comment: string\n  /** Make the comment persistent on the subject */\n  sticky?: boolean\n  [k: string]: unknown\n}\n\nexport function isModEventComment(v: unknown): v is ModEventComment {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#modEventComment'\n  )\n}\n\nexport function validateModEventComment(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.moderation.defs#modEventComment', v)\n}\n\n/** Report a subject */\nexport interface ModEventReport {\n  comment?: string\n  /** Set to true if the reporter was muted from reporting at the time of the event. These reports won't impact the reviewState of the subject. */\n  isReporterMuted?: boolean\n  reportType: ComAtprotoModerationDefs.ReasonType\n  [k: string]: unknown\n}\n\nexport function isModEventReport(v: unknown): v is ModEventReport {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#modEventReport'\n  )\n}\n\nexport function validateModEventReport(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.moderation.defs#modEventReport', v)\n}\n\n/** Apply/Negate labels on a subject */\nexport interface ModEventLabel {\n  comment?: string\n  createLabelVals: string[]\n  negateLabelVals: string[]\n  [k: string]: unknown\n}\n\nexport function isModEventLabel(v: unknown): v is ModEventLabel {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#modEventLabel'\n  )\n}\n\nexport function validateModEventLabel(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.moderation.defs#modEventLabel', v)\n}\n\nexport interface ModEventAcknowledge {\n  comment?: string\n  /** If true, all other reports on content authored by this account will be resolved (acknowledged). */\n  acknowledgeAccountSubjects?: boolean\n  [k: string]: unknown\n}\n\nexport function isModEventAcknowledge(v: unknown): v is ModEventAcknowledge {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#modEventAcknowledge'\n  )\n}\n\nexport function validateModEventAcknowledge(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.moderation.defs#modEventAcknowledge', v)\n}\n\nexport interface ModEventEscalate {\n  comment?: string\n  [k: string]: unknown\n}\n\nexport function isModEventEscalate(v: unknown): v is ModEventEscalate {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#modEventEscalate'\n  )\n}\n\nexport function validateModEventEscalate(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.moderation.defs#modEventEscalate', v)\n}\n\n/** Mute incoming reports on a subject */\nexport interface ModEventMute {\n  comment?: string\n  /** Indicates how long the subject should remain muted. */\n  durationInHours: number\n  [k: string]: unknown\n}\n\nexport function isModEventMute(v: unknown): v is ModEventMute {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#modEventMute'\n  )\n}\n\nexport function validateModEventMute(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.moderation.defs#modEventMute', v)\n}\n\n/** Unmute action on a subject */\nexport interface ModEventUnmute {\n  /** Describe reasoning behind the reversal. */\n  comment?: string\n  [k: string]: unknown\n}\n\nexport function isModEventUnmute(v: unknown): v is ModEventUnmute {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#modEventUnmute'\n  )\n}\n\nexport function validateModEventUnmute(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.moderation.defs#modEventUnmute', v)\n}\n\n/** Mute incoming reports from an account */\nexport interface ModEventMuteReporter {\n  comment?: string\n  /** Indicates how long the account should remain muted. Falsy value here means a permanent mute. */\n  durationInHours?: number\n  [k: string]: unknown\n}\n\nexport function isModEventMuteReporter(v: unknown): v is ModEventMuteReporter {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#modEventMuteReporter'\n  )\n}\n\nexport function validateModEventMuteReporter(v: unknown): ValidationResult {\n  return lexicons.validate(\n    'tools.ozone.moderation.defs#modEventMuteReporter',\n    v,\n  )\n}\n\n/** Unmute incoming reports from an account */\nexport interface ModEventUnmuteReporter {\n  /** Describe reasoning behind the reversal. */\n  comment?: string\n  [k: string]: unknown\n}\n\nexport function isModEventUnmuteReporter(\n  v: unknown,\n): v is ModEventUnmuteReporter {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#modEventUnmuteReporter'\n  )\n}\n\nexport function validateModEventUnmuteReporter(v: unknown): ValidationResult {\n  return lexicons.validate(\n    'tools.ozone.moderation.defs#modEventUnmuteReporter',\n    v,\n  )\n}\n\n/** Keep a log of outgoing email to a user */\nexport interface ModEventEmail {\n  /** The subject line of the email sent to the user. */\n  subjectLine: string\n  /** The content of the email sent to the user. */\n  content?: string\n  /** Additional comment about the outgoing comm. */\n  comment?: string\n  [k: string]: unknown\n}\n\nexport function isModEventEmail(v: unknown): v is ModEventEmail {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#modEventEmail'\n  )\n}\n\nexport function validateModEventEmail(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.moderation.defs#modEventEmail', v)\n}\n\n/** Divert a record's blobs to a 3rd party service for further scanning/tagging */\nexport interface ModEventDivert {\n  comment?: string\n  [k: string]: unknown\n}\n\nexport function isModEventDivert(v: unknown): v is ModEventDivert {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#modEventDivert'\n  )\n}\n\nexport function validateModEventDivert(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.moderation.defs#modEventDivert', v)\n}\n\n/** Add/Remove a tag on a subject */\nexport interface ModEventTag {\n  /** Tags to be added to the subject. If already exists, won't be duplicated. */\n  add: string[]\n  /** Tags to be removed to the subject. Ignores a tag If it doesn't exist, won't be duplicated. */\n  remove: string[]\n  /** Additional comment about added/removed tags. */\n  comment?: string\n  [k: string]: unknown\n}\n\nexport function isModEventTag(v: unknown): v is ModEventTag {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#modEventTag'\n  )\n}\n\nexport function validateModEventTag(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.moderation.defs#modEventTag', v)\n}\n\n/** Logs account status related events on a repo subject. Normally captured by automod from the firehose and emitted to ozone for historical tracking. */\nexport interface AccountEvent {\n  comment?: string\n  /** Indicates that the account has a repository which can be fetched from the host that emitted this event. */\n  active: boolean\n  status?:\n    | 'unknown'\n    | 'deactivated'\n    | 'deleted'\n    | 'takendown'\n    | 'suspended'\n    | 'tombstoned'\n    | (string & {})\n  timestamp: string\n  [k: string]: unknown\n}\n\nexport function isAccountEvent(v: unknown): v is AccountEvent {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#accountEvent'\n  )\n}\n\nexport function validateAccountEvent(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.moderation.defs#accountEvent', v)\n}\n\n/** Logs identity related events on a repo subject. Normally captured by automod from the firehose and emitted to ozone for historical tracking. */\nexport interface IdentityEvent {\n  comment?: string\n  handle?: string\n  pdsHost?: string\n  tombstone?: boolean\n  timestamp: string\n  [k: string]: unknown\n}\n\nexport function isIdentityEvent(v: unknown): v is IdentityEvent {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#identityEvent'\n  )\n}\n\nexport function validateIdentityEvent(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.moderation.defs#identityEvent', v)\n}\n\n/** Logs lifecycle event on a record subject. Normally captured by automod from the firehose and emitted to ozone for historical tracking. */\nexport interface RecordEvent {\n  comment?: string\n  op: 'create' | 'update' | 'delete' | (string & {})\n  cid?: string\n  timestamp: string\n  [k: string]: unknown\n}\n\nexport function isRecordEvent(v: unknown): v is RecordEvent {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#recordEvent'\n  )\n}\n\nexport function validateRecordEvent(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.moderation.defs#recordEvent', v)\n}\n\nexport interface RepoView {\n  did: string\n  handle: string\n  email?: string\n  relatedRecords: {}[]\n  indexedAt: string\n  moderation: Moderation\n  invitedBy?: ComAtprotoServerDefs.InviteCode\n  invitesDisabled?: boolean\n  inviteNote?: string\n  deactivatedAt?: string\n  threatSignatures?: ComAtprotoAdminDefs.ThreatSignature[]\n  [k: string]: unknown\n}\n\nexport function isRepoView(v: unknown): v is RepoView {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#repoView'\n  )\n}\n\nexport function validateRepoView(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.moderation.defs#repoView', v)\n}\n\nexport interface RepoViewDetail {\n  did: string\n  handle: string\n  email?: string\n  relatedRecords: {}[]\n  indexedAt: string\n  moderation: ModerationDetail\n  labels?: ComAtprotoLabelDefs.Label[]\n  invitedBy?: ComAtprotoServerDefs.InviteCode\n  invites?: ComAtprotoServerDefs.InviteCode[]\n  invitesDisabled?: boolean\n  inviteNote?: string\n  emailConfirmedAt?: string\n  deactivatedAt?: string\n  threatSignatures?: ComAtprotoAdminDefs.ThreatSignature[]\n  [k: string]: unknown\n}\n\nexport function isRepoViewDetail(v: unknown): v is RepoViewDetail {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#repoViewDetail'\n  )\n}\n\nexport function validateRepoViewDetail(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.moderation.defs#repoViewDetail', v)\n}\n\nexport interface RepoViewNotFound {\n  did: string\n  [k: string]: unknown\n}\n\nexport function isRepoViewNotFound(v: unknown): v is RepoViewNotFound {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#repoViewNotFound'\n  )\n}\n\nexport function validateRepoViewNotFound(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.moderation.defs#repoViewNotFound', v)\n}\n\nexport interface RecordView {\n  uri: string\n  cid: string\n  value: {}\n  blobCids: string[]\n  indexedAt: string\n  moderation: Moderation\n  repo: RepoView\n  [k: string]: unknown\n}\n\nexport function isRecordView(v: unknown): v is RecordView {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#recordView'\n  )\n}\n\nexport function validateRecordView(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.moderation.defs#recordView', v)\n}\n\nexport interface RecordViewDetail {\n  uri: string\n  cid: string\n  value: {}\n  blobs: BlobView[]\n  labels?: ComAtprotoLabelDefs.Label[]\n  indexedAt: string\n  moderation: ModerationDetail\n  repo: RepoView\n  [k: string]: unknown\n}\n\nexport function isRecordViewDetail(v: unknown): v is RecordViewDetail {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#recordViewDetail'\n  )\n}\n\nexport function validateRecordViewDetail(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.moderation.defs#recordViewDetail', v)\n}\n\nexport interface RecordViewNotFound {\n  uri: string\n  [k: string]: unknown\n}\n\nexport function isRecordViewNotFound(v: unknown): v is RecordViewNotFound {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#recordViewNotFound'\n  )\n}\n\nexport function validateRecordViewNotFound(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.moderation.defs#recordViewNotFound', v)\n}\n\nexport interface Moderation {\n  subjectStatus?: SubjectStatusView\n  [k: string]: unknown\n}\n\nexport function isModeration(v: unknown): v is Moderation {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#moderation'\n  )\n}\n\nexport function validateModeration(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.moderation.defs#moderation', v)\n}\n\nexport interface ModerationDetail {\n  subjectStatus?: SubjectStatusView\n  [k: string]: unknown\n}\n\nexport function isModerationDetail(v: unknown): v is ModerationDetail {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#moderationDetail'\n  )\n}\n\nexport function validateModerationDetail(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.moderation.defs#moderationDetail', v)\n}\n\nexport interface BlobView {\n  cid: string\n  mimeType: string\n  size: number\n  createdAt: string\n  details?:\n    | ImageDetails\n    | VideoDetails\n    | { $type: string; [k: string]: unknown }\n  moderation?: Moderation\n  [k: string]: unknown\n}\n\nexport function isBlobView(v: unknown): v is BlobView {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#blobView'\n  )\n}\n\nexport function validateBlobView(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.moderation.defs#blobView', v)\n}\n\nexport interface ImageDetails {\n  width: number\n  height: number\n  [k: string]: unknown\n}\n\nexport function isImageDetails(v: unknown): v is ImageDetails {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#imageDetails'\n  )\n}\n\nexport function validateImageDetails(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.moderation.defs#imageDetails', v)\n}\n\nexport interface VideoDetails {\n  width: number\n  height: number\n  length: number\n  [k: string]: unknown\n}\n\nexport function isVideoDetails(v: unknown): v is VideoDetails {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#videoDetails'\n  )\n}\n\nexport function validateVideoDetails(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.moderation.defs#videoDetails', v)\n}\n\nexport interface AccountHosting {\n  status:\n    | 'takendown'\n    | 'suspended'\n    | 'deleted'\n    | 'deactivated'\n    | 'unknown'\n    | (string & {})\n  updatedAt?: string\n  createdAt?: string\n  deletedAt?: string\n  deactivatedAt?: string\n  reactivatedAt?: string\n  [k: string]: unknown\n}\n\nexport function isAccountHosting(v: unknown): v is AccountHosting {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#accountHosting'\n  )\n}\n\nexport function validateAccountHosting(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.moderation.defs#accountHosting', v)\n}\n\nexport interface RecordHosting {\n  status: 'deleted' | 'unknown' | (string & {})\n  updatedAt?: string\n  createdAt?: string\n  deletedAt?: string\n  [k: string]: unknown\n}\n\nexport function isRecordHosting(v: unknown): v is RecordHosting {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#recordHosting'\n  )\n}\n\nexport function validateRecordHosting(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.moderation.defs#recordHosting', v)\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 20193, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20198, "column": 0}, "map": {"version":3,"file":"getEvent.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/tools/ozone/moderation/getEvent.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ToolsOzoneModerationDefs from './defs'\n\nexport interface QueryParams {\n  id: number\n}\n\nexport type InputSchema = undefined\nexport type OutputSchema = ToolsOzoneModerationDefs.ModEventViewDetail\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AA4BA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 20206, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20211, "column": 0}, "map": {"version":3,"file":"getRecords.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/tools/ozone/moderation/getRecords.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ToolsOzoneModerationDefs from './defs'\n\nexport interface QueryParams {\n  uris: string[]\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  records: (\n    | ToolsOzoneModerationDefs.RecordViewDetail\n    | ToolsOzoneModerationDefs.RecordViewNotFound\n    | { $type: string; [k: string]: unknown }\n  )[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAoCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 20219, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20224, "column": 0}, "map": {"version":3,"file":"getRepos.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/tools/ozone/moderation/getRepos.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ToolsOzoneModerationDefs from './defs'\n\nexport interface QueryParams {\n  dids: string[]\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  repos: (\n    | ToolsOzoneModerationDefs.RepoViewDetail\n    | ToolsOzoneModerationDefs.RepoViewNotFound\n    | { $type: string; [k: string]: unknown }\n  )[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAoCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 20232, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20237, "column": 0}, "map": {"version":3,"file":"queryEvents.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/tools/ozone/moderation/queryEvents.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ToolsOzoneModerationDefs from './defs'\n\nexport interface QueryParams {\n  /** The types of events (fully qualified string in the format of tools.ozone.moderation.defs#modEvent<name>) to filter by. If not specified, all events are returned. */\n  types?: string[]\n  createdBy?: string\n  /** Sort direction for the events. Defaults to descending order of created at timestamp. */\n  sortDirection?: 'asc' | 'desc'\n  /** Retrieve events created after a given timestamp */\n  createdAfter?: string\n  /** Retrieve events created before a given timestamp */\n  createdBefore?: string\n  subject?: string\n  /** If specified, only events where the subject belongs to the given collections will be returned. When subjectType is set to 'account', this will be ignored. */\n  collections?: string[]\n  /** If specified, only events where the subject is of the given type (account or record) will be returned. When this is set to 'account' the 'collections' parameter will be ignored. When includeAllUserRecords or subject is set, this will be ignored. */\n  subjectType?: 'account' | 'record' | (string & {})\n  /** If true, events on all record types (posts, lists, profile etc.) or records from given 'collections' param, owned by the did are returned. */\n  includeAllUserRecords?: boolean\n  limit?: number\n  /** If true, only events with comments are returned */\n  hasComment?: boolean\n  /** If specified, only events with comments containing the keyword are returned. Apply || separator to use multiple keywords and match using OR condition. */\n  comment?: string\n  /** If specified, only events where all of these labels were added are returned */\n  addedLabels?: string[]\n  /** If specified, only events where all of these labels were removed are returned */\n  removedLabels?: string[]\n  /** If specified, only events where all of these tags were added are returned */\n  addedTags?: string[]\n  /** If specified, only events where all of these tags were removed are returned */\n  removedTags?: string[]\n  reportTypes?: string[]\n  policies?: string[]\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  events: ToolsOzoneModerationDefs.ModEventView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAgEA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 20245, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20250, "column": 0}, "map": {"version":3,"file":"queryStatuses.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/tools/ozone/moderation/queryStatuses.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ToolsOzoneModerationDefs from './defs'\n\nexport interface QueryParams {\n  /** Number of queues being used by moderators. Subjects will be split among all queues. */\n  queueCount?: number\n  /** Index of the queue to fetch subjects from. Works only when queueCount value is specified. */\n  queueIndex?: number\n  /** A seeder to shuffle/balance the queue items. */\n  queueSeed?: string\n  /** All subjects, or subjects from given 'collections' param, belonging to the account specified in the 'subject' param will be returned. */\n  includeAllUserRecords?: boolean\n  /** The subject to get the status for. */\n  subject?: string\n  /** Search subjects by keyword from comments */\n  comment?: string\n  /** Search subjects reported after a given timestamp */\n  reportedAfter?: string\n  /** Search subjects reported before a given timestamp */\n  reportedBefore?: string\n  /** Search subjects reviewed after a given timestamp */\n  reviewedAfter?: string\n  /** Search subjects where the associated record/account was deleted after a given timestamp */\n  hostingDeletedAfter?: string\n  /** Search subjects where the associated record/account was deleted before a given timestamp */\n  hostingDeletedBefore?: string\n  /** Search subjects where the associated record/account was updated after a given timestamp */\n  hostingUpdatedAfter?: string\n  /** Search subjects where the associated record/account was updated before a given timestamp */\n  hostingUpdatedBefore?: string\n  /** Search subjects by the status of the associated record/account */\n  hostingStatuses?: string[]\n  /** Search subjects reviewed before a given timestamp */\n  reviewedBefore?: string\n  /** By default, we don't include muted subjects in the results. Set this to true to include them. */\n  includeMuted?: boolean\n  /** When set to true, only muted subjects and reporters will be returned. */\n  onlyMuted?: boolean\n  /** Specify when fetching subjects in a certain state */\n  reviewState?: string\n  ignoreSubjects?: string[]\n  /** Get all subject statuses that were reviewed by a specific moderator */\n  lastReviewedBy?: string\n  sortField?: 'lastReviewedAt' | 'lastReportedAt'\n  sortDirection?: 'asc' | 'desc'\n  /** Get subjects that were taken down */\n  takendown?: boolean\n  /** Get subjects in unresolved appealed status */\n  appealed?: boolean\n  limit?: number\n  tags?: string[]\n  excludeTags?: string[]\n  cursor?: string\n  /** If specified, subjects belonging to the given collections will be returned. When subjectType is set to 'account', this will be ignored. */\n  collections?: string[]\n  /** If specified, subjects of the given type (account or record) will be returned. When this is set to 'account' the 'collections' parameter will be ignored. When includeAllUserRecords or subject is set, this will be ignored. */\n  subjectType?: 'account' | 'record' | (string & {})\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  subjectStatuses: ToolsOzoneModerationDefs.SubjectStatusView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAqFA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 20258, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20263, "column": 0}, "map": {"version":3,"file":"searchRepos.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/tools/ozone/moderation/searchRepos.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ToolsOzoneModerationDefs from './defs'\n\nexport interface QueryParams {\n  /** DEPRECATED: use 'q' instead */\n  term?: string\n  q?: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  repos: ToolsOzoneModerationDefs.RepoView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAqCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 20271, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20276, "column": 0}, "map": {"version":3,"file":"getConfig.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/tools/ozone/server/getConfig.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  appview?: ServiceConfig\n  pds?: ServiceConfig\n  blobDivert?: ServiceConfig\n  chat?: ServiceConfig\n  viewer?: ViewerConfig\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n\nexport interface ServiceConfig {\n  url?: string\n  [k: string]: unknown\n}\n\nexport function isServiceConfig(v: unknown): v is ServiceConfig {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.server.getConfig#serviceConfig'\n  )\n}\n\nexport function validateServiceConfig(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.server.getConfig#serviceConfig', v)\n}\n\nexport interface ViewerConfig {\n  role?:\n    | 'tools.ozone.team.defs#roleAdmin'\n    | 'tools.ozone.team.defs#roleModerator'\n    | 'tools.ozone.team.defs#roleTriage'\n    | (string & {})\n  [k: string]: unknown\n}\n\nexport function isViewerConfig(v: unknown): v is ViewerConfig {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.server.getConfig#viewerConfig'\n  )\n}\n\nexport function validateViewerConfig(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.server.getConfig#viewerConfig', v)\n}\n"],"names":[],"mappings":";;;;AAiCA,QAAA,UAAA,GAAA,WAEC;AAOD,QAAA,eAAA,GAAA,gBAMC;AAED,QAAA,qBAAA,GAAA,sBAEC;AAWD,QAAA,cAAA,GAAA,eAMC;AAED,QAAA,oBAAA,GAAA,qBAEC;AApED,MAAA,qCAAiD;AACjD,MAAA,6CAA+C;AA2B/C,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC;AAOD,SAAgB,eAAe,CAAC,CAAU;IACxC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,4CAA4C,CACzD,CAAA;AACH,CAAC;AAED,SAAgB,qBAAqB,CAAC,CAAU;IAC9C,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,4CAA4C,EAAE,CAAC,CAAC,CAAA;AAC3E,CAAC;AAWD,SAAgB,cAAc,CAAC,CAAU;IACvC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,2CAA2C,CACxD,CAAA;AACH,CAAC;AAED,SAAgB,oBAAoB,CAAC,CAAU;IAC7C,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,2CAA2C,EAAE,CAAC,CAAC,CAAA;AAC1E,CAAC","ignoreList":[0]}},
    {"offset": {"line": 20302, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20307, "column": 0}, "map": {"version":3,"file":"addValues.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/tools/ozone/set/addValues.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** Name of the set to add values to */\n  name: string\n  /** Array of string values to add to the set */\n  values: string[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AA+BA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 20315, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20320, "column": 0}, "map": {"version":3,"file":"defs.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/tools/ozone/set/defs.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface Set {\n  name: string\n  description?: string\n  [k: string]: unknown\n}\n\nexport function isSet(v: unknown): v is Set {\n  return (\n    isObj(v) && hasProp(v, '$type') && v.$type === 'tools.ozone.set.defs#set'\n  )\n}\n\nexport function validateSet(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.set.defs#set', v)\n}\n\nexport interface SetView {\n  name: string\n  description?: string\n  setSize: number\n  createdAt: string\n  updatedAt: string\n  [k: string]: unknown\n}\n\nexport function isSetView(v: unknown): v is SetView {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.set.defs#setView'\n  )\n}\n\nexport function validateSetView(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.set.defs#setView', v)\n}\n"],"names":[],"mappings":";;;;AAcA,QAAA,KAAA,GAAA,MAIC;AAED,QAAA,WAAA,GAAA,YAEC;AAWD,QAAA,SAAA,GAAA,UAMC;AAED,QAAA,eAAA,GAAA,gBAEC;AAvCD,MAAA,qCAAiD;AACjD,MAAA,6CAA+C;AAS/C,SAAgB,KAAK,CAAC,CAAU;IAC9B,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IAAI,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,KAAK,KAAK,0BAA0B,CAC1E,CAAA;AACH,CAAC;AAED,SAAgB,WAAW,CAAC,CAAU;IACpC,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,0BAA0B,EAAE,CAAC,CAAC,CAAA;AACzD,CAAC;AAWD,SAAgB,SAAS,CAAC,CAAU;IAClC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,8BAA8B,CAC3C,CAAA;AACH,CAAC;AAED,SAAgB,eAAe,CAAC,CAAU;IACxC,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,8BAA8B,EAAE,CAAC,CAAC,CAAA;AAC7D,CAAC","ignoreList":[0]}},
    {"offset": {"line": 20342, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20347, "column": 0}, "map": {"version":3,"file":"querySets.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/tools/ozone/set/querySets.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ToolsOzoneSetDefs from './defs'\n\nexport interface QueryParams {\n  limit?: number\n  cursor?: string\n  namePrefix?: string\n  sortBy?: 'name' | 'createdAt' | 'updatedAt'\n  /** Defaults to ascending order of name field. */\n  sortDirection?: 'asc' | 'desc'\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  sets: ToolsOzoneSetDefs.SetView[]\n  cursor?: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAsCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 20355, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20360, "column": 0}, "map": {"version":3,"file":"upsertSet.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/tools/ozone/set/upsertSet.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ToolsOzoneSetDefs from './defs'\n\nexport interface QueryParams {}\n\nexport type InputSchema = ToolsOzoneSetDefs.Set\nexport type OutputSchema = ToolsOzoneSetDefs.SetView\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AA4BA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 20368, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20373, "column": 0}, "map": {"version":3,"file":"defs.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/tools/ozone/setting/defs.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface Option {\n  key: string\n  did: string\n  value: {}\n  description?: string\n  createdAt?: string\n  updatedAt?: string\n  managerRole?:\n    | 'tools.ozone.team.defs#roleModerator'\n    | 'tools.ozone.team.defs#roleTriage'\n    | 'tools.ozone.team.defs#roleAdmin'\n    | (string & {})\n  scope: 'instance' | 'personal' | (string & {})\n  createdBy: string\n  lastUpdatedBy: string\n  [k: string]: unknown\n}\n\nexport function isOption(v: unknown): v is Option {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.setting.defs#option'\n  )\n}\n\nexport function validateOption(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.setting.defs#option', v)\n}\n"],"names":[],"mappings":";;;;AA0BA,QAAA,QAAA,GAAA,SAMC;AAED,QAAA,cAAA,GAAA,eAEC;AAhCD,MAAA,qCAAiD;AACjD,MAAA,6CAA+C;AAqB/C,SAAgB,QAAQ,CAAC,CAAU;IACjC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,iCAAiC,CAC9C,CAAA;AACH,CAAC;AAED,SAAgB,cAAc,CAAC,CAAU;IACvC,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,iCAAiC,EAAE,CAAC,CAAC,CAAA;AAChE,CAAC","ignoreList":[0]}},
    {"offset": {"line": 20387, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20392, "column": 0}, "map": {"version":3,"file":"listOptions.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/tools/ozone/setting/listOptions.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ToolsOzoneSettingDefs from './defs'\n\nexport interface QueryParams {\n  limit?: number\n  cursor?: string\n  scope?: 'instance' | 'personal' | (string & {})\n  /** Filter keys by prefix */\n  prefix?: string\n  /** Filter for only the specified keys. Ignored if prefix is provided */\n  keys?: string[]\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  options: ToolsOzoneSettingDefs.Option[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAuCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 20400, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20405, "column": 0}, "map": {"version":3,"file":"removeOptions.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/tools/ozone/setting/removeOptions.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  keys: string[]\n  scope: 'instance' | 'personal' | (string & {})\n  [k: string]: unknown\n}\n\nexport interface OutputSchema {\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAkCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 20413, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20418, "column": 0}, "map": {"version":3,"file":"upsertOption.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/tools/ozone/setting/upsertOption.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ToolsOzoneSettingDefs from './defs'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  key: string\n  scope: 'instance' | 'personal' | (string & {})\n  value: {}\n  description?: string\n  managerRole?:\n    | 'tools.ozone.team.defs#roleModerator'\n    | 'tools.ozone.team.defs#roleTriage'\n    | 'tools.ozone.team.defs#roleAdmin'\n    | (string & {})\n  [k: string]: unknown\n}\n\nexport interface OutputSchema {\n  option: ToolsOzoneSettingDefs.Option\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n  qp?: QueryParams\n  encoding?: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AA2CA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 20426, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20431, "column": 0}, "map": {"version":3,"file":"defs.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/tools/ozone/signature/defs.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface SigDetail {\n  property: string\n  value: string\n  [k: string]: unknown\n}\n\nexport function isSigDetail(v: unknown): v is SigDetail {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.signature.defs#sigDetail'\n  )\n}\n\nexport function validateSigDetail(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.signature.defs#sigDetail', v)\n}\n"],"names":[],"mappings":";;;;AAcA,QAAA,WAAA,GAAA,YAMC;AAED,QAAA,iBAAA,GAAA,kBAEC;AApBD,MAAA,qCAAiD;AACjD,MAAA,6CAA+C;AAS/C,SAAgB,WAAW,CAAC,CAAU;IACpC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,sCAAsC,CACnD,CAAA;AACH,CAAC;AAED,SAAgB,iBAAiB,CAAC,CAAU;IAC1C,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,sCAAsC,EAAE,CAAC,CAAC,CAAA;AACrE,CAAC","ignoreList":[0]}},
    {"offset": {"line": 20445, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20450, "column": 0}, "map": {"version":3,"file":"findCorrelation.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/tools/ozone/signature/findCorrelation.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ToolsOzoneSignatureDefs from './defs'\n\nexport interface QueryParams {\n  dids: string[]\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  details: ToolsOzoneSignatureDefs.SigDetail[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAgCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 20458, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20463, "column": 0}, "map": {"version":3,"file":"findRelatedAccounts.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/tools/ozone/signature/findRelatedAccounts.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoAdminDefs from '../../../com/atproto/admin/defs'\nimport * as ToolsOzoneSignatureDefs from './defs'\n\nexport interface QueryParams {\n  did: string\n  cursor?: string\n  limit?: number\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  accounts: RelatedAccount[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n\nexport interface RelatedAccount {\n  account: ComAtprotoAdminDefs.AccountView\n  similarities?: ToolsOzoneSignatureDefs.SigDetail[]\n  [k: string]: unknown\n}\n\nexport function isRelatedAccount(v: unknown): v is RelatedAccount {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.signature.findRelatedAccounts#relatedAccount'\n  )\n}\n\nexport function validateRelatedAccount(v: unknown): ValidationResult {\n  return lexicons.validate(\n    'tools.ozone.signature.findRelatedAccounts#relatedAccount',\n    v,\n  )\n}\n"],"names":[],"mappings":";;;;AAoCA,QAAA,UAAA,GAAA,WAEC;AAQD,QAAA,gBAAA,GAAA,iBAMC;AAED,QAAA,sBAAA,GAAA,uBAKC;AAtDD,MAAA,qCAAiD;AACjD,MAAA,6CAA+C;AA8B/C,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC;AAQD,SAAgB,gBAAgB,CAAC,CAAU;IACzC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,0DAA0D,CACvE,CAAA;AACH,CAAC;AAED,SAAgB,sBAAsB,CAAC,CAAU;IAC/C,OAAO,WAAA,QAAQ,CAAC,QAAQ,CACtB,0DAA0D,EAC1D,CAAC,CACF,CAAA;AACH,CAAC","ignoreList":[0]}},
    {"offset": {"line": 20481, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20486, "column": 0}, "map": {"version":3,"file":"searchAccounts.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/tools/ozone/signature/searchAccounts.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoAdminDefs from '../../../com/atproto/admin/defs'\n\nexport interface QueryParams {\n  values: string[]\n  cursor?: string\n  limit?: number\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  accounts: ComAtprotoAdminDefs.AccountView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAmCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 20494, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20499, "column": 0}, "map": {"version":3,"file":"defs.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/tools/ozone/team/defs.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from '../../../app/bsky/actor/defs'\n\nexport interface Member {\n  did: string\n  disabled?: boolean\n  profile?: AppBskyActorDefs.ProfileViewDetailed\n  createdAt?: string\n  updatedAt?: string\n  lastUpdatedBy?: string\n  role:\n    | 'lex:tools.ozone.team.defs#roleAdmin'\n    | 'lex:tools.ozone.team.defs#roleModerator'\n    | 'lex:tools.ozone.team.defs#roleTriage'\n    | (string & {})\n  [k: string]: unknown\n}\n\nexport function isMember(v: unknown): v is Member {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.team.defs#member'\n  )\n}\n\nexport function validateMember(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.team.defs#member', v)\n}\n\n/** Admin role. Highest level of access, can perform all actions. */\nexport const ROLEADMIN = 'tools.ozone.team.defs#roleAdmin'\n/** Moderator role. Can perform most actions. */\nexport const ROLEMODERATOR = 'tools.ozone.team.defs#roleModerator'\n/** Triage role. Mostly intended for monitoring and escalating issues. */\nexport const ROLETRIAGE = 'tools.ozone.team.defs#roleTriage'\n"],"names":[],"mappings":";;;;;AAwBA,QAAA,QAAA,GAAA,SAMC;AAED,QAAA,cAAA,GAAA,eAEC;AA9BD,MAAA,qCAAiD;AACjD,MAAA,6CAA+C;AAmB/C,SAAgB,QAAQ,CAAC,CAAU;IACjC,OAAO,AACL,CAAA,GAAA,OAAA,KAAK,EAAC,CAAC,CAAC,IACR,CAAA,GAAA,OAAA,OAAO,EAAC,CAAC,EAAE,OAAO,CAAC,IACnB,CAAC,CAAC,KAAK,KAAK,8BAA8B,CAC3C,CAAA;AACH,CAAC;AAED,SAAgB,cAAc,CAAC,CAAU;IACvC,OAAO,WAAA,QAAQ,CAAC,QAAQ,CAAC,8BAA8B,EAAE,CAAC,CAAC,CAAA;AAC7D,CAAC;AAED,kEAAA,EAAoE,CACvD,QAAA,SAAS,GAAG,iCAAiC,CAAA;AAC1D,8CAAA,EAAgD,CACnC,QAAA,aAAa,GAAG,qCAAqC,CAAA;AAClE,uEAAA,EAAyE,CAC5D,QAAA,UAAU,GAAG,kCAAkC,CAAA","ignoreList":[0]}},
    {"offset": {"line": 20517, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20522, "column": 0}, "map": {"version":3,"file":"listMembers.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/types/tools/ozone/team/listMembers.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { HeadersMap, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ToolsOzoneTeamDefs from './defs'\n\nexport interface QueryParams {\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  members: ToolsOzoneTeamDefs.Member[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  signal?: AbortSignal\n  headers?: HeadersMap\n}\n\nexport interface Response {\n  success: boolean\n  headers: HeadersMap\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  return e\n}\n"],"names":[],"mappings":";;;;AAkCA,QAAA,UAAA,GAAA,WAEC;AAFD,SAAgB,UAAU,CAAC,CAAM;IAC/B,OAAO,CAAC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 20530, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20535, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/client/index.ts"],"sourcesContent":["/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { XrpcClient, FetchHandler, FetchHandlerOptions } from '@atproto/xrpc'\nimport { schemas } from './lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoAdminDefs from './types/com/atproto/admin/defs'\nimport * as ComAtprotoAdminDeleteAccount from './types/com/atproto/admin/deleteAccount'\nimport * as ComAtprotoAdminDisableAccountInvites from './types/com/atproto/admin/disableAccountInvites'\nimport * as ComAtprotoAdminDisableInviteCodes from './types/com/atproto/admin/disableInviteCodes'\nimport * as ComAtprotoAdminEnableAccountInvites from './types/com/atproto/admin/enableAccountInvites'\nimport * as ComAtprotoAdminGetAccountInfo from './types/com/atproto/admin/getAccountInfo'\nimport * as ComAtprotoAdminGetAccountInfos from './types/com/atproto/admin/getAccountInfos'\nimport * as ComAtprotoAdminGetInviteCodes from './types/com/atproto/admin/getInviteCodes'\nimport * as ComAtprotoAdminGetSubjectStatus from './types/com/atproto/admin/getSubjectStatus'\nimport * as ComAtprotoAdminSearchAccounts from './types/com/atproto/admin/searchAccounts'\nimport * as ComAtprotoAdminSendEmail from './types/com/atproto/admin/sendEmail'\nimport * as ComAtprotoAdminUpdateAccountEmail from './types/com/atproto/admin/updateAccountEmail'\nimport * as ComAtprotoAdminUpdateAccountHandle from './types/com/atproto/admin/updateAccountHandle'\nimport * as ComAtprotoAdminUpdateAccountPassword from './types/com/atproto/admin/updateAccountPassword'\nimport * as ComAtprotoAdminUpdateSubjectStatus from './types/com/atproto/admin/updateSubjectStatus'\nimport * as ComAtprotoIdentityGetRecommendedDidCredentials from './types/com/atproto/identity/getRecommendedDidCredentials'\nimport * as ComAtprotoIdentityRequestPlcOperationSignature from './types/com/atproto/identity/requestPlcOperationSignature'\nimport * as ComAtprotoIdentityResolveHandle from './types/com/atproto/identity/resolveHandle'\nimport * as ComAtprotoIdentitySignPlcOperation from './types/com/atproto/identity/signPlcOperation'\nimport * as ComAtprotoIdentitySubmitPlcOperation from './types/com/atproto/identity/submitPlcOperation'\nimport * as ComAtprotoIdentityUpdateHandle from './types/com/atproto/identity/updateHandle'\nimport * as ComAtprotoLabelDefs from './types/com/atproto/label/defs'\nimport * as ComAtprotoLabelQueryLabels from './types/com/atproto/label/queryLabels'\nimport * as ComAtprotoLabelSubscribeLabels from './types/com/atproto/label/subscribeLabels'\nimport * as ComAtprotoLexiconSchema from './types/com/atproto/lexicon/schema'\nimport * as ComAtprotoModerationCreateReport from './types/com/atproto/moderation/createReport'\nimport * as ComAtprotoModerationDefs from './types/com/atproto/moderation/defs'\nimport * as ComAtprotoRepoApplyWrites from './types/com/atproto/repo/applyWrites'\nimport * as ComAtprotoRepoCreateRecord from './types/com/atproto/repo/createRecord'\nimport * as ComAtprotoRepoDefs from './types/com/atproto/repo/defs'\nimport * as ComAtprotoRepoDeleteRecord from './types/com/atproto/repo/deleteRecord'\nimport * as ComAtprotoRepoDescribeRepo from './types/com/atproto/repo/describeRepo'\nimport * as ComAtprotoRepoGetRecord from './types/com/atproto/repo/getRecord'\nimport * as ComAtprotoRepoImportRepo from './types/com/atproto/repo/importRepo'\nimport * as ComAtprotoRepoListMissingBlobs from './types/com/atproto/repo/listMissingBlobs'\nimport * as ComAtprotoRepoListRecords from './types/com/atproto/repo/listRecords'\nimport * as ComAtprotoRepoPutRecord from './types/com/atproto/repo/putRecord'\nimport * as ComAtprotoRepoStrongRef from './types/com/atproto/repo/strongRef'\nimport * as ComAtprotoRepoUploadBlob from './types/com/atproto/repo/uploadBlob'\nimport * as ComAtprotoServerActivateAccount from './types/com/atproto/server/activateAccount'\nimport * as ComAtprotoServerCheckAccountStatus from './types/com/atproto/server/checkAccountStatus'\nimport * as ComAtprotoServerConfirmEmail from './types/com/atproto/server/confirmEmail'\nimport * as ComAtprotoServerCreateAccount from './types/com/atproto/server/createAccount'\nimport * as ComAtprotoServerCreateAppPassword from './types/com/atproto/server/createAppPassword'\nimport * as ComAtprotoServerCreateInviteCode from './types/com/atproto/server/createInviteCode'\nimport * as ComAtprotoServerCreateInviteCodes from './types/com/atproto/server/createInviteCodes'\nimport * as ComAtprotoServerCreateSession from './types/com/atproto/server/createSession'\nimport * as ComAtprotoServerDeactivateAccount from './types/com/atproto/server/deactivateAccount'\nimport * as ComAtprotoServerDefs from './types/com/atproto/server/defs'\nimport * as ComAtprotoServerDeleteAccount from './types/com/atproto/server/deleteAccount'\nimport * as ComAtprotoServerDeleteSession from './types/com/atproto/server/deleteSession'\nimport * as ComAtprotoServerDescribeServer from './types/com/atproto/server/describeServer'\nimport * as ComAtprotoServerGetAccountInviteCodes from './types/com/atproto/server/getAccountInviteCodes'\nimport * as ComAtprotoServerGetServiceAuth from './types/com/atproto/server/getServiceAuth'\nimport * as ComAtprotoServerGetSession from './types/com/atproto/server/getSession'\nimport * as ComAtprotoServerListAppPasswords from './types/com/atproto/server/listAppPasswords'\nimport * as ComAtprotoServerRefreshSession from './types/com/atproto/server/refreshSession'\nimport * as ComAtprotoServerRequestAccountDelete from './types/com/atproto/server/requestAccountDelete'\nimport * as ComAtprotoServerRequestEmailConfirmation from './types/com/atproto/server/requestEmailConfirmation'\nimport * as ComAtprotoServerRequestEmailUpdate from './types/com/atproto/server/requestEmailUpdate'\nimport * as ComAtprotoServerRequestPasswordReset from './types/com/atproto/server/requestPasswordReset'\nimport * as ComAtprotoServerReserveSigningKey from './types/com/atproto/server/reserveSigningKey'\nimport * as ComAtprotoServerResetPassword from './types/com/atproto/server/resetPassword'\nimport * as ComAtprotoServerRevokeAppPassword from './types/com/atproto/server/revokeAppPassword'\nimport * as ComAtprotoServerUpdateEmail from './types/com/atproto/server/updateEmail'\nimport * as ComAtprotoSyncGetBlob from './types/com/atproto/sync/getBlob'\nimport * as ComAtprotoSyncGetBlocks from './types/com/atproto/sync/getBlocks'\nimport * as ComAtprotoSyncGetCheckout from './types/com/atproto/sync/getCheckout'\nimport * as ComAtprotoSyncGetHead from './types/com/atproto/sync/getHead'\nimport * as ComAtprotoSyncGetLatestCommit from './types/com/atproto/sync/getLatestCommit'\nimport * as ComAtprotoSyncGetRecord from './types/com/atproto/sync/getRecord'\nimport * as ComAtprotoSyncGetRepo from './types/com/atproto/sync/getRepo'\nimport * as ComAtprotoSyncGetRepoStatus from './types/com/atproto/sync/getRepoStatus'\nimport * as ComAtprotoSyncListBlobs from './types/com/atproto/sync/listBlobs'\nimport * as ComAtprotoSyncListRepos from './types/com/atproto/sync/listRepos'\nimport * as ComAtprotoSyncNotifyOfUpdate from './types/com/atproto/sync/notifyOfUpdate'\nimport * as ComAtprotoSyncRequestCrawl from './types/com/atproto/sync/requestCrawl'\nimport * as ComAtprotoSyncSubscribeRepos from './types/com/atproto/sync/subscribeRepos'\nimport * as ComAtprotoTempAddReservedHandle from './types/com/atproto/temp/addReservedHandle'\nimport * as ComAtprotoTempCheckSignupQueue from './types/com/atproto/temp/checkSignupQueue'\nimport * as ComAtprotoTempFetchLabels from './types/com/atproto/temp/fetchLabels'\nimport * as ComAtprotoTempRequestPhoneVerification from './types/com/atproto/temp/requestPhoneVerification'\nimport * as AppBskyActorDefs from './types/app/bsky/actor/defs'\nimport * as AppBskyActorGetPreferences from './types/app/bsky/actor/getPreferences'\nimport * as AppBskyActorGetProfile from './types/app/bsky/actor/getProfile'\nimport * as AppBskyActorGetProfiles from './types/app/bsky/actor/getProfiles'\nimport * as AppBskyActorGetSuggestions from './types/app/bsky/actor/getSuggestions'\nimport * as AppBskyActorProfile from './types/app/bsky/actor/profile'\nimport * as AppBskyActorPutPreferences from './types/app/bsky/actor/putPreferences'\nimport * as AppBskyActorSearchActors from './types/app/bsky/actor/searchActors'\nimport * as AppBskyActorSearchActorsTypeahead from './types/app/bsky/actor/searchActorsTypeahead'\nimport * as AppBskyEmbedDefs from './types/app/bsky/embed/defs'\nimport * as AppBskyEmbedExternal from './types/app/bsky/embed/external'\nimport * as AppBskyEmbedImages from './types/app/bsky/embed/images'\nimport * as AppBskyEmbedRecord from './types/app/bsky/embed/record'\nimport * as AppBskyEmbedRecordWithMedia from './types/app/bsky/embed/recordWithMedia'\nimport * as AppBskyEmbedVideo from './types/app/bsky/embed/video'\nimport * as AppBskyFeedDefs from './types/app/bsky/feed/defs'\nimport * as AppBskyFeedDescribeFeedGenerator from './types/app/bsky/feed/describeFeedGenerator'\nimport * as AppBskyFeedGenerator from './types/app/bsky/feed/generator'\nimport * as AppBskyFeedGetActorFeeds from './types/app/bsky/feed/getActorFeeds'\nimport * as AppBskyFeedGetActorLikes from './types/app/bsky/feed/getActorLikes'\nimport * as AppBskyFeedGetAuthorFeed from './types/app/bsky/feed/getAuthorFeed'\nimport * as AppBskyFeedGetFeed from './types/app/bsky/feed/getFeed'\nimport * as AppBskyFeedGetFeedGenerator from './types/app/bsky/feed/getFeedGenerator'\nimport * as AppBskyFeedGetFeedGenerators from './types/app/bsky/feed/getFeedGenerators'\nimport * as AppBskyFeedGetFeedSkeleton from './types/app/bsky/feed/getFeedSkeleton'\nimport * as AppBskyFeedGetLikes from './types/app/bsky/feed/getLikes'\nimport * as AppBskyFeedGetListFeed from './types/app/bsky/feed/getListFeed'\nimport * as AppBskyFeedGetPostThread from './types/app/bsky/feed/getPostThread'\nimport * as AppBskyFeedGetPosts from './types/app/bsky/feed/getPosts'\nimport * as AppBskyFeedGetQuotes from './types/app/bsky/feed/getQuotes'\nimport * as AppBskyFeedGetRepostedBy from './types/app/bsky/feed/getRepostedBy'\nimport * as AppBskyFeedGetSuggestedFeeds from './types/app/bsky/feed/getSuggestedFeeds'\nimport * as AppBskyFeedGetTimeline from './types/app/bsky/feed/getTimeline'\nimport * as AppBskyFeedLike from './types/app/bsky/feed/like'\nimport * as AppBskyFeedPost from './types/app/bsky/feed/post'\nimport * as AppBskyFeedPostgate from './types/app/bsky/feed/postgate'\nimport * as AppBskyFeedRepost from './types/app/bsky/feed/repost'\nimport * as AppBskyFeedSearchPosts from './types/app/bsky/feed/searchPosts'\nimport * as AppBskyFeedSendInteractions from './types/app/bsky/feed/sendInteractions'\nimport * as AppBskyFeedThreadgate from './types/app/bsky/feed/threadgate'\nimport * as AppBskyGraphBlock from './types/app/bsky/graph/block'\nimport * as AppBskyGraphDefs from './types/app/bsky/graph/defs'\nimport * as AppBskyGraphFollow from './types/app/bsky/graph/follow'\nimport * as AppBskyGraphGetActorStarterPacks from './types/app/bsky/graph/getActorStarterPacks'\nimport * as AppBskyGraphGetBlocks from './types/app/bsky/graph/getBlocks'\nimport * as AppBskyGraphGetFollowers from './types/app/bsky/graph/getFollowers'\nimport * as AppBskyGraphGetFollows from './types/app/bsky/graph/getFollows'\nimport * as AppBskyGraphGetKnownFollowers from './types/app/bsky/graph/getKnownFollowers'\nimport * as AppBskyGraphGetList from './types/app/bsky/graph/getList'\nimport * as AppBskyGraphGetListBlocks from './types/app/bsky/graph/getListBlocks'\nimport * as AppBskyGraphGetListMutes from './types/app/bsky/graph/getListMutes'\nimport * as AppBskyGraphGetLists from './types/app/bsky/graph/getLists'\nimport * as AppBskyGraphGetMutes from './types/app/bsky/graph/getMutes'\nimport * as AppBskyGraphGetRelationships from './types/app/bsky/graph/getRelationships'\nimport * as AppBskyGraphGetStarterPack from './types/app/bsky/graph/getStarterPack'\nimport * as AppBskyGraphGetStarterPacks from './types/app/bsky/graph/getStarterPacks'\nimport * as AppBskyGraphGetSuggestedFollowsByActor from './types/app/bsky/graph/getSuggestedFollowsByActor'\nimport * as AppBskyGraphList from './types/app/bsky/graph/list'\nimport * as AppBskyGraphListblock from './types/app/bsky/graph/listblock'\nimport * as AppBskyGraphListitem from './types/app/bsky/graph/listitem'\nimport * as AppBskyGraphMuteActor from './types/app/bsky/graph/muteActor'\nimport * as AppBskyGraphMuteActorList from './types/app/bsky/graph/muteActorList'\nimport * as AppBskyGraphMuteThread from './types/app/bsky/graph/muteThread'\nimport * as AppBskyGraphSearchStarterPacks from './types/app/bsky/graph/searchStarterPacks'\nimport * as AppBskyGraphStarterpack from './types/app/bsky/graph/starterpack'\nimport * as AppBskyGraphUnmuteActor from './types/app/bsky/graph/unmuteActor'\nimport * as AppBskyGraphUnmuteActorList from './types/app/bsky/graph/unmuteActorList'\nimport * as AppBskyGraphUnmuteThread from './types/app/bsky/graph/unmuteThread'\nimport * as AppBskyLabelerDefs from './types/app/bsky/labeler/defs'\nimport * as AppBskyLabelerGetServices from './types/app/bsky/labeler/getServices'\nimport * as AppBskyLabelerService from './types/app/bsky/labeler/service'\nimport * as AppBskyNotificationGetUnreadCount from './types/app/bsky/notification/getUnreadCount'\nimport * as AppBskyNotificationListNotifications from './types/app/bsky/notification/listNotifications'\nimport * as AppBskyNotificationPutPreferences from './types/app/bsky/notification/putPreferences'\nimport * as AppBskyNotificationRegisterPush from './types/app/bsky/notification/registerPush'\nimport * as AppBskyNotificationUpdateSeen from './types/app/bsky/notification/updateSeen'\nimport * as AppBskyRichtextFacet from './types/app/bsky/richtext/facet'\nimport * as AppBskyUnspeccedDefs from './types/app/bsky/unspecced/defs'\nimport * as AppBskyUnspeccedGetConfig from './types/app/bsky/unspecced/getConfig'\nimport * as AppBskyUnspeccedGetPopularFeedGenerators from './types/app/bsky/unspecced/getPopularFeedGenerators'\nimport * as AppBskyUnspeccedGetSuggestionsSkeleton from './types/app/bsky/unspecced/getSuggestionsSkeleton'\nimport * as AppBskyUnspeccedGetTaggedSuggestions from './types/app/bsky/unspecced/getTaggedSuggestions'\nimport * as AppBskyUnspeccedGetTrendingTopics from './types/app/bsky/unspecced/getTrendingTopics'\nimport * as AppBskyUnspeccedSearchActorsSkeleton from './types/app/bsky/unspecced/searchActorsSkeleton'\nimport * as AppBskyUnspeccedSearchPostsSkeleton from './types/app/bsky/unspecced/searchPostsSkeleton'\nimport * as AppBskyUnspeccedSearchStarterPacksSkeleton from './types/app/bsky/unspecced/searchStarterPacksSkeleton'\nimport * as AppBskyVideoDefs from './types/app/bsky/video/defs'\nimport * as AppBskyVideoGetJobStatus from './types/app/bsky/video/getJobStatus'\nimport * as AppBskyVideoGetUploadLimits from './types/app/bsky/video/getUploadLimits'\nimport * as AppBskyVideoUploadVideo from './types/app/bsky/video/uploadVideo'\nimport * as ChatBskyActorDeclaration from './types/chat/bsky/actor/declaration'\nimport * as ChatBskyActorDefs from './types/chat/bsky/actor/defs'\nimport * as ChatBskyActorDeleteAccount from './types/chat/bsky/actor/deleteAccount'\nimport * as ChatBskyActorExportAccountData from './types/chat/bsky/actor/exportAccountData'\nimport * as ChatBskyConvoDefs from './types/chat/bsky/convo/defs'\nimport * as ChatBskyConvoDeleteMessageForSelf from './types/chat/bsky/convo/deleteMessageForSelf'\nimport * as ChatBskyConvoGetConvo from './types/chat/bsky/convo/getConvo'\nimport * as ChatBskyConvoGetConvoForMembers from './types/chat/bsky/convo/getConvoForMembers'\nimport * as ChatBskyConvoGetLog from './types/chat/bsky/convo/getLog'\nimport * as ChatBskyConvoGetMessages from './types/chat/bsky/convo/getMessages'\nimport * as ChatBskyConvoLeaveConvo from './types/chat/bsky/convo/leaveConvo'\nimport * as ChatBskyConvoListConvos from './types/chat/bsky/convo/listConvos'\nimport * as ChatBskyConvoMuteConvo from './types/chat/bsky/convo/muteConvo'\nimport * as ChatBskyConvoSendMessage from './types/chat/bsky/convo/sendMessage'\nimport * as ChatBskyConvoSendMessageBatch from './types/chat/bsky/convo/sendMessageBatch'\nimport * as ChatBskyConvoUnmuteConvo from './types/chat/bsky/convo/unmuteConvo'\nimport * as ChatBskyConvoUpdateRead from './types/chat/bsky/convo/updateRead'\nimport * as ChatBskyModerationGetActorMetadata from './types/chat/bsky/moderation/getActorMetadata'\nimport * as ChatBskyModerationGetMessageContext from './types/chat/bsky/moderation/getMessageContext'\nimport * as ChatBskyModerationUpdateActorAccess from './types/chat/bsky/moderation/updateActorAccess'\nimport * as ToolsOzoneCommunicationCreateTemplate from './types/tools/ozone/communication/createTemplate'\nimport * as ToolsOzoneCommunicationDefs from './types/tools/ozone/communication/defs'\nimport * as ToolsOzoneCommunicationDeleteTemplate from './types/tools/ozone/communication/deleteTemplate'\nimport * as ToolsOzoneCommunicationListTemplates from './types/tools/ozone/communication/listTemplates'\nimport * as ToolsOzoneCommunicationUpdateTemplate from './types/tools/ozone/communication/updateTemplate'\nimport * as ToolsOzoneModerationDefs from './types/tools/ozone/moderation/defs'\nimport * as ToolsOzoneModerationEmitEvent from './types/tools/ozone/moderation/emitEvent'\nimport * as ToolsOzoneModerationGetEvent from './types/tools/ozone/moderation/getEvent'\nimport * as ToolsOzoneModerationGetRecord from './types/tools/ozone/moderation/getRecord'\nimport * as ToolsOzoneModerationGetRecords from './types/tools/ozone/moderation/getRecords'\nimport * as ToolsOzoneModerationGetRepo from './types/tools/ozone/moderation/getRepo'\nimport * as ToolsOzoneModerationGetRepos from './types/tools/ozone/moderation/getRepos'\nimport * as ToolsOzoneModerationQueryEvents from './types/tools/ozone/moderation/queryEvents'\nimport * as ToolsOzoneModerationQueryStatuses from './types/tools/ozone/moderation/queryStatuses'\nimport * as ToolsOzoneModerationSearchRepos from './types/tools/ozone/moderation/searchRepos'\nimport * as ToolsOzoneServerGetConfig from './types/tools/ozone/server/getConfig'\nimport * as ToolsOzoneSetAddValues from './types/tools/ozone/set/addValues'\nimport * as ToolsOzoneSetDefs from './types/tools/ozone/set/defs'\nimport * as ToolsOzoneSetDeleteSet from './types/tools/ozone/set/deleteSet'\nimport * as ToolsOzoneSetDeleteValues from './types/tools/ozone/set/deleteValues'\nimport * as ToolsOzoneSetGetValues from './types/tools/ozone/set/getValues'\nimport * as ToolsOzoneSetQuerySets from './types/tools/ozone/set/querySets'\nimport * as ToolsOzoneSetUpsertSet from './types/tools/ozone/set/upsertSet'\nimport * as ToolsOzoneSettingDefs from './types/tools/ozone/setting/defs'\nimport * as ToolsOzoneSettingListOptions from './types/tools/ozone/setting/listOptions'\nimport * as ToolsOzoneSettingRemoveOptions from './types/tools/ozone/setting/removeOptions'\nimport * as ToolsOzoneSettingUpsertOption from './types/tools/ozone/setting/upsertOption'\nimport * as ToolsOzoneSignatureDefs from './types/tools/ozone/signature/defs'\nimport * as ToolsOzoneSignatureFindCorrelation from './types/tools/ozone/signature/findCorrelation'\nimport * as ToolsOzoneSignatureFindRelatedAccounts from './types/tools/ozone/signature/findRelatedAccounts'\nimport * as ToolsOzoneSignatureSearchAccounts from './types/tools/ozone/signature/searchAccounts'\nimport * as ToolsOzoneTeamAddMember from './types/tools/ozone/team/addMember'\nimport * as ToolsOzoneTeamDefs from './types/tools/ozone/team/defs'\nimport * as ToolsOzoneTeamDeleteMember from './types/tools/ozone/team/deleteMember'\nimport * as ToolsOzoneTeamListMembers from './types/tools/ozone/team/listMembers'\nimport * as ToolsOzoneTeamUpdateMember from './types/tools/ozone/team/updateMember'\n\nexport * as ComAtprotoAdminDefs from './types/com/atproto/admin/defs'\nexport * as ComAtprotoAdminDeleteAccount from './types/com/atproto/admin/deleteAccount'\nexport * as ComAtprotoAdminDisableAccountInvites from './types/com/atproto/admin/disableAccountInvites'\nexport * as ComAtprotoAdminDisableInviteCodes from './types/com/atproto/admin/disableInviteCodes'\nexport * as ComAtprotoAdminEnableAccountInvites from './types/com/atproto/admin/enableAccountInvites'\nexport * as ComAtprotoAdminGetAccountInfo from './types/com/atproto/admin/getAccountInfo'\nexport * as ComAtprotoAdminGetAccountInfos from './types/com/atproto/admin/getAccountInfos'\nexport * as ComAtprotoAdminGetInviteCodes from './types/com/atproto/admin/getInviteCodes'\nexport * as ComAtprotoAdminGetSubjectStatus from './types/com/atproto/admin/getSubjectStatus'\nexport * as ComAtprotoAdminSearchAccounts from './types/com/atproto/admin/searchAccounts'\nexport * as ComAtprotoAdminSendEmail from './types/com/atproto/admin/sendEmail'\nexport * as ComAtprotoAdminUpdateAccountEmail from './types/com/atproto/admin/updateAccountEmail'\nexport * as ComAtprotoAdminUpdateAccountHandle from './types/com/atproto/admin/updateAccountHandle'\nexport * as ComAtprotoAdminUpdateAccountPassword from './types/com/atproto/admin/updateAccountPassword'\nexport * as ComAtprotoAdminUpdateSubjectStatus from './types/com/atproto/admin/updateSubjectStatus'\nexport * as ComAtprotoIdentityGetRecommendedDidCredentials from './types/com/atproto/identity/getRecommendedDidCredentials'\nexport * as ComAtprotoIdentityRequestPlcOperationSignature from './types/com/atproto/identity/requestPlcOperationSignature'\nexport * as ComAtprotoIdentityResolveHandle from './types/com/atproto/identity/resolveHandle'\nexport * as ComAtprotoIdentitySignPlcOperation from './types/com/atproto/identity/signPlcOperation'\nexport * as ComAtprotoIdentitySubmitPlcOperation from './types/com/atproto/identity/submitPlcOperation'\nexport * as ComAtprotoIdentityUpdateHandle from './types/com/atproto/identity/updateHandle'\nexport * as ComAtprotoLabelDefs from './types/com/atproto/label/defs'\nexport * as ComAtprotoLabelQueryLabels from './types/com/atproto/label/queryLabels'\nexport * as ComAtprotoLabelSubscribeLabels from './types/com/atproto/label/subscribeLabels'\nexport * as ComAtprotoLexiconSchema from './types/com/atproto/lexicon/schema'\nexport * as ComAtprotoModerationCreateReport from './types/com/atproto/moderation/createReport'\nexport * as ComAtprotoModerationDefs from './types/com/atproto/moderation/defs'\nexport * as ComAtprotoRepoApplyWrites from './types/com/atproto/repo/applyWrites'\nexport * as ComAtprotoRepoCreateRecord from './types/com/atproto/repo/createRecord'\nexport * as ComAtprotoRepoDefs from './types/com/atproto/repo/defs'\nexport * as ComAtprotoRepoDeleteRecord from './types/com/atproto/repo/deleteRecord'\nexport * as ComAtprotoRepoDescribeRepo from './types/com/atproto/repo/describeRepo'\nexport * as ComAtprotoRepoGetRecord from './types/com/atproto/repo/getRecord'\nexport * as ComAtprotoRepoImportRepo from './types/com/atproto/repo/importRepo'\nexport * as ComAtprotoRepoListMissingBlobs from './types/com/atproto/repo/listMissingBlobs'\nexport * as ComAtprotoRepoListRecords from './types/com/atproto/repo/listRecords'\nexport * as ComAtprotoRepoPutRecord from './types/com/atproto/repo/putRecord'\nexport * as ComAtprotoRepoStrongRef from './types/com/atproto/repo/strongRef'\nexport * as ComAtprotoRepoUploadBlob from './types/com/atproto/repo/uploadBlob'\nexport * as ComAtprotoServerActivateAccount from './types/com/atproto/server/activateAccount'\nexport * as ComAtprotoServerCheckAccountStatus from './types/com/atproto/server/checkAccountStatus'\nexport * as ComAtprotoServerConfirmEmail from './types/com/atproto/server/confirmEmail'\nexport * as ComAtprotoServerCreateAccount from './types/com/atproto/server/createAccount'\nexport * as ComAtprotoServerCreateAppPassword from './types/com/atproto/server/createAppPassword'\nexport * as ComAtprotoServerCreateInviteCode from './types/com/atproto/server/createInviteCode'\nexport * as ComAtprotoServerCreateInviteCodes from './types/com/atproto/server/createInviteCodes'\nexport * as ComAtprotoServerCreateSession from './types/com/atproto/server/createSession'\nexport * as ComAtprotoServerDeactivateAccount from './types/com/atproto/server/deactivateAccount'\nexport * as ComAtprotoServerDefs from './types/com/atproto/server/defs'\nexport * as ComAtprotoServerDeleteAccount from './types/com/atproto/server/deleteAccount'\nexport * as ComAtprotoServerDeleteSession from './types/com/atproto/server/deleteSession'\nexport * as ComAtprotoServerDescribeServer from './types/com/atproto/server/describeServer'\nexport * as ComAtprotoServerGetAccountInviteCodes from './types/com/atproto/server/getAccountInviteCodes'\nexport * as ComAtprotoServerGetServiceAuth from './types/com/atproto/server/getServiceAuth'\nexport * as ComAtprotoServerGetSession from './types/com/atproto/server/getSession'\nexport * as ComAtprotoServerListAppPasswords from './types/com/atproto/server/listAppPasswords'\nexport * as ComAtprotoServerRefreshSession from './types/com/atproto/server/refreshSession'\nexport * as ComAtprotoServerRequestAccountDelete from './types/com/atproto/server/requestAccountDelete'\nexport * as ComAtprotoServerRequestEmailConfirmation from './types/com/atproto/server/requestEmailConfirmation'\nexport * as ComAtprotoServerRequestEmailUpdate from './types/com/atproto/server/requestEmailUpdate'\nexport * as ComAtprotoServerRequestPasswordReset from './types/com/atproto/server/requestPasswordReset'\nexport * as ComAtprotoServerReserveSigningKey from './types/com/atproto/server/reserveSigningKey'\nexport * as ComAtprotoServerResetPassword from './types/com/atproto/server/resetPassword'\nexport * as ComAtprotoServerRevokeAppPassword from './types/com/atproto/server/revokeAppPassword'\nexport * as ComAtprotoServerUpdateEmail from './types/com/atproto/server/updateEmail'\nexport * as ComAtprotoSyncGetBlob from './types/com/atproto/sync/getBlob'\nexport * as ComAtprotoSyncGetBlocks from './types/com/atproto/sync/getBlocks'\nexport * as ComAtprotoSyncGetCheckout from './types/com/atproto/sync/getCheckout'\nexport * as ComAtprotoSyncGetHead from './types/com/atproto/sync/getHead'\nexport * as ComAtprotoSyncGetLatestCommit from './types/com/atproto/sync/getLatestCommit'\nexport * as ComAtprotoSyncGetRecord from './types/com/atproto/sync/getRecord'\nexport * as ComAtprotoSyncGetRepo from './types/com/atproto/sync/getRepo'\nexport * as ComAtprotoSyncGetRepoStatus from './types/com/atproto/sync/getRepoStatus'\nexport * as ComAtprotoSyncListBlobs from './types/com/atproto/sync/listBlobs'\nexport * as ComAtprotoSyncListRepos from './types/com/atproto/sync/listRepos'\nexport * as ComAtprotoSyncNotifyOfUpdate from './types/com/atproto/sync/notifyOfUpdate'\nexport * as ComAtprotoSyncRequestCrawl from './types/com/atproto/sync/requestCrawl'\nexport * as ComAtprotoSyncSubscribeRepos from './types/com/atproto/sync/subscribeRepos'\nexport * as ComAtprotoTempAddReservedHandle from './types/com/atproto/temp/addReservedHandle'\nexport * as ComAtprotoTempCheckSignupQueue from './types/com/atproto/temp/checkSignupQueue'\nexport * as ComAtprotoTempFetchLabels from './types/com/atproto/temp/fetchLabels'\nexport * as ComAtprotoTempRequestPhoneVerification from './types/com/atproto/temp/requestPhoneVerification'\nexport * as AppBskyActorDefs from './types/app/bsky/actor/defs'\nexport * as AppBskyActorGetPreferences from './types/app/bsky/actor/getPreferences'\nexport * as AppBskyActorGetProfile from './types/app/bsky/actor/getProfile'\nexport * as AppBskyActorGetProfiles from './types/app/bsky/actor/getProfiles'\nexport * as AppBskyActorGetSuggestions from './types/app/bsky/actor/getSuggestions'\nexport * as AppBskyActorProfile from './types/app/bsky/actor/profile'\nexport * as AppBskyActorPutPreferences from './types/app/bsky/actor/putPreferences'\nexport * as AppBskyActorSearchActors from './types/app/bsky/actor/searchActors'\nexport * as AppBskyActorSearchActorsTypeahead from './types/app/bsky/actor/searchActorsTypeahead'\nexport * as AppBskyEmbedDefs from './types/app/bsky/embed/defs'\nexport * as AppBskyEmbedExternal from './types/app/bsky/embed/external'\nexport * as AppBskyEmbedImages from './types/app/bsky/embed/images'\nexport * as AppBskyEmbedRecord from './types/app/bsky/embed/record'\nexport * as AppBskyEmbedRecordWithMedia from './types/app/bsky/embed/recordWithMedia'\nexport * as AppBskyEmbedVideo from './types/app/bsky/embed/video'\nexport * as AppBskyFeedDefs from './types/app/bsky/feed/defs'\nexport * as AppBskyFeedDescribeFeedGenerator from './types/app/bsky/feed/describeFeedGenerator'\nexport * as AppBskyFeedGenerator from './types/app/bsky/feed/generator'\nexport * as AppBskyFeedGetActorFeeds from './types/app/bsky/feed/getActorFeeds'\nexport * as AppBskyFeedGetActorLikes from './types/app/bsky/feed/getActorLikes'\nexport * as AppBskyFeedGetAuthorFeed from './types/app/bsky/feed/getAuthorFeed'\nexport * as AppBskyFeedGetFeed from './types/app/bsky/feed/getFeed'\nexport * as AppBskyFeedGetFeedGenerator from './types/app/bsky/feed/getFeedGenerator'\nexport * as AppBskyFeedGetFeedGenerators from './types/app/bsky/feed/getFeedGenerators'\nexport * as AppBskyFeedGetFeedSkeleton from './types/app/bsky/feed/getFeedSkeleton'\nexport * as AppBskyFeedGetLikes from './types/app/bsky/feed/getLikes'\nexport * as AppBskyFeedGetListFeed from './types/app/bsky/feed/getListFeed'\nexport * as AppBskyFeedGetPostThread from './types/app/bsky/feed/getPostThread'\nexport * as AppBskyFeedGetPosts from './types/app/bsky/feed/getPosts'\nexport * as AppBskyFeedGetQuotes from './types/app/bsky/feed/getQuotes'\nexport * as AppBskyFeedGetRepostedBy from './types/app/bsky/feed/getRepostedBy'\nexport * as AppBskyFeedGetSuggestedFeeds from './types/app/bsky/feed/getSuggestedFeeds'\nexport * as AppBskyFeedGetTimeline from './types/app/bsky/feed/getTimeline'\nexport * as AppBskyFeedLike from './types/app/bsky/feed/like'\nexport * as AppBskyFeedPost from './types/app/bsky/feed/post'\nexport * as AppBskyFeedPostgate from './types/app/bsky/feed/postgate'\nexport * as AppBskyFeedRepost from './types/app/bsky/feed/repost'\nexport * as AppBskyFeedSearchPosts from './types/app/bsky/feed/searchPosts'\nexport * as AppBskyFeedSendInteractions from './types/app/bsky/feed/sendInteractions'\nexport * as AppBskyFeedThreadgate from './types/app/bsky/feed/threadgate'\nexport * as AppBskyGraphBlock from './types/app/bsky/graph/block'\nexport * as AppBskyGraphDefs from './types/app/bsky/graph/defs'\nexport * as AppBskyGraphFollow from './types/app/bsky/graph/follow'\nexport * as AppBskyGraphGetActorStarterPacks from './types/app/bsky/graph/getActorStarterPacks'\nexport * as AppBskyGraphGetBlocks from './types/app/bsky/graph/getBlocks'\nexport * as AppBskyGraphGetFollowers from './types/app/bsky/graph/getFollowers'\nexport * as AppBskyGraphGetFollows from './types/app/bsky/graph/getFollows'\nexport * as AppBskyGraphGetKnownFollowers from './types/app/bsky/graph/getKnownFollowers'\nexport * as AppBskyGraphGetList from './types/app/bsky/graph/getList'\nexport * as AppBskyGraphGetListBlocks from './types/app/bsky/graph/getListBlocks'\nexport * as AppBskyGraphGetListMutes from './types/app/bsky/graph/getListMutes'\nexport * as AppBskyGraphGetLists from './types/app/bsky/graph/getLists'\nexport * as AppBskyGraphGetMutes from './types/app/bsky/graph/getMutes'\nexport * as AppBskyGraphGetRelationships from './types/app/bsky/graph/getRelationships'\nexport * as AppBskyGraphGetStarterPack from './types/app/bsky/graph/getStarterPack'\nexport * as AppBskyGraphGetStarterPacks from './types/app/bsky/graph/getStarterPacks'\nexport * as AppBskyGraphGetSuggestedFollowsByActor from './types/app/bsky/graph/getSuggestedFollowsByActor'\nexport * as AppBskyGraphList from './types/app/bsky/graph/list'\nexport * as AppBskyGraphListblock from './types/app/bsky/graph/listblock'\nexport * as AppBskyGraphListitem from './types/app/bsky/graph/listitem'\nexport * as AppBskyGraphMuteActor from './types/app/bsky/graph/muteActor'\nexport * as AppBskyGraphMuteActorList from './types/app/bsky/graph/muteActorList'\nexport * as AppBskyGraphMuteThread from './types/app/bsky/graph/muteThread'\nexport * as AppBskyGraphSearchStarterPacks from './types/app/bsky/graph/searchStarterPacks'\nexport * as AppBskyGraphStarterpack from './types/app/bsky/graph/starterpack'\nexport * as AppBskyGraphUnmuteActor from './types/app/bsky/graph/unmuteActor'\nexport * as AppBskyGraphUnmuteActorList from './types/app/bsky/graph/unmuteActorList'\nexport * as AppBskyGraphUnmuteThread from './types/app/bsky/graph/unmuteThread'\nexport * as AppBskyLabelerDefs from './types/app/bsky/labeler/defs'\nexport * as AppBskyLabelerGetServices from './types/app/bsky/labeler/getServices'\nexport * as AppBskyLabelerService from './types/app/bsky/labeler/service'\nexport * as AppBskyNotificationGetUnreadCount from './types/app/bsky/notification/getUnreadCount'\nexport * as AppBskyNotificationListNotifications from './types/app/bsky/notification/listNotifications'\nexport * as AppBskyNotificationPutPreferences from './types/app/bsky/notification/putPreferences'\nexport * as AppBskyNotificationRegisterPush from './types/app/bsky/notification/registerPush'\nexport * as AppBskyNotificationUpdateSeen from './types/app/bsky/notification/updateSeen'\nexport * as AppBskyRichtextFacet from './types/app/bsky/richtext/facet'\nexport * as AppBskyUnspeccedDefs from './types/app/bsky/unspecced/defs'\nexport * as AppBskyUnspeccedGetConfig from './types/app/bsky/unspecced/getConfig'\nexport * as AppBskyUnspeccedGetPopularFeedGenerators from './types/app/bsky/unspecced/getPopularFeedGenerators'\nexport * as AppBskyUnspeccedGetSuggestionsSkeleton from './types/app/bsky/unspecced/getSuggestionsSkeleton'\nexport * as AppBskyUnspeccedGetTaggedSuggestions from './types/app/bsky/unspecced/getTaggedSuggestions'\nexport * as AppBskyUnspeccedGetTrendingTopics from './types/app/bsky/unspecced/getTrendingTopics'\nexport * as AppBskyUnspeccedSearchActorsSkeleton from './types/app/bsky/unspecced/searchActorsSkeleton'\nexport * as AppBskyUnspeccedSearchPostsSkeleton from './types/app/bsky/unspecced/searchPostsSkeleton'\nexport * as AppBskyUnspeccedSearchStarterPacksSkeleton from './types/app/bsky/unspecced/searchStarterPacksSkeleton'\nexport * as AppBskyVideoDefs from './types/app/bsky/video/defs'\nexport * as AppBskyVideoGetJobStatus from './types/app/bsky/video/getJobStatus'\nexport * as AppBskyVideoGetUploadLimits from './types/app/bsky/video/getUploadLimits'\nexport * as AppBskyVideoUploadVideo from './types/app/bsky/video/uploadVideo'\nexport * as ChatBskyActorDeclaration from './types/chat/bsky/actor/declaration'\nexport * as ChatBskyActorDefs from './types/chat/bsky/actor/defs'\nexport * as ChatBskyActorDeleteAccount from './types/chat/bsky/actor/deleteAccount'\nexport * as ChatBskyActorExportAccountData from './types/chat/bsky/actor/exportAccountData'\nexport * as ChatBskyConvoDefs from './types/chat/bsky/convo/defs'\nexport * as ChatBskyConvoDeleteMessageForSelf from './types/chat/bsky/convo/deleteMessageForSelf'\nexport * as ChatBskyConvoGetConvo from './types/chat/bsky/convo/getConvo'\nexport * as ChatBskyConvoGetConvoForMembers from './types/chat/bsky/convo/getConvoForMembers'\nexport * as ChatBskyConvoGetLog from './types/chat/bsky/convo/getLog'\nexport * as ChatBskyConvoGetMessages from './types/chat/bsky/convo/getMessages'\nexport * as ChatBskyConvoLeaveConvo from './types/chat/bsky/convo/leaveConvo'\nexport * as ChatBskyConvoListConvos from './types/chat/bsky/convo/listConvos'\nexport * as ChatBskyConvoMuteConvo from './types/chat/bsky/convo/muteConvo'\nexport * as ChatBskyConvoSendMessage from './types/chat/bsky/convo/sendMessage'\nexport * as ChatBskyConvoSendMessageBatch from './types/chat/bsky/convo/sendMessageBatch'\nexport * as ChatBskyConvoUnmuteConvo from './types/chat/bsky/convo/unmuteConvo'\nexport * as ChatBskyConvoUpdateRead from './types/chat/bsky/convo/updateRead'\nexport * as ChatBskyModerationGetActorMetadata from './types/chat/bsky/moderation/getActorMetadata'\nexport * as ChatBskyModerationGetMessageContext from './types/chat/bsky/moderation/getMessageContext'\nexport * as ChatBskyModerationUpdateActorAccess from './types/chat/bsky/moderation/updateActorAccess'\nexport * as ToolsOzoneCommunicationCreateTemplate from './types/tools/ozone/communication/createTemplate'\nexport * as ToolsOzoneCommunicationDefs from './types/tools/ozone/communication/defs'\nexport * as ToolsOzoneCommunicationDeleteTemplate from './types/tools/ozone/communication/deleteTemplate'\nexport * as ToolsOzoneCommunicationListTemplates from './types/tools/ozone/communication/listTemplates'\nexport * as ToolsOzoneCommunicationUpdateTemplate from './types/tools/ozone/communication/updateTemplate'\nexport * as ToolsOzoneModerationDefs from './types/tools/ozone/moderation/defs'\nexport * as ToolsOzoneModerationEmitEvent from './types/tools/ozone/moderation/emitEvent'\nexport * as ToolsOzoneModerationGetEvent from './types/tools/ozone/moderation/getEvent'\nexport * as ToolsOzoneModerationGetRecord from './types/tools/ozone/moderation/getRecord'\nexport * as ToolsOzoneModerationGetRecords from './types/tools/ozone/moderation/getRecords'\nexport * as ToolsOzoneModerationGetRepo from './types/tools/ozone/moderation/getRepo'\nexport * as ToolsOzoneModerationGetRepos from './types/tools/ozone/moderation/getRepos'\nexport * as ToolsOzoneModerationQueryEvents from './types/tools/ozone/moderation/queryEvents'\nexport * as ToolsOzoneModerationQueryStatuses from './types/tools/ozone/moderation/queryStatuses'\nexport * as ToolsOzoneModerationSearchRepos from './types/tools/ozone/moderation/searchRepos'\nexport * as ToolsOzoneServerGetConfig from './types/tools/ozone/server/getConfig'\nexport * as ToolsOzoneSetAddValues from './types/tools/ozone/set/addValues'\nexport * as ToolsOzoneSetDefs from './types/tools/ozone/set/defs'\nexport * as ToolsOzoneSetDeleteSet from './types/tools/ozone/set/deleteSet'\nexport * as ToolsOzoneSetDeleteValues from './types/tools/ozone/set/deleteValues'\nexport * as ToolsOzoneSetGetValues from './types/tools/ozone/set/getValues'\nexport * as ToolsOzoneSetQuerySets from './types/tools/ozone/set/querySets'\nexport * as ToolsOzoneSetUpsertSet from './types/tools/ozone/set/upsertSet'\nexport * as ToolsOzoneSettingDefs from './types/tools/ozone/setting/defs'\nexport * as ToolsOzoneSettingListOptions from './types/tools/ozone/setting/listOptions'\nexport * as ToolsOzoneSettingRemoveOptions from './types/tools/ozone/setting/removeOptions'\nexport * as ToolsOzoneSettingUpsertOption from './types/tools/ozone/setting/upsertOption'\nexport * as ToolsOzoneSignatureDefs from './types/tools/ozone/signature/defs'\nexport * as ToolsOzoneSignatureFindCorrelation from './types/tools/ozone/signature/findCorrelation'\nexport * as ToolsOzoneSignatureFindRelatedAccounts from './types/tools/ozone/signature/findRelatedAccounts'\nexport * as ToolsOzoneSignatureSearchAccounts from './types/tools/ozone/signature/searchAccounts'\nexport * as ToolsOzoneTeamAddMember from './types/tools/ozone/team/addMember'\nexport * as ToolsOzoneTeamDefs from './types/tools/ozone/team/defs'\nexport * as ToolsOzoneTeamDeleteMember from './types/tools/ozone/team/deleteMember'\nexport * as ToolsOzoneTeamListMembers from './types/tools/ozone/team/listMembers'\nexport * as ToolsOzoneTeamUpdateMember from './types/tools/ozone/team/updateMember'\n\nexport const COM_ATPROTO_MODERATION = {\n  DefsReasonSpam: 'com.atproto.moderation.defs#reasonSpam',\n  DefsReasonViolation: 'com.atproto.moderation.defs#reasonViolation',\n  DefsReasonMisleading: 'com.atproto.moderation.defs#reasonMisleading',\n  DefsReasonSexual: 'com.atproto.moderation.defs#reasonSexual',\n  DefsReasonRude: 'com.atproto.moderation.defs#reasonRude',\n  DefsReasonOther: 'com.atproto.moderation.defs#reasonOther',\n  DefsReasonAppeal: 'com.atproto.moderation.defs#reasonAppeal',\n}\nexport const APP_BSKY_FEED = {\n  DefsRequestLess: 'app.bsky.feed.defs#requestLess',\n  DefsRequestMore: 'app.bsky.feed.defs#requestMore',\n  DefsClickthroughItem: 'app.bsky.feed.defs#clickthroughItem',\n  DefsClickthroughAuthor: 'app.bsky.feed.defs#clickthroughAuthor',\n  DefsClickthroughReposter: 'app.bsky.feed.defs#clickthroughReposter',\n  DefsClickthroughEmbed: 'app.bsky.feed.defs#clickthroughEmbed',\n  DefsContentModeUnspecified: 'app.bsky.feed.defs#contentModeUnspecified',\n  DefsContentModeVideo: 'app.bsky.feed.defs#contentModeVideo',\n  DefsInteractionSeen: 'app.bsky.feed.defs#interactionSeen',\n  DefsInteractionLike: 'app.bsky.feed.defs#interactionLike',\n  DefsInteractionRepost: 'app.bsky.feed.defs#interactionRepost',\n  DefsInteractionReply: 'app.bsky.feed.defs#interactionReply',\n  DefsInteractionQuote: 'app.bsky.feed.defs#interactionQuote',\n  DefsInteractionShare: 'app.bsky.feed.defs#interactionShare',\n}\nexport const APP_BSKY_GRAPH = {\n  DefsModlist: 'app.bsky.graph.defs#modlist',\n  DefsCuratelist: 'app.bsky.graph.defs#curatelist',\n  DefsReferencelist: 'app.bsky.graph.defs#referencelist',\n}\nexport const TOOLS_OZONE_MODERATION = {\n  DefsReviewOpen: 'tools.ozone.moderation.defs#reviewOpen',\n  DefsReviewEscalated: 'tools.ozone.moderation.defs#reviewEscalated',\n  DefsReviewClosed: 'tools.ozone.moderation.defs#reviewClosed',\n  DefsReviewNone: 'tools.ozone.moderation.defs#reviewNone',\n}\nexport const TOOLS_OZONE_TEAM = {\n  DefsRoleAdmin: 'tools.ozone.team.defs#roleAdmin',\n  DefsRoleModerator: 'tools.ozone.team.defs#roleModerator',\n  DefsRoleTriage: 'tools.ozone.team.defs#roleTriage',\n}\n\nexport class AtpBaseClient extends XrpcClient {\n  com: ComNS\n  app: AppNS\n  chat: ChatNS\n  tools: ToolsNS\n\n  constructor(options: FetchHandler | FetchHandlerOptions) {\n    super(options, schemas)\n    this.com = new ComNS(this)\n    this.app = new AppNS(this)\n    this.chat = new ChatNS(this)\n    this.tools = new ToolsNS(this)\n  }\n\n  /** @deprecated use `this` instead */\n  get xrpc(): XrpcClient {\n    return this\n  }\n}\n\nexport class ComNS {\n  _client: XrpcClient\n  atproto: ComAtprotoNS\n\n  constructor(client: XrpcClient) {\n    this._client = client\n    this.atproto = new ComAtprotoNS(client)\n  }\n}\n\nexport class ComAtprotoNS {\n  _client: XrpcClient\n  admin: ComAtprotoAdminNS\n  identity: ComAtprotoIdentityNS\n  label: ComAtprotoLabelNS\n  lexicon: ComAtprotoLexiconNS\n  moderation: ComAtprotoModerationNS\n  repo: ComAtprotoRepoNS\n  server: ComAtprotoServerNS\n  sync: ComAtprotoSyncNS\n  temp: ComAtprotoTempNS\n\n  constructor(client: XrpcClient) {\n    this._client = client\n    this.admin = new ComAtprotoAdminNS(client)\n    this.identity = new ComAtprotoIdentityNS(client)\n    this.label = new ComAtprotoLabelNS(client)\n    this.lexicon = new ComAtprotoLexiconNS(client)\n    this.moderation = new ComAtprotoModerationNS(client)\n    this.repo = new ComAtprotoRepoNS(client)\n    this.server = new ComAtprotoServerNS(client)\n    this.sync = new ComAtprotoSyncNS(client)\n    this.temp = new ComAtprotoTempNS(client)\n  }\n}\n\nexport class ComAtprotoAdminNS {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  deleteAccount(\n    data?: ComAtprotoAdminDeleteAccount.InputSchema,\n    opts?: ComAtprotoAdminDeleteAccount.CallOptions,\n  ): Promise<ComAtprotoAdminDeleteAccount.Response> {\n    return this._client.call(\n      'com.atproto.admin.deleteAccount',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  disableAccountInvites(\n    data?: ComAtprotoAdminDisableAccountInvites.InputSchema,\n    opts?: ComAtprotoAdminDisableAccountInvites.CallOptions,\n  ): Promise<ComAtprotoAdminDisableAccountInvites.Response> {\n    return this._client.call(\n      'com.atproto.admin.disableAccountInvites',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  disableInviteCodes(\n    data?: ComAtprotoAdminDisableInviteCodes.InputSchema,\n    opts?: ComAtprotoAdminDisableInviteCodes.CallOptions,\n  ): Promise<ComAtprotoAdminDisableInviteCodes.Response> {\n    return this._client.call(\n      'com.atproto.admin.disableInviteCodes',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  enableAccountInvites(\n    data?: ComAtprotoAdminEnableAccountInvites.InputSchema,\n    opts?: ComAtprotoAdminEnableAccountInvites.CallOptions,\n  ): Promise<ComAtprotoAdminEnableAccountInvites.Response> {\n    return this._client.call(\n      'com.atproto.admin.enableAccountInvites',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  getAccountInfo(\n    params?: ComAtprotoAdminGetAccountInfo.QueryParams,\n    opts?: ComAtprotoAdminGetAccountInfo.CallOptions,\n  ): Promise<ComAtprotoAdminGetAccountInfo.Response> {\n    return this._client.call(\n      'com.atproto.admin.getAccountInfo',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getAccountInfos(\n    params?: ComAtprotoAdminGetAccountInfos.QueryParams,\n    opts?: ComAtprotoAdminGetAccountInfos.CallOptions,\n  ): Promise<ComAtprotoAdminGetAccountInfos.Response> {\n    return this._client.call(\n      'com.atproto.admin.getAccountInfos',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getInviteCodes(\n    params?: ComAtprotoAdminGetInviteCodes.QueryParams,\n    opts?: ComAtprotoAdminGetInviteCodes.CallOptions,\n  ): Promise<ComAtprotoAdminGetInviteCodes.Response> {\n    return this._client.call(\n      'com.atproto.admin.getInviteCodes',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getSubjectStatus(\n    params?: ComAtprotoAdminGetSubjectStatus.QueryParams,\n    opts?: ComAtprotoAdminGetSubjectStatus.CallOptions,\n  ): Promise<ComAtprotoAdminGetSubjectStatus.Response> {\n    return this._client.call(\n      'com.atproto.admin.getSubjectStatus',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  searchAccounts(\n    params?: ComAtprotoAdminSearchAccounts.QueryParams,\n    opts?: ComAtprotoAdminSearchAccounts.CallOptions,\n  ): Promise<ComAtprotoAdminSearchAccounts.Response> {\n    return this._client.call(\n      'com.atproto.admin.searchAccounts',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  sendEmail(\n    data?: ComAtprotoAdminSendEmail.InputSchema,\n    opts?: ComAtprotoAdminSendEmail.CallOptions,\n  ): Promise<ComAtprotoAdminSendEmail.Response> {\n    return this._client.call(\n      'com.atproto.admin.sendEmail',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  updateAccountEmail(\n    data?: ComAtprotoAdminUpdateAccountEmail.InputSchema,\n    opts?: ComAtprotoAdminUpdateAccountEmail.CallOptions,\n  ): Promise<ComAtprotoAdminUpdateAccountEmail.Response> {\n    return this._client.call(\n      'com.atproto.admin.updateAccountEmail',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  updateAccountHandle(\n    data?: ComAtprotoAdminUpdateAccountHandle.InputSchema,\n    opts?: ComAtprotoAdminUpdateAccountHandle.CallOptions,\n  ): Promise<ComAtprotoAdminUpdateAccountHandle.Response> {\n    return this._client.call(\n      'com.atproto.admin.updateAccountHandle',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  updateAccountPassword(\n    data?: ComAtprotoAdminUpdateAccountPassword.InputSchema,\n    opts?: ComAtprotoAdminUpdateAccountPassword.CallOptions,\n  ): Promise<ComAtprotoAdminUpdateAccountPassword.Response> {\n    return this._client.call(\n      'com.atproto.admin.updateAccountPassword',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  updateSubjectStatus(\n    data?: ComAtprotoAdminUpdateSubjectStatus.InputSchema,\n    opts?: ComAtprotoAdminUpdateSubjectStatus.CallOptions,\n  ): Promise<ComAtprotoAdminUpdateSubjectStatus.Response> {\n    return this._client.call(\n      'com.atproto.admin.updateSubjectStatus',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n}\n\nexport class ComAtprotoIdentityNS {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  getRecommendedDidCredentials(\n    params?: ComAtprotoIdentityGetRecommendedDidCredentials.QueryParams,\n    opts?: ComAtprotoIdentityGetRecommendedDidCredentials.CallOptions,\n  ): Promise<ComAtprotoIdentityGetRecommendedDidCredentials.Response> {\n    return this._client.call(\n      'com.atproto.identity.getRecommendedDidCredentials',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  requestPlcOperationSignature(\n    data?: ComAtprotoIdentityRequestPlcOperationSignature.InputSchema,\n    opts?: ComAtprotoIdentityRequestPlcOperationSignature.CallOptions,\n  ): Promise<ComAtprotoIdentityRequestPlcOperationSignature.Response> {\n    return this._client.call(\n      'com.atproto.identity.requestPlcOperationSignature',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  resolveHandle(\n    params?: ComAtprotoIdentityResolveHandle.QueryParams,\n    opts?: ComAtprotoIdentityResolveHandle.CallOptions,\n  ): Promise<ComAtprotoIdentityResolveHandle.Response> {\n    return this._client.call(\n      'com.atproto.identity.resolveHandle',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  signPlcOperation(\n    data?: ComAtprotoIdentitySignPlcOperation.InputSchema,\n    opts?: ComAtprotoIdentitySignPlcOperation.CallOptions,\n  ): Promise<ComAtprotoIdentitySignPlcOperation.Response> {\n    return this._client.call(\n      'com.atproto.identity.signPlcOperation',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  submitPlcOperation(\n    data?: ComAtprotoIdentitySubmitPlcOperation.InputSchema,\n    opts?: ComAtprotoIdentitySubmitPlcOperation.CallOptions,\n  ): Promise<ComAtprotoIdentitySubmitPlcOperation.Response> {\n    return this._client.call(\n      'com.atproto.identity.submitPlcOperation',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  updateHandle(\n    data?: ComAtprotoIdentityUpdateHandle.InputSchema,\n    opts?: ComAtprotoIdentityUpdateHandle.CallOptions,\n  ): Promise<ComAtprotoIdentityUpdateHandle.Response> {\n    return this._client.call(\n      'com.atproto.identity.updateHandle',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n}\n\nexport class ComAtprotoLabelNS {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  queryLabels(\n    params?: ComAtprotoLabelQueryLabels.QueryParams,\n    opts?: ComAtprotoLabelQueryLabels.CallOptions,\n  ): Promise<ComAtprotoLabelQueryLabels.Response> {\n    return this._client.call(\n      'com.atproto.label.queryLabels',\n      params,\n      undefined,\n      opts,\n    )\n  }\n}\n\nexport class ComAtprotoLexiconNS {\n  _client: XrpcClient\n  schema: SchemaRecord\n\n  constructor(client: XrpcClient) {\n    this._client = client\n    this.schema = new SchemaRecord(client)\n  }\n}\n\nexport class SchemaRecord {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  async list(\n    params: Omit<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: ComAtprotoLexiconSchema.Record }[]\n  }> {\n    const res = await this._client.call('com.atproto.repo.listRecords', {\n      collection: 'com.atproto.lexicon.schema',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: Omit<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{\n    uri: string\n    cid: string\n    value: ComAtprotoLexiconSchema.Record\n  }> {\n    const res = await this._client.call('com.atproto.repo.getRecord', {\n      collection: 'com.atproto.lexicon.schema',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: Omit<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: ComAtprotoLexiconSchema.Record,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    record.$type = 'com.atproto.lexicon.schema'\n    const res = await this._client.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      { collection: 'com.atproto.lexicon.schema', ...params, record },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: Omit<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._client.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'com.atproto.lexicon.schema', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class ComAtprotoModerationNS {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  createReport(\n    data?: ComAtprotoModerationCreateReport.InputSchema,\n    opts?: ComAtprotoModerationCreateReport.CallOptions,\n  ): Promise<ComAtprotoModerationCreateReport.Response> {\n    return this._client.call(\n      'com.atproto.moderation.createReport',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n}\n\nexport class ComAtprotoRepoNS {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  applyWrites(\n    data?: ComAtprotoRepoApplyWrites.InputSchema,\n    opts?: ComAtprotoRepoApplyWrites.CallOptions,\n  ): Promise<ComAtprotoRepoApplyWrites.Response> {\n    return this._client\n      .call('com.atproto.repo.applyWrites', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoRepoApplyWrites.toKnownErr(e)\n      })\n  }\n\n  createRecord(\n    data?: ComAtprotoRepoCreateRecord.InputSchema,\n    opts?: ComAtprotoRepoCreateRecord.CallOptions,\n  ): Promise<ComAtprotoRepoCreateRecord.Response> {\n    return this._client\n      .call('com.atproto.repo.createRecord', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoRepoCreateRecord.toKnownErr(e)\n      })\n  }\n\n  deleteRecord(\n    data?: ComAtprotoRepoDeleteRecord.InputSchema,\n    opts?: ComAtprotoRepoDeleteRecord.CallOptions,\n  ): Promise<ComAtprotoRepoDeleteRecord.Response> {\n    return this._client\n      .call('com.atproto.repo.deleteRecord', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoRepoDeleteRecord.toKnownErr(e)\n      })\n  }\n\n  describeRepo(\n    params?: ComAtprotoRepoDescribeRepo.QueryParams,\n    opts?: ComAtprotoRepoDescribeRepo.CallOptions,\n  ): Promise<ComAtprotoRepoDescribeRepo.Response> {\n    return this._client.call(\n      'com.atproto.repo.describeRepo',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getRecord(\n    params?: ComAtprotoRepoGetRecord.QueryParams,\n    opts?: ComAtprotoRepoGetRecord.CallOptions,\n  ): Promise<ComAtprotoRepoGetRecord.Response> {\n    return this._client\n      .call('com.atproto.repo.getRecord', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoRepoGetRecord.toKnownErr(e)\n      })\n  }\n\n  importRepo(\n    data?: ComAtprotoRepoImportRepo.InputSchema,\n    opts?: ComAtprotoRepoImportRepo.CallOptions,\n  ): Promise<ComAtprotoRepoImportRepo.Response> {\n    return this._client.call(\n      'com.atproto.repo.importRepo',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  listMissingBlobs(\n    params?: ComAtprotoRepoListMissingBlobs.QueryParams,\n    opts?: ComAtprotoRepoListMissingBlobs.CallOptions,\n  ): Promise<ComAtprotoRepoListMissingBlobs.Response> {\n    return this._client.call(\n      'com.atproto.repo.listMissingBlobs',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  listRecords(\n    params?: ComAtprotoRepoListRecords.QueryParams,\n    opts?: ComAtprotoRepoListRecords.CallOptions,\n  ): Promise<ComAtprotoRepoListRecords.Response> {\n    return this._client.call(\n      'com.atproto.repo.listRecords',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  putRecord(\n    data?: ComAtprotoRepoPutRecord.InputSchema,\n    opts?: ComAtprotoRepoPutRecord.CallOptions,\n  ): Promise<ComAtprotoRepoPutRecord.Response> {\n    return this._client\n      .call('com.atproto.repo.putRecord', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoRepoPutRecord.toKnownErr(e)\n      })\n  }\n\n  uploadBlob(\n    data?: ComAtprotoRepoUploadBlob.InputSchema,\n    opts?: ComAtprotoRepoUploadBlob.CallOptions,\n  ): Promise<ComAtprotoRepoUploadBlob.Response> {\n    return this._client.call(\n      'com.atproto.repo.uploadBlob',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n}\n\nexport class ComAtprotoServerNS {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  activateAccount(\n    data?: ComAtprotoServerActivateAccount.InputSchema,\n    opts?: ComAtprotoServerActivateAccount.CallOptions,\n  ): Promise<ComAtprotoServerActivateAccount.Response> {\n    return this._client.call(\n      'com.atproto.server.activateAccount',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  checkAccountStatus(\n    params?: ComAtprotoServerCheckAccountStatus.QueryParams,\n    opts?: ComAtprotoServerCheckAccountStatus.CallOptions,\n  ): Promise<ComAtprotoServerCheckAccountStatus.Response> {\n    return this._client.call(\n      'com.atproto.server.checkAccountStatus',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  confirmEmail(\n    data?: ComAtprotoServerConfirmEmail.InputSchema,\n    opts?: ComAtprotoServerConfirmEmail.CallOptions,\n  ): Promise<ComAtprotoServerConfirmEmail.Response> {\n    return this._client\n      .call('com.atproto.server.confirmEmail', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerConfirmEmail.toKnownErr(e)\n      })\n  }\n\n  createAccount(\n    data?: ComAtprotoServerCreateAccount.InputSchema,\n    opts?: ComAtprotoServerCreateAccount.CallOptions,\n  ): Promise<ComAtprotoServerCreateAccount.Response> {\n    return this._client\n      .call('com.atproto.server.createAccount', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerCreateAccount.toKnownErr(e)\n      })\n  }\n\n  createAppPassword(\n    data?: ComAtprotoServerCreateAppPassword.InputSchema,\n    opts?: ComAtprotoServerCreateAppPassword.CallOptions,\n  ): Promise<ComAtprotoServerCreateAppPassword.Response> {\n    return this._client\n      .call('com.atproto.server.createAppPassword', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerCreateAppPassword.toKnownErr(e)\n      })\n  }\n\n  createInviteCode(\n    data?: ComAtprotoServerCreateInviteCode.InputSchema,\n    opts?: ComAtprotoServerCreateInviteCode.CallOptions,\n  ): Promise<ComAtprotoServerCreateInviteCode.Response> {\n    return this._client.call(\n      'com.atproto.server.createInviteCode',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  createInviteCodes(\n    data?: ComAtprotoServerCreateInviteCodes.InputSchema,\n    opts?: ComAtprotoServerCreateInviteCodes.CallOptions,\n  ): Promise<ComAtprotoServerCreateInviteCodes.Response> {\n    return this._client.call(\n      'com.atproto.server.createInviteCodes',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  createSession(\n    data?: ComAtprotoServerCreateSession.InputSchema,\n    opts?: ComAtprotoServerCreateSession.CallOptions,\n  ): Promise<ComAtprotoServerCreateSession.Response> {\n    return this._client\n      .call('com.atproto.server.createSession', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerCreateSession.toKnownErr(e)\n      })\n  }\n\n  deactivateAccount(\n    data?: ComAtprotoServerDeactivateAccount.InputSchema,\n    opts?: ComAtprotoServerDeactivateAccount.CallOptions,\n  ): Promise<ComAtprotoServerDeactivateAccount.Response> {\n    return this._client.call(\n      'com.atproto.server.deactivateAccount',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  deleteAccount(\n    data?: ComAtprotoServerDeleteAccount.InputSchema,\n    opts?: ComAtprotoServerDeleteAccount.CallOptions,\n  ): Promise<ComAtprotoServerDeleteAccount.Response> {\n    return this._client\n      .call('com.atproto.server.deleteAccount', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerDeleteAccount.toKnownErr(e)\n      })\n  }\n\n  deleteSession(\n    data?: ComAtprotoServerDeleteSession.InputSchema,\n    opts?: ComAtprotoServerDeleteSession.CallOptions,\n  ): Promise<ComAtprotoServerDeleteSession.Response> {\n    return this._client.call(\n      'com.atproto.server.deleteSession',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  describeServer(\n    params?: ComAtprotoServerDescribeServer.QueryParams,\n    opts?: ComAtprotoServerDescribeServer.CallOptions,\n  ): Promise<ComAtprotoServerDescribeServer.Response> {\n    return this._client.call(\n      'com.atproto.server.describeServer',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getAccountInviteCodes(\n    params?: ComAtprotoServerGetAccountInviteCodes.QueryParams,\n    opts?: ComAtprotoServerGetAccountInviteCodes.CallOptions,\n  ): Promise<ComAtprotoServerGetAccountInviteCodes.Response> {\n    return this._client\n      .call('com.atproto.server.getAccountInviteCodes', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoServerGetAccountInviteCodes.toKnownErr(e)\n      })\n  }\n\n  getServiceAuth(\n    params?: ComAtprotoServerGetServiceAuth.QueryParams,\n    opts?: ComAtprotoServerGetServiceAuth.CallOptions,\n  ): Promise<ComAtprotoServerGetServiceAuth.Response> {\n    return this._client\n      .call('com.atproto.server.getServiceAuth', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoServerGetServiceAuth.toKnownErr(e)\n      })\n  }\n\n  getSession(\n    params?: ComAtprotoServerGetSession.QueryParams,\n    opts?: ComAtprotoServerGetSession.CallOptions,\n  ): Promise<ComAtprotoServerGetSession.Response> {\n    return this._client.call(\n      'com.atproto.server.getSession',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  listAppPasswords(\n    params?: ComAtprotoServerListAppPasswords.QueryParams,\n    opts?: ComAtprotoServerListAppPasswords.CallOptions,\n  ): Promise<ComAtprotoServerListAppPasswords.Response> {\n    return this._client\n      .call('com.atproto.server.listAppPasswords', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoServerListAppPasswords.toKnownErr(e)\n      })\n  }\n\n  refreshSession(\n    data?: ComAtprotoServerRefreshSession.InputSchema,\n    opts?: ComAtprotoServerRefreshSession.CallOptions,\n  ): Promise<ComAtprotoServerRefreshSession.Response> {\n    return this._client\n      .call('com.atproto.server.refreshSession', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerRefreshSession.toKnownErr(e)\n      })\n  }\n\n  requestAccountDelete(\n    data?: ComAtprotoServerRequestAccountDelete.InputSchema,\n    opts?: ComAtprotoServerRequestAccountDelete.CallOptions,\n  ): Promise<ComAtprotoServerRequestAccountDelete.Response> {\n    return this._client.call(\n      'com.atproto.server.requestAccountDelete',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  requestEmailConfirmation(\n    data?: ComAtprotoServerRequestEmailConfirmation.InputSchema,\n    opts?: ComAtprotoServerRequestEmailConfirmation.CallOptions,\n  ): Promise<ComAtprotoServerRequestEmailConfirmation.Response> {\n    return this._client.call(\n      'com.atproto.server.requestEmailConfirmation',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  requestEmailUpdate(\n    data?: ComAtprotoServerRequestEmailUpdate.InputSchema,\n    opts?: ComAtprotoServerRequestEmailUpdate.CallOptions,\n  ): Promise<ComAtprotoServerRequestEmailUpdate.Response> {\n    return this._client.call(\n      'com.atproto.server.requestEmailUpdate',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  requestPasswordReset(\n    data?: ComAtprotoServerRequestPasswordReset.InputSchema,\n    opts?: ComAtprotoServerRequestPasswordReset.CallOptions,\n  ): Promise<ComAtprotoServerRequestPasswordReset.Response> {\n    return this._client.call(\n      'com.atproto.server.requestPasswordReset',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  reserveSigningKey(\n    data?: ComAtprotoServerReserveSigningKey.InputSchema,\n    opts?: ComAtprotoServerReserveSigningKey.CallOptions,\n  ): Promise<ComAtprotoServerReserveSigningKey.Response> {\n    return this._client.call(\n      'com.atproto.server.reserveSigningKey',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  resetPassword(\n    data?: ComAtprotoServerResetPassword.InputSchema,\n    opts?: ComAtprotoServerResetPassword.CallOptions,\n  ): Promise<ComAtprotoServerResetPassword.Response> {\n    return this._client\n      .call('com.atproto.server.resetPassword', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerResetPassword.toKnownErr(e)\n      })\n  }\n\n  revokeAppPassword(\n    data?: ComAtprotoServerRevokeAppPassword.InputSchema,\n    opts?: ComAtprotoServerRevokeAppPassword.CallOptions,\n  ): Promise<ComAtprotoServerRevokeAppPassword.Response> {\n    return this._client.call(\n      'com.atproto.server.revokeAppPassword',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  updateEmail(\n    data?: ComAtprotoServerUpdateEmail.InputSchema,\n    opts?: ComAtprotoServerUpdateEmail.CallOptions,\n  ): Promise<ComAtprotoServerUpdateEmail.Response> {\n    return this._client\n      .call('com.atproto.server.updateEmail', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerUpdateEmail.toKnownErr(e)\n      })\n  }\n}\n\nexport class ComAtprotoSyncNS {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  getBlob(\n    params?: ComAtprotoSyncGetBlob.QueryParams,\n    opts?: ComAtprotoSyncGetBlob.CallOptions,\n  ): Promise<ComAtprotoSyncGetBlob.Response> {\n    return this._client\n      .call('com.atproto.sync.getBlob', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoSyncGetBlob.toKnownErr(e)\n      })\n  }\n\n  getBlocks(\n    params?: ComAtprotoSyncGetBlocks.QueryParams,\n    opts?: ComAtprotoSyncGetBlocks.CallOptions,\n  ): Promise<ComAtprotoSyncGetBlocks.Response> {\n    return this._client\n      .call('com.atproto.sync.getBlocks', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoSyncGetBlocks.toKnownErr(e)\n      })\n  }\n\n  getCheckout(\n    params?: ComAtprotoSyncGetCheckout.QueryParams,\n    opts?: ComAtprotoSyncGetCheckout.CallOptions,\n  ): Promise<ComAtprotoSyncGetCheckout.Response> {\n    return this._client.call(\n      'com.atproto.sync.getCheckout',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getHead(\n    params?: ComAtprotoSyncGetHead.QueryParams,\n    opts?: ComAtprotoSyncGetHead.CallOptions,\n  ): Promise<ComAtprotoSyncGetHead.Response> {\n    return this._client\n      .call('com.atproto.sync.getHead', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoSyncGetHead.toKnownErr(e)\n      })\n  }\n\n  getLatestCommit(\n    params?: ComAtprotoSyncGetLatestCommit.QueryParams,\n    opts?: ComAtprotoSyncGetLatestCommit.CallOptions,\n  ): Promise<ComAtprotoSyncGetLatestCommit.Response> {\n    return this._client\n      .call('com.atproto.sync.getLatestCommit', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoSyncGetLatestCommit.toKnownErr(e)\n      })\n  }\n\n  getRecord(\n    params?: ComAtprotoSyncGetRecord.QueryParams,\n    opts?: ComAtprotoSyncGetRecord.CallOptions,\n  ): Promise<ComAtprotoSyncGetRecord.Response> {\n    return this._client\n      .call('com.atproto.sync.getRecord', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoSyncGetRecord.toKnownErr(e)\n      })\n  }\n\n  getRepo(\n    params?: ComAtprotoSyncGetRepo.QueryParams,\n    opts?: ComAtprotoSyncGetRepo.CallOptions,\n  ): Promise<ComAtprotoSyncGetRepo.Response> {\n    return this._client\n      .call('com.atproto.sync.getRepo', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoSyncGetRepo.toKnownErr(e)\n      })\n  }\n\n  getRepoStatus(\n    params?: ComAtprotoSyncGetRepoStatus.QueryParams,\n    opts?: ComAtprotoSyncGetRepoStatus.CallOptions,\n  ): Promise<ComAtprotoSyncGetRepoStatus.Response> {\n    return this._client\n      .call('com.atproto.sync.getRepoStatus', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoSyncGetRepoStatus.toKnownErr(e)\n      })\n  }\n\n  listBlobs(\n    params?: ComAtprotoSyncListBlobs.QueryParams,\n    opts?: ComAtprotoSyncListBlobs.CallOptions,\n  ): Promise<ComAtprotoSyncListBlobs.Response> {\n    return this._client\n      .call('com.atproto.sync.listBlobs', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoSyncListBlobs.toKnownErr(e)\n      })\n  }\n\n  listRepos(\n    params?: ComAtprotoSyncListRepos.QueryParams,\n    opts?: ComAtprotoSyncListRepos.CallOptions,\n  ): Promise<ComAtprotoSyncListRepos.Response> {\n    return this._client.call(\n      'com.atproto.sync.listRepos',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  notifyOfUpdate(\n    data?: ComAtprotoSyncNotifyOfUpdate.InputSchema,\n    opts?: ComAtprotoSyncNotifyOfUpdate.CallOptions,\n  ): Promise<ComAtprotoSyncNotifyOfUpdate.Response> {\n    return this._client.call(\n      'com.atproto.sync.notifyOfUpdate',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  requestCrawl(\n    data?: ComAtprotoSyncRequestCrawl.InputSchema,\n    opts?: ComAtprotoSyncRequestCrawl.CallOptions,\n  ): Promise<ComAtprotoSyncRequestCrawl.Response> {\n    return this._client.call(\n      'com.atproto.sync.requestCrawl',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n}\n\nexport class ComAtprotoTempNS {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  addReservedHandle(\n    data?: ComAtprotoTempAddReservedHandle.InputSchema,\n    opts?: ComAtprotoTempAddReservedHandle.CallOptions,\n  ): Promise<ComAtprotoTempAddReservedHandle.Response> {\n    return this._client.call(\n      'com.atproto.temp.addReservedHandle',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  checkSignupQueue(\n    params?: ComAtprotoTempCheckSignupQueue.QueryParams,\n    opts?: ComAtprotoTempCheckSignupQueue.CallOptions,\n  ): Promise<ComAtprotoTempCheckSignupQueue.Response> {\n    return this._client.call(\n      'com.atproto.temp.checkSignupQueue',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  fetchLabels(\n    params?: ComAtprotoTempFetchLabels.QueryParams,\n    opts?: ComAtprotoTempFetchLabels.CallOptions,\n  ): Promise<ComAtprotoTempFetchLabels.Response> {\n    return this._client.call(\n      'com.atproto.temp.fetchLabels',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  requestPhoneVerification(\n    data?: ComAtprotoTempRequestPhoneVerification.InputSchema,\n    opts?: ComAtprotoTempRequestPhoneVerification.CallOptions,\n  ): Promise<ComAtprotoTempRequestPhoneVerification.Response> {\n    return this._client.call(\n      'com.atproto.temp.requestPhoneVerification',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n}\n\nexport class AppNS {\n  _client: XrpcClient\n  bsky: AppBskyNS\n\n  constructor(client: XrpcClient) {\n    this._client = client\n    this.bsky = new AppBskyNS(client)\n  }\n}\n\nexport class AppBskyNS {\n  _client: XrpcClient\n  actor: AppBskyActorNS\n  embed: AppBskyEmbedNS\n  feed: AppBskyFeedNS\n  graph: AppBskyGraphNS\n  labeler: AppBskyLabelerNS\n  notification: AppBskyNotificationNS\n  richtext: AppBskyRichtextNS\n  unspecced: AppBskyUnspeccedNS\n  video: AppBskyVideoNS\n\n  constructor(client: XrpcClient) {\n    this._client = client\n    this.actor = new AppBskyActorNS(client)\n    this.embed = new AppBskyEmbedNS(client)\n    this.feed = new AppBskyFeedNS(client)\n    this.graph = new AppBskyGraphNS(client)\n    this.labeler = new AppBskyLabelerNS(client)\n    this.notification = new AppBskyNotificationNS(client)\n    this.richtext = new AppBskyRichtextNS(client)\n    this.unspecced = new AppBskyUnspeccedNS(client)\n    this.video = new AppBskyVideoNS(client)\n  }\n}\n\nexport class AppBskyActorNS {\n  _client: XrpcClient\n  profile: ProfileRecord\n\n  constructor(client: XrpcClient) {\n    this._client = client\n    this.profile = new ProfileRecord(client)\n  }\n\n  getPreferences(\n    params?: AppBskyActorGetPreferences.QueryParams,\n    opts?: AppBskyActorGetPreferences.CallOptions,\n  ): Promise<AppBskyActorGetPreferences.Response> {\n    return this._client.call(\n      'app.bsky.actor.getPreferences',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getProfile(\n    params?: AppBskyActorGetProfile.QueryParams,\n    opts?: AppBskyActorGetProfile.CallOptions,\n  ): Promise<AppBskyActorGetProfile.Response> {\n    return this._client.call(\n      'app.bsky.actor.getProfile',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getProfiles(\n    params?: AppBskyActorGetProfiles.QueryParams,\n    opts?: AppBskyActorGetProfiles.CallOptions,\n  ): Promise<AppBskyActorGetProfiles.Response> {\n    return this._client.call(\n      'app.bsky.actor.getProfiles',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getSuggestions(\n    params?: AppBskyActorGetSuggestions.QueryParams,\n    opts?: AppBskyActorGetSuggestions.CallOptions,\n  ): Promise<AppBskyActorGetSuggestions.Response> {\n    return this._client.call(\n      'app.bsky.actor.getSuggestions',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  putPreferences(\n    data?: AppBskyActorPutPreferences.InputSchema,\n    opts?: AppBskyActorPutPreferences.CallOptions,\n  ): Promise<AppBskyActorPutPreferences.Response> {\n    return this._client.call(\n      'app.bsky.actor.putPreferences',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  searchActors(\n    params?: AppBskyActorSearchActors.QueryParams,\n    opts?: AppBskyActorSearchActors.CallOptions,\n  ): Promise<AppBskyActorSearchActors.Response> {\n    return this._client.call(\n      'app.bsky.actor.searchActors',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  searchActorsTypeahead(\n    params?: AppBskyActorSearchActorsTypeahead.QueryParams,\n    opts?: AppBskyActorSearchActorsTypeahead.CallOptions,\n  ): Promise<AppBskyActorSearchActorsTypeahead.Response> {\n    return this._client.call(\n      'app.bsky.actor.searchActorsTypeahead',\n      params,\n      undefined,\n      opts,\n    )\n  }\n}\n\nexport class ProfileRecord {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  async list(\n    params: Omit<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyActorProfile.Record }[]\n  }> {\n    const res = await this._client.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.actor.profile',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: Omit<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{ uri: string; cid: string; value: AppBskyActorProfile.Record }> {\n    const res = await this._client.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.actor.profile',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: Omit<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: AppBskyActorProfile.Record,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    record.$type = 'app.bsky.actor.profile'\n    const res = await this._client.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      { collection: 'app.bsky.actor.profile', rkey: 'self', ...params, record },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: Omit<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._client.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.actor.profile', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class AppBskyEmbedNS {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n}\n\nexport class AppBskyFeedNS {\n  _client: XrpcClient\n  generator: GeneratorRecord\n  like: LikeRecord\n  post: PostRecord\n  postgate: PostgateRecord\n  repost: RepostRecord\n  threadgate: ThreadgateRecord\n\n  constructor(client: XrpcClient) {\n    this._client = client\n    this.generator = new GeneratorRecord(client)\n    this.like = new LikeRecord(client)\n    this.post = new PostRecord(client)\n    this.postgate = new PostgateRecord(client)\n    this.repost = new RepostRecord(client)\n    this.threadgate = new ThreadgateRecord(client)\n  }\n\n  describeFeedGenerator(\n    params?: AppBskyFeedDescribeFeedGenerator.QueryParams,\n    opts?: AppBskyFeedDescribeFeedGenerator.CallOptions,\n  ): Promise<AppBskyFeedDescribeFeedGenerator.Response> {\n    return this._client.call(\n      'app.bsky.feed.describeFeedGenerator',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getActorFeeds(\n    params?: AppBskyFeedGetActorFeeds.QueryParams,\n    opts?: AppBskyFeedGetActorFeeds.CallOptions,\n  ): Promise<AppBskyFeedGetActorFeeds.Response> {\n    return this._client.call(\n      'app.bsky.feed.getActorFeeds',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getActorLikes(\n    params?: AppBskyFeedGetActorLikes.QueryParams,\n    opts?: AppBskyFeedGetActorLikes.CallOptions,\n  ): Promise<AppBskyFeedGetActorLikes.Response> {\n    return this._client\n      .call('app.bsky.feed.getActorLikes', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedGetActorLikes.toKnownErr(e)\n      })\n  }\n\n  getAuthorFeed(\n    params?: AppBskyFeedGetAuthorFeed.QueryParams,\n    opts?: AppBskyFeedGetAuthorFeed.CallOptions,\n  ): Promise<AppBskyFeedGetAuthorFeed.Response> {\n    return this._client\n      .call('app.bsky.feed.getAuthorFeed', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedGetAuthorFeed.toKnownErr(e)\n      })\n  }\n\n  getFeed(\n    params?: AppBskyFeedGetFeed.QueryParams,\n    opts?: AppBskyFeedGetFeed.CallOptions,\n  ): Promise<AppBskyFeedGetFeed.Response> {\n    return this._client\n      .call('app.bsky.feed.getFeed', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedGetFeed.toKnownErr(e)\n      })\n  }\n\n  getFeedGenerator(\n    params?: AppBskyFeedGetFeedGenerator.QueryParams,\n    opts?: AppBskyFeedGetFeedGenerator.CallOptions,\n  ): Promise<AppBskyFeedGetFeedGenerator.Response> {\n    return this._client.call(\n      'app.bsky.feed.getFeedGenerator',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getFeedGenerators(\n    params?: AppBskyFeedGetFeedGenerators.QueryParams,\n    opts?: AppBskyFeedGetFeedGenerators.CallOptions,\n  ): Promise<AppBskyFeedGetFeedGenerators.Response> {\n    return this._client.call(\n      'app.bsky.feed.getFeedGenerators',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getFeedSkeleton(\n    params?: AppBskyFeedGetFeedSkeleton.QueryParams,\n    opts?: AppBskyFeedGetFeedSkeleton.CallOptions,\n  ): Promise<AppBskyFeedGetFeedSkeleton.Response> {\n    return this._client\n      .call('app.bsky.feed.getFeedSkeleton', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedGetFeedSkeleton.toKnownErr(e)\n      })\n  }\n\n  getLikes(\n    params?: AppBskyFeedGetLikes.QueryParams,\n    opts?: AppBskyFeedGetLikes.CallOptions,\n  ): Promise<AppBskyFeedGetLikes.Response> {\n    return this._client.call('app.bsky.feed.getLikes', params, undefined, opts)\n  }\n\n  getListFeed(\n    params?: AppBskyFeedGetListFeed.QueryParams,\n    opts?: AppBskyFeedGetListFeed.CallOptions,\n  ): Promise<AppBskyFeedGetListFeed.Response> {\n    return this._client\n      .call('app.bsky.feed.getListFeed', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedGetListFeed.toKnownErr(e)\n      })\n  }\n\n  getPostThread(\n    params?: AppBskyFeedGetPostThread.QueryParams,\n    opts?: AppBskyFeedGetPostThread.CallOptions,\n  ): Promise<AppBskyFeedGetPostThread.Response> {\n    return this._client\n      .call('app.bsky.feed.getPostThread', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedGetPostThread.toKnownErr(e)\n      })\n  }\n\n  getPosts(\n    params?: AppBskyFeedGetPosts.QueryParams,\n    opts?: AppBskyFeedGetPosts.CallOptions,\n  ): Promise<AppBskyFeedGetPosts.Response> {\n    return this._client.call('app.bsky.feed.getPosts', params, undefined, opts)\n  }\n\n  getQuotes(\n    params?: AppBskyFeedGetQuotes.QueryParams,\n    opts?: AppBskyFeedGetQuotes.CallOptions,\n  ): Promise<AppBskyFeedGetQuotes.Response> {\n    return this._client.call('app.bsky.feed.getQuotes', params, undefined, opts)\n  }\n\n  getRepostedBy(\n    params?: AppBskyFeedGetRepostedBy.QueryParams,\n    opts?: AppBskyFeedGetRepostedBy.CallOptions,\n  ): Promise<AppBskyFeedGetRepostedBy.Response> {\n    return this._client.call(\n      'app.bsky.feed.getRepostedBy',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getSuggestedFeeds(\n    params?: AppBskyFeedGetSuggestedFeeds.QueryParams,\n    opts?: AppBskyFeedGetSuggestedFeeds.CallOptions,\n  ): Promise<AppBskyFeedGetSuggestedFeeds.Response> {\n    return this._client.call(\n      'app.bsky.feed.getSuggestedFeeds',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getTimeline(\n    params?: AppBskyFeedGetTimeline.QueryParams,\n    opts?: AppBskyFeedGetTimeline.CallOptions,\n  ): Promise<AppBskyFeedGetTimeline.Response> {\n    return this._client.call(\n      'app.bsky.feed.getTimeline',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  searchPosts(\n    params?: AppBskyFeedSearchPosts.QueryParams,\n    opts?: AppBskyFeedSearchPosts.CallOptions,\n  ): Promise<AppBskyFeedSearchPosts.Response> {\n    return this._client\n      .call('app.bsky.feed.searchPosts', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedSearchPosts.toKnownErr(e)\n      })\n  }\n\n  sendInteractions(\n    data?: AppBskyFeedSendInteractions.InputSchema,\n    opts?: AppBskyFeedSendInteractions.CallOptions,\n  ): Promise<AppBskyFeedSendInteractions.Response> {\n    return this._client.call(\n      'app.bsky.feed.sendInteractions',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n}\n\nexport class GeneratorRecord {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  async list(\n    params: Omit<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyFeedGenerator.Record }[]\n  }> {\n    const res = await this._client.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.feed.generator',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: Omit<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{ uri: string; cid: string; value: AppBskyFeedGenerator.Record }> {\n    const res = await this._client.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.feed.generator',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: Omit<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: AppBskyFeedGenerator.Record,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    record.$type = 'app.bsky.feed.generator'\n    const res = await this._client.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      { collection: 'app.bsky.feed.generator', ...params, record },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: Omit<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._client.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.feed.generator', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class LikeRecord {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  async list(\n    params: Omit<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyFeedLike.Record }[]\n  }> {\n    const res = await this._client.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.feed.like',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: Omit<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{ uri: string; cid: string; value: AppBskyFeedLike.Record }> {\n    const res = await this._client.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.feed.like',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: Omit<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: AppBskyFeedLike.Record,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    record.$type = 'app.bsky.feed.like'\n    const res = await this._client.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      { collection: 'app.bsky.feed.like', ...params, record },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: Omit<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._client.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.feed.like', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class PostRecord {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  async list(\n    params: Omit<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyFeedPost.Record }[]\n  }> {\n    const res = await this._client.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.feed.post',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: Omit<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{ uri: string; cid: string; value: AppBskyFeedPost.Record }> {\n    const res = await this._client.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.feed.post',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: Omit<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: AppBskyFeedPost.Record,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    record.$type = 'app.bsky.feed.post'\n    const res = await this._client.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      { collection: 'app.bsky.feed.post', ...params, record },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: Omit<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._client.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.feed.post', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class PostgateRecord {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  async list(\n    params: Omit<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyFeedPostgate.Record }[]\n  }> {\n    const res = await this._client.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.feed.postgate',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: Omit<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{ uri: string; cid: string; value: AppBskyFeedPostgate.Record }> {\n    const res = await this._client.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.feed.postgate',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: Omit<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: AppBskyFeedPostgate.Record,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    record.$type = 'app.bsky.feed.postgate'\n    const res = await this._client.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      { collection: 'app.bsky.feed.postgate', ...params, record },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: Omit<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._client.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.feed.postgate', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class RepostRecord {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  async list(\n    params: Omit<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyFeedRepost.Record }[]\n  }> {\n    const res = await this._client.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.feed.repost',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: Omit<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{ uri: string; cid: string; value: AppBskyFeedRepost.Record }> {\n    const res = await this._client.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.feed.repost',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: Omit<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: AppBskyFeedRepost.Record,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    record.$type = 'app.bsky.feed.repost'\n    const res = await this._client.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      { collection: 'app.bsky.feed.repost', ...params, record },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: Omit<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._client.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.feed.repost', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class ThreadgateRecord {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  async list(\n    params: Omit<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyFeedThreadgate.Record }[]\n  }> {\n    const res = await this._client.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.feed.threadgate',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: Omit<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{\n    uri: string\n    cid: string\n    value: AppBskyFeedThreadgate.Record\n  }> {\n    const res = await this._client.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.feed.threadgate',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: Omit<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: AppBskyFeedThreadgate.Record,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    record.$type = 'app.bsky.feed.threadgate'\n    const res = await this._client.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      { collection: 'app.bsky.feed.threadgate', ...params, record },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: Omit<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._client.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.feed.threadgate', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class AppBskyGraphNS {\n  _client: XrpcClient\n  block: BlockRecord\n  follow: FollowRecord\n  list: ListRecord\n  listblock: ListblockRecord\n  listitem: ListitemRecord\n  starterpack: StarterpackRecord\n\n  constructor(client: XrpcClient) {\n    this._client = client\n    this.block = new BlockRecord(client)\n    this.follow = new FollowRecord(client)\n    this.list = new ListRecord(client)\n    this.listblock = new ListblockRecord(client)\n    this.listitem = new ListitemRecord(client)\n    this.starterpack = new StarterpackRecord(client)\n  }\n\n  getActorStarterPacks(\n    params?: AppBskyGraphGetActorStarterPacks.QueryParams,\n    opts?: AppBskyGraphGetActorStarterPacks.CallOptions,\n  ): Promise<AppBskyGraphGetActorStarterPacks.Response> {\n    return this._client.call(\n      'app.bsky.graph.getActorStarterPacks',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getBlocks(\n    params?: AppBskyGraphGetBlocks.QueryParams,\n    opts?: AppBskyGraphGetBlocks.CallOptions,\n  ): Promise<AppBskyGraphGetBlocks.Response> {\n    return this._client.call(\n      'app.bsky.graph.getBlocks',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getFollowers(\n    params?: AppBskyGraphGetFollowers.QueryParams,\n    opts?: AppBskyGraphGetFollowers.CallOptions,\n  ): Promise<AppBskyGraphGetFollowers.Response> {\n    return this._client.call(\n      'app.bsky.graph.getFollowers',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getFollows(\n    params?: AppBskyGraphGetFollows.QueryParams,\n    opts?: AppBskyGraphGetFollows.CallOptions,\n  ): Promise<AppBskyGraphGetFollows.Response> {\n    return this._client.call(\n      'app.bsky.graph.getFollows',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getKnownFollowers(\n    params?: AppBskyGraphGetKnownFollowers.QueryParams,\n    opts?: AppBskyGraphGetKnownFollowers.CallOptions,\n  ): Promise<AppBskyGraphGetKnownFollowers.Response> {\n    return this._client.call(\n      'app.bsky.graph.getKnownFollowers',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getList(\n    params?: AppBskyGraphGetList.QueryParams,\n    opts?: AppBskyGraphGetList.CallOptions,\n  ): Promise<AppBskyGraphGetList.Response> {\n    return this._client.call('app.bsky.graph.getList', params, undefined, opts)\n  }\n\n  getListBlocks(\n    params?: AppBskyGraphGetListBlocks.QueryParams,\n    opts?: AppBskyGraphGetListBlocks.CallOptions,\n  ): Promise<AppBskyGraphGetListBlocks.Response> {\n    return this._client.call(\n      'app.bsky.graph.getListBlocks',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getListMutes(\n    params?: AppBskyGraphGetListMutes.QueryParams,\n    opts?: AppBskyGraphGetListMutes.CallOptions,\n  ): Promise<AppBskyGraphGetListMutes.Response> {\n    return this._client.call(\n      'app.bsky.graph.getListMutes',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getLists(\n    params?: AppBskyGraphGetLists.QueryParams,\n    opts?: AppBskyGraphGetLists.CallOptions,\n  ): Promise<AppBskyGraphGetLists.Response> {\n    return this._client.call('app.bsky.graph.getLists', params, undefined, opts)\n  }\n\n  getMutes(\n    params?: AppBskyGraphGetMutes.QueryParams,\n    opts?: AppBskyGraphGetMutes.CallOptions,\n  ): Promise<AppBskyGraphGetMutes.Response> {\n    return this._client.call('app.bsky.graph.getMutes', params, undefined, opts)\n  }\n\n  getRelationships(\n    params?: AppBskyGraphGetRelationships.QueryParams,\n    opts?: AppBskyGraphGetRelationships.CallOptions,\n  ): Promise<AppBskyGraphGetRelationships.Response> {\n    return this._client\n      .call('app.bsky.graph.getRelationships', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyGraphGetRelationships.toKnownErr(e)\n      })\n  }\n\n  getStarterPack(\n    params?: AppBskyGraphGetStarterPack.QueryParams,\n    opts?: AppBskyGraphGetStarterPack.CallOptions,\n  ): Promise<AppBskyGraphGetStarterPack.Response> {\n    return this._client.call(\n      'app.bsky.graph.getStarterPack',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getStarterPacks(\n    params?: AppBskyGraphGetStarterPacks.QueryParams,\n    opts?: AppBskyGraphGetStarterPacks.CallOptions,\n  ): Promise<AppBskyGraphGetStarterPacks.Response> {\n    return this._client.call(\n      'app.bsky.graph.getStarterPacks',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getSuggestedFollowsByActor(\n    params?: AppBskyGraphGetSuggestedFollowsByActor.QueryParams,\n    opts?: AppBskyGraphGetSuggestedFollowsByActor.CallOptions,\n  ): Promise<AppBskyGraphGetSuggestedFollowsByActor.Response> {\n    return this._client.call(\n      'app.bsky.graph.getSuggestedFollowsByActor',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  muteActor(\n    data?: AppBskyGraphMuteActor.InputSchema,\n    opts?: AppBskyGraphMuteActor.CallOptions,\n  ): Promise<AppBskyGraphMuteActor.Response> {\n    return this._client.call('app.bsky.graph.muteActor', opts?.qp, data, opts)\n  }\n\n  muteActorList(\n    data?: AppBskyGraphMuteActorList.InputSchema,\n    opts?: AppBskyGraphMuteActorList.CallOptions,\n  ): Promise<AppBskyGraphMuteActorList.Response> {\n    return this._client.call(\n      'app.bsky.graph.muteActorList',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  muteThread(\n    data?: AppBskyGraphMuteThread.InputSchema,\n    opts?: AppBskyGraphMuteThread.CallOptions,\n  ): Promise<AppBskyGraphMuteThread.Response> {\n    return this._client.call('app.bsky.graph.muteThread', opts?.qp, data, opts)\n  }\n\n  searchStarterPacks(\n    params?: AppBskyGraphSearchStarterPacks.QueryParams,\n    opts?: AppBskyGraphSearchStarterPacks.CallOptions,\n  ): Promise<AppBskyGraphSearchStarterPacks.Response> {\n    return this._client.call(\n      'app.bsky.graph.searchStarterPacks',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  unmuteActor(\n    data?: AppBskyGraphUnmuteActor.InputSchema,\n    opts?: AppBskyGraphUnmuteActor.CallOptions,\n  ): Promise<AppBskyGraphUnmuteActor.Response> {\n    return this._client.call('app.bsky.graph.unmuteActor', opts?.qp, data, opts)\n  }\n\n  unmuteActorList(\n    data?: AppBskyGraphUnmuteActorList.InputSchema,\n    opts?: AppBskyGraphUnmuteActorList.CallOptions,\n  ): Promise<AppBskyGraphUnmuteActorList.Response> {\n    return this._client.call(\n      'app.bsky.graph.unmuteActorList',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  unmuteThread(\n    data?: AppBskyGraphUnmuteThread.InputSchema,\n    opts?: AppBskyGraphUnmuteThread.CallOptions,\n  ): Promise<AppBskyGraphUnmuteThread.Response> {\n    return this._client.call(\n      'app.bsky.graph.unmuteThread',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n}\n\nexport class BlockRecord {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  async list(\n    params: Omit<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyGraphBlock.Record }[]\n  }> {\n    const res = await this._client.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.graph.block',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: Omit<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{ uri: string; cid: string; value: AppBskyGraphBlock.Record }> {\n    const res = await this._client.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.graph.block',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: Omit<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: AppBskyGraphBlock.Record,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    record.$type = 'app.bsky.graph.block'\n    const res = await this._client.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      { collection: 'app.bsky.graph.block', ...params, record },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: Omit<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._client.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.graph.block', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class FollowRecord {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  async list(\n    params: Omit<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyGraphFollow.Record }[]\n  }> {\n    const res = await this._client.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.graph.follow',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: Omit<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{ uri: string; cid: string; value: AppBskyGraphFollow.Record }> {\n    const res = await this._client.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.graph.follow',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: Omit<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: AppBskyGraphFollow.Record,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    record.$type = 'app.bsky.graph.follow'\n    const res = await this._client.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      { collection: 'app.bsky.graph.follow', ...params, record },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: Omit<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._client.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.graph.follow', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class ListRecord {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  async list(\n    params: Omit<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyGraphList.Record }[]\n  }> {\n    const res = await this._client.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.graph.list',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: Omit<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{ uri: string; cid: string; value: AppBskyGraphList.Record }> {\n    const res = await this._client.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.graph.list',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: Omit<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: AppBskyGraphList.Record,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    record.$type = 'app.bsky.graph.list'\n    const res = await this._client.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      { collection: 'app.bsky.graph.list', ...params, record },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: Omit<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._client.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.graph.list', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class ListblockRecord {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  async list(\n    params: Omit<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyGraphListblock.Record }[]\n  }> {\n    const res = await this._client.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.graph.listblock',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: Omit<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{\n    uri: string\n    cid: string\n    value: AppBskyGraphListblock.Record\n  }> {\n    const res = await this._client.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.graph.listblock',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: Omit<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: AppBskyGraphListblock.Record,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    record.$type = 'app.bsky.graph.listblock'\n    const res = await this._client.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      { collection: 'app.bsky.graph.listblock', ...params, record },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: Omit<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._client.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.graph.listblock', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class ListitemRecord {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  async list(\n    params: Omit<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyGraphListitem.Record }[]\n  }> {\n    const res = await this._client.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.graph.listitem',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: Omit<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{ uri: string; cid: string; value: AppBskyGraphListitem.Record }> {\n    const res = await this._client.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.graph.listitem',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: Omit<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: AppBskyGraphListitem.Record,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    record.$type = 'app.bsky.graph.listitem'\n    const res = await this._client.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      { collection: 'app.bsky.graph.listitem', ...params, record },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: Omit<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._client.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.graph.listitem', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class StarterpackRecord {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  async list(\n    params: Omit<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyGraphStarterpack.Record }[]\n  }> {\n    const res = await this._client.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.graph.starterpack',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: Omit<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{\n    uri: string\n    cid: string\n    value: AppBskyGraphStarterpack.Record\n  }> {\n    const res = await this._client.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.graph.starterpack',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: Omit<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: AppBskyGraphStarterpack.Record,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    record.$type = 'app.bsky.graph.starterpack'\n    const res = await this._client.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      { collection: 'app.bsky.graph.starterpack', ...params, record },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: Omit<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._client.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.graph.starterpack', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class AppBskyLabelerNS {\n  _client: XrpcClient\n  service: ServiceRecord\n\n  constructor(client: XrpcClient) {\n    this._client = client\n    this.service = new ServiceRecord(client)\n  }\n\n  getServices(\n    params?: AppBskyLabelerGetServices.QueryParams,\n    opts?: AppBskyLabelerGetServices.CallOptions,\n  ): Promise<AppBskyLabelerGetServices.Response> {\n    return this._client.call(\n      'app.bsky.labeler.getServices',\n      params,\n      undefined,\n      opts,\n    )\n  }\n}\n\nexport class ServiceRecord {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  async list(\n    params: Omit<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyLabelerService.Record }[]\n  }> {\n    const res = await this._client.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.labeler.service',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: Omit<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{\n    uri: string\n    cid: string\n    value: AppBskyLabelerService.Record\n  }> {\n    const res = await this._client.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.labeler.service',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: Omit<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: AppBskyLabelerService.Record,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    record.$type = 'app.bsky.labeler.service'\n    const res = await this._client.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      {\n        collection: 'app.bsky.labeler.service',\n        rkey: 'self',\n        ...params,\n        record,\n      },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: Omit<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._client.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.labeler.service', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class AppBskyNotificationNS {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  getUnreadCount(\n    params?: AppBskyNotificationGetUnreadCount.QueryParams,\n    opts?: AppBskyNotificationGetUnreadCount.CallOptions,\n  ): Promise<AppBskyNotificationGetUnreadCount.Response> {\n    return this._client.call(\n      'app.bsky.notification.getUnreadCount',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  listNotifications(\n    params?: AppBskyNotificationListNotifications.QueryParams,\n    opts?: AppBskyNotificationListNotifications.CallOptions,\n  ): Promise<AppBskyNotificationListNotifications.Response> {\n    return this._client.call(\n      'app.bsky.notification.listNotifications',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  putPreferences(\n    data?: AppBskyNotificationPutPreferences.InputSchema,\n    opts?: AppBskyNotificationPutPreferences.CallOptions,\n  ): Promise<AppBskyNotificationPutPreferences.Response> {\n    return this._client.call(\n      'app.bsky.notification.putPreferences',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  registerPush(\n    data?: AppBskyNotificationRegisterPush.InputSchema,\n    opts?: AppBskyNotificationRegisterPush.CallOptions,\n  ): Promise<AppBskyNotificationRegisterPush.Response> {\n    return this._client.call(\n      'app.bsky.notification.registerPush',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  updateSeen(\n    data?: AppBskyNotificationUpdateSeen.InputSchema,\n    opts?: AppBskyNotificationUpdateSeen.CallOptions,\n  ): Promise<AppBskyNotificationUpdateSeen.Response> {\n    return this._client.call(\n      'app.bsky.notification.updateSeen',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n}\n\nexport class AppBskyRichtextNS {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n}\n\nexport class AppBskyUnspeccedNS {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  getConfig(\n    params?: AppBskyUnspeccedGetConfig.QueryParams,\n    opts?: AppBskyUnspeccedGetConfig.CallOptions,\n  ): Promise<AppBskyUnspeccedGetConfig.Response> {\n    return this._client.call(\n      'app.bsky.unspecced.getConfig',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getPopularFeedGenerators(\n    params?: AppBskyUnspeccedGetPopularFeedGenerators.QueryParams,\n    opts?: AppBskyUnspeccedGetPopularFeedGenerators.CallOptions,\n  ): Promise<AppBskyUnspeccedGetPopularFeedGenerators.Response> {\n    return this._client.call(\n      'app.bsky.unspecced.getPopularFeedGenerators',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getSuggestionsSkeleton(\n    params?: AppBskyUnspeccedGetSuggestionsSkeleton.QueryParams,\n    opts?: AppBskyUnspeccedGetSuggestionsSkeleton.CallOptions,\n  ): Promise<AppBskyUnspeccedGetSuggestionsSkeleton.Response> {\n    return this._client.call(\n      'app.bsky.unspecced.getSuggestionsSkeleton',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getTaggedSuggestions(\n    params?: AppBskyUnspeccedGetTaggedSuggestions.QueryParams,\n    opts?: AppBskyUnspeccedGetTaggedSuggestions.CallOptions,\n  ): Promise<AppBskyUnspeccedGetTaggedSuggestions.Response> {\n    return this._client.call(\n      'app.bsky.unspecced.getTaggedSuggestions',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getTrendingTopics(\n    params?: AppBskyUnspeccedGetTrendingTopics.QueryParams,\n    opts?: AppBskyUnspeccedGetTrendingTopics.CallOptions,\n  ): Promise<AppBskyUnspeccedGetTrendingTopics.Response> {\n    return this._client.call(\n      'app.bsky.unspecced.getTrendingTopics',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  searchActorsSkeleton(\n    params?: AppBskyUnspeccedSearchActorsSkeleton.QueryParams,\n    opts?: AppBskyUnspeccedSearchActorsSkeleton.CallOptions,\n  ): Promise<AppBskyUnspeccedSearchActorsSkeleton.Response> {\n    return this._client\n      .call('app.bsky.unspecced.searchActorsSkeleton', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyUnspeccedSearchActorsSkeleton.toKnownErr(e)\n      })\n  }\n\n  searchPostsSkeleton(\n    params?: AppBskyUnspeccedSearchPostsSkeleton.QueryParams,\n    opts?: AppBskyUnspeccedSearchPostsSkeleton.CallOptions,\n  ): Promise<AppBskyUnspeccedSearchPostsSkeleton.Response> {\n    return this._client\n      .call('app.bsky.unspecced.searchPostsSkeleton', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyUnspeccedSearchPostsSkeleton.toKnownErr(e)\n      })\n  }\n\n  searchStarterPacksSkeleton(\n    params?: AppBskyUnspeccedSearchStarterPacksSkeleton.QueryParams,\n    opts?: AppBskyUnspeccedSearchStarterPacksSkeleton.CallOptions,\n  ): Promise<AppBskyUnspeccedSearchStarterPacksSkeleton.Response> {\n    return this._client\n      .call(\n        'app.bsky.unspecced.searchStarterPacksSkeleton',\n        params,\n        undefined,\n        opts,\n      )\n      .catch((e) => {\n        throw AppBskyUnspeccedSearchStarterPacksSkeleton.toKnownErr(e)\n      })\n  }\n}\n\nexport class AppBskyVideoNS {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  getJobStatus(\n    params?: AppBskyVideoGetJobStatus.QueryParams,\n    opts?: AppBskyVideoGetJobStatus.CallOptions,\n  ): Promise<AppBskyVideoGetJobStatus.Response> {\n    return this._client.call(\n      'app.bsky.video.getJobStatus',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getUploadLimits(\n    params?: AppBskyVideoGetUploadLimits.QueryParams,\n    opts?: AppBskyVideoGetUploadLimits.CallOptions,\n  ): Promise<AppBskyVideoGetUploadLimits.Response> {\n    return this._client.call(\n      'app.bsky.video.getUploadLimits',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  uploadVideo(\n    data?: AppBskyVideoUploadVideo.InputSchema,\n    opts?: AppBskyVideoUploadVideo.CallOptions,\n  ): Promise<AppBskyVideoUploadVideo.Response> {\n    return this._client.call('app.bsky.video.uploadVideo', opts?.qp, data, opts)\n  }\n}\n\nexport class ChatNS {\n  _client: XrpcClient\n  bsky: ChatBskyNS\n\n  constructor(client: XrpcClient) {\n    this._client = client\n    this.bsky = new ChatBskyNS(client)\n  }\n}\n\nexport class ChatBskyNS {\n  _client: XrpcClient\n  actor: ChatBskyActorNS\n  convo: ChatBskyConvoNS\n  moderation: ChatBskyModerationNS\n\n  constructor(client: XrpcClient) {\n    this._client = client\n    this.actor = new ChatBskyActorNS(client)\n    this.convo = new ChatBskyConvoNS(client)\n    this.moderation = new ChatBskyModerationNS(client)\n  }\n}\n\nexport class ChatBskyActorNS {\n  _client: XrpcClient\n  declaration: DeclarationRecord\n\n  constructor(client: XrpcClient) {\n    this._client = client\n    this.declaration = new DeclarationRecord(client)\n  }\n\n  deleteAccount(\n    data?: ChatBskyActorDeleteAccount.InputSchema,\n    opts?: ChatBskyActorDeleteAccount.CallOptions,\n  ): Promise<ChatBskyActorDeleteAccount.Response> {\n    return this._client.call(\n      'chat.bsky.actor.deleteAccount',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  exportAccountData(\n    params?: ChatBskyActorExportAccountData.QueryParams,\n    opts?: ChatBskyActorExportAccountData.CallOptions,\n  ): Promise<ChatBskyActorExportAccountData.Response> {\n    return this._client.call(\n      'chat.bsky.actor.exportAccountData',\n      params,\n      undefined,\n      opts,\n    )\n  }\n}\n\nexport class DeclarationRecord {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  async list(\n    params: Omit<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: ChatBskyActorDeclaration.Record }[]\n  }> {\n    const res = await this._client.call('com.atproto.repo.listRecords', {\n      collection: 'chat.bsky.actor.declaration',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: Omit<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{\n    uri: string\n    cid: string\n    value: ChatBskyActorDeclaration.Record\n  }> {\n    const res = await this._client.call('com.atproto.repo.getRecord', {\n      collection: 'chat.bsky.actor.declaration',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: Omit<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: ChatBskyActorDeclaration.Record,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    record.$type = 'chat.bsky.actor.declaration'\n    const res = await this._client.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      {\n        collection: 'chat.bsky.actor.declaration',\n        rkey: 'self',\n        ...params,\n        record,\n      },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: Omit<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._client.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'chat.bsky.actor.declaration', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class ChatBskyConvoNS {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  deleteMessageForSelf(\n    data?: ChatBskyConvoDeleteMessageForSelf.InputSchema,\n    opts?: ChatBskyConvoDeleteMessageForSelf.CallOptions,\n  ): Promise<ChatBskyConvoDeleteMessageForSelf.Response> {\n    return this._client.call(\n      'chat.bsky.convo.deleteMessageForSelf',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  getConvo(\n    params?: ChatBskyConvoGetConvo.QueryParams,\n    opts?: ChatBskyConvoGetConvo.CallOptions,\n  ): Promise<ChatBskyConvoGetConvo.Response> {\n    return this._client.call(\n      'chat.bsky.convo.getConvo',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getConvoForMembers(\n    params?: ChatBskyConvoGetConvoForMembers.QueryParams,\n    opts?: ChatBskyConvoGetConvoForMembers.CallOptions,\n  ): Promise<ChatBskyConvoGetConvoForMembers.Response> {\n    return this._client.call(\n      'chat.bsky.convo.getConvoForMembers',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getLog(\n    params?: ChatBskyConvoGetLog.QueryParams,\n    opts?: ChatBskyConvoGetLog.CallOptions,\n  ): Promise<ChatBskyConvoGetLog.Response> {\n    return this._client.call('chat.bsky.convo.getLog', params, undefined, opts)\n  }\n\n  getMessages(\n    params?: ChatBskyConvoGetMessages.QueryParams,\n    opts?: ChatBskyConvoGetMessages.CallOptions,\n  ): Promise<ChatBskyConvoGetMessages.Response> {\n    return this._client.call(\n      'chat.bsky.convo.getMessages',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  leaveConvo(\n    data?: ChatBskyConvoLeaveConvo.InputSchema,\n    opts?: ChatBskyConvoLeaveConvo.CallOptions,\n  ): Promise<ChatBskyConvoLeaveConvo.Response> {\n    return this._client.call('chat.bsky.convo.leaveConvo', opts?.qp, data, opts)\n  }\n\n  listConvos(\n    params?: ChatBskyConvoListConvos.QueryParams,\n    opts?: ChatBskyConvoListConvos.CallOptions,\n  ): Promise<ChatBskyConvoListConvos.Response> {\n    return this._client.call(\n      'chat.bsky.convo.listConvos',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  muteConvo(\n    data?: ChatBskyConvoMuteConvo.InputSchema,\n    opts?: ChatBskyConvoMuteConvo.CallOptions,\n  ): Promise<ChatBskyConvoMuteConvo.Response> {\n    return this._client.call('chat.bsky.convo.muteConvo', opts?.qp, data, opts)\n  }\n\n  sendMessage(\n    data?: ChatBskyConvoSendMessage.InputSchema,\n    opts?: ChatBskyConvoSendMessage.CallOptions,\n  ): Promise<ChatBskyConvoSendMessage.Response> {\n    return this._client.call(\n      'chat.bsky.convo.sendMessage',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  sendMessageBatch(\n    data?: ChatBskyConvoSendMessageBatch.InputSchema,\n    opts?: ChatBskyConvoSendMessageBatch.CallOptions,\n  ): Promise<ChatBskyConvoSendMessageBatch.Response> {\n    return this._client.call(\n      'chat.bsky.convo.sendMessageBatch',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  unmuteConvo(\n    data?: ChatBskyConvoUnmuteConvo.InputSchema,\n    opts?: ChatBskyConvoUnmuteConvo.CallOptions,\n  ): Promise<ChatBskyConvoUnmuteConvo.Response> {\n    return this._client.call(\n      'chat.bsky.convo.unmuteConvo',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  updateRead(\n    data?: ChatBskyConvoUpdateRead.InputSchema,\n    opts?: ChatBskyConvoUpdateRead.CallOptions,\n  ): Promise<ChatBskyConvoUpdateRead.Response> {\n    return this._client.call('chat.bsky.convo.updateRead', opts?.qp, data, opts)\n  }\n}\n\nexport class ChatBskyModerationNS {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  getActorMetadata(\n    params?: ChatBskyModerationGetActorMetadata.QueryParams,\n    opts?: ChatBskyModerationGetActorMetadata.CallOptions,\n  ): Promise<ChatBskyModerationGetActorMetadata.Response> {\n    return this._client.call(\n      'chat.bsky.moderation.getActorMetadata',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getMessageContext(\n    params?: ChatBskyModerationGetMessageContext.QueryParams,\n    opts?: ChatBskyModerationGetMessageContext.CallOptions,\n  ): Promise<ChatBskyModerationGetMessageContext.Response> {\n    return this._client.call(\n      'chat.bsky.moderation.getMessageContext',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  updateActorAccess(\n    data?: ChatBskyModerationUpdateActorAccess.InputSchema,\n    opts?: ChatBskyModerationUpdateActorAccess.CallOptions,\n  ): Promise<ChatBskyModerationUpdateActorAccess.Response> {\n    return this._client.call(\n      'chat.bsky.moderation.updateActorAccess',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n}\n\nexport class ToolsNS {\n  _client: XrpcClient\n  ozone: ToolsOzoneNS\n\n  constructor(client: XrpcClient) {\n    this._client = client\n    this.ozone = new ToolsOzoneNS(client)\n  }\n}\n\nexport class ToolsOzoneNS {\n  _client: XrpcClient\n  communication: ToolsOzoneCommunicationNS\n  moderation: ToolsOzoneModerationNS\n  server: ToolsOzoneServerNS\n  set: ToolsOzoneSetNS\n  setting: ToolsOzoneSettingNS\n  signature: ToolsOzoneSignatureNS\n  team: ToolsOzoneTeamNS\n\n  constructor(client: XrpcClient) {\n    this._client = client\n    this.communication = new ToolsOzoneCommunicationNS(client)\n    this.moderation = new ToolsOzoneModerationNS(client)\n    this.server = new ToolsOzoneServerNS(client)\n    this.set = new ToolsOzoneSetNS(client)\n    this.setting = new ToolsOzoneSettingNS(client)\n    this.signature = new ToolsOzoneSignatureNS(client)\n    this.team = new ToolsOzoneTeamNS(client)\n  }\n}\n\nexport class ToolsOzoneCommunicationNS {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  createTemplate(\n    data?: ToolsOzoneCommunicationCreateTemplate.InputSchema,\n    opts?: ToolsOzoneCommunicationCreateTemplate.CallOptions,\n  ): Promise<ToolsOzoneCommunicationCreateTemplate.Response> {\n    return this._client\n      .call('tools.ozone.communication.createTemplate', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ToolsOzoneCommunicationCreateTemplate.toKnownErr(e)\n      })\n  }\n\n  deleteTemplate(\n    data?: ToolsOzoneCommunicationDeleteTemplate.InputSchema,\n    opts?: ToolsOzoneCommunicationDeleteTemplate.CallOptions,\n  ): Promise<ToolsOzoneCommunicationDeleteTemplate.Response> {\n    return this._client.call(\n      'tools.ozone.communication.deleteTemplate',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  listTemplates(\n    params?: ToolsOzoneCommunicationListTemplates.QueryParams,\n    opts?: ToolsOzoneCommunicationListTemplates.CallOptions,\n  ): Promise<ToolsOzoneCommunicationListTemplates.Response> {\n    return this._client.call(\n      'tools.ozone.communication.listTemplates',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  updateTemplate(\n    data?: ToolsOzoneCommunicationUpdateTemplate.InputSchema,\n    opts?: ToolsOzoneCommunicationUpdateTemplate.CallOptions,\n  ): Promise<ToolsOzoneCommunicationUpdateTemplate.Response> {\n    return this._client\n      .call('tools.ozone.communication.updateTemplate', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ToolsOzoneCommunicationUpdateTemplate.toKnownErr(e)\n      })\n  }\n}\n\nexport class ToolsOzoneModerationNS {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  emitEvent(\n    data?: ToolsOzoneModerationEmitEvent.InputSchema,\n    opts?: ToolsOzoneModerationEmitEvent.CallOptions,\n  ): Promise<ToolsOzoneModerationEmitEvent.Response> {\n    return this._client\n      .call('tools.ozone.moderation.emitEvent', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ToolsOzoneModerationEmitEvent.toKnownErr(e)\n      })\n  }\n\n  getEvent(\n    params?: ToolsOzoneModerationGetEvent.QueryParams,\n    opts?: ToolsOzoneModerationGetEvent.CallOptions,\n  ): Promise<ToolsOzoneModerationGetEvent.Response> {\n    return this._client.call(\n      'tools.ozone.moderation.getEvent',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getRecord(\n    params?: ToolsOzoneModerationGetRecord.QueryParams,\n    opts?: ToolsOzoneModerationGetRecord.CallOptions,\n  ): Promise<ToolsOzoneModerationGetRecord.Response> {\n    return this._client\n      .call('tools.ozone.moderation.getRecord', params, undefined, opts)\n      .catch((e) => {\n        throw ToolsOzoneModerationGetRecord.toKnownErr(e)\n      })\n  }\n\n  getRecords(\n    params?: ToolsOzoneModerationGetRecords.QueryParams,\n    opts?: ToolsOzoneModerationGetRecords.CallOptions,\n  ): Promise<ToolsOzoneModerationGetRecords.Response> {\n    return this._client.call(\n      'tools.ozone.moderation.getRecords',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  getRepo(\n    params?: ToolsOzoneModerationGetRepo.QueryParams,\n    opts?: ToolsOzoneModerationGetRepo.CallOptions,\n  ): Promise<ToolsOzoneModerationGetRepo.Response> {\n    return this._client\n      .call('tools.ozone.moderation.getRepo', params, undefined, opts)\n      .catch((e) => {\n        throw ToolsOzoneModerationGetRepo.toKnownErr(e)\n      })\n  }\n\n  getRepos(\n    params?: ToolsOzoneModerationGetRepos.QueryParams,\n    opts?: ToolsOzoneModerationGetRepos.CallOptions,\n  ): Promise<ToolsOzoneModerationGetRepos.Response> {\n    return this._client.call(\n      'tools.ozone.moderation.getRepos',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  queryEvents(\n    params?: ToolsOzoneModerationQueryEvents.QueryParams,\n    opts?: ToolsOzoneModerationQueryEvents.CallOptions,\n  ): Promise<ToolsOzoneModerationQueryEvents.Response> {\n    return this._client.call(\n      'tools.ozone.moderation.queryEvents',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  queryStatuses(\n    params?: ToolsOzoneModerationQueryStatuses.QueryParams,\n    opts?: ToolsOzoneModerationQueryStatuses.CallOptions,\n  ): Promise<ToolsOzoneModerationQueryStatuses.Response> {\n    return this._client.call(\n      'tools.ozone.moderation.queryStatuses',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  searchRepos(\n    params?: ToolsOzoneModerationSearchRepos.QueryParams,\n    opts?: ToolsOzoneModerationSearchRepos.CallOptions,\n  ): Promise<ToolsOzoneModerationSearchRepos.Response> {\n    return this._client.call(\n      'tools.ozone.moderation.searchRepos',\n      params,\n      undefined,\n      opts,\n    )\n  }\n}\n\nexport class ToolsOzoneServerNS {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  getConfig(\n    params?: ToolsOzoneServerGetConfig.QueryParams,\n    opts?: ToolsOzoneServerGetConfig.CallOptions,\n  ): Promise<ToolsOzoneServerGetConfig.Response> {\n    return this._client.call(\n      'tools.ozone.server.getConfig',\n      params,\n      undefined,\n      opts,\n    )\n  }\n}\n\nexport class ToolsOzoneSetNS {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  addValues(\n    data?: ToolsOzoneSetAddValues.InputSchema,\n    opts?: ToolsOzoneSetAddValues.CallOptions,\n  ): Promise<ToolsOzoneSetAddValues.Response> {\n    return this._client.call('tools.ozone.set.addValues', opts?.qp, data, opts)\n  }\n\n  deleteSet(\n    data?: ToolsOzoneSetDeleteSet.InputSchema,\n    opts?: ToolsOzoneSetDeleteSet.CallOptions,\n  ): Promise<ToolsOzoneSetDeleteSet.Response> {\n    return this._client\n      .call('tools.ozone.set.deleteSet', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ToolsOzoneSetDeleteSet.toKnownErr(e)\n      })\n  }\n\n  deleteValues(\n    data?: ToolsOzoneSetDeleteValues.InputSchema,\n    opts?: ToolsOzoneSetDeleteValues.CallOptions,\n  ): Promise<ToolsOzoneSetDeleteValues.Response> {\n    return this._client\n      .call('tools.ozone.set.deleteValues', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ToolsOzoneSetDeleteValues.toKnownErr(e)\n      })\n  }\n\n  getValues(\n    params?: ToolsOzoneSetGetValues.QueryParams,\n    opts?: ToolsOzoneSetGetValues.CallOptions,\n  ): Promise<ToolsOzoneSetGetValues.Response> {\n    return this._client\n      .call('tools.ozone.set.getValues', params, undefined, opts)\n      .catch((e) => {\n        throw ToolsOzoneSetGetValues.toKnownErr(e)\n      })\n  }\n\n  querySets(\n    params?: ToolsOzoneSetQuerySets.QueryParams,\n    opts?: ToolsOzoneSetQuerySets.CallOptions,\n  ): Promise<ToolsOzoneSetQuerySets.Response> {\n    return this._client.call(\n      'tools.ozone.set.querySets',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  upsertSet(\n    data?: ToolsOzoneSetUpsertSet.InputSchema,\n    opts?: ToolsOzoneSetUpsertSet.CallOptions,\n  ): Promise<ToolsOzoneSetUpsertSet.Response> {\n    return this._client.call('tools.ozone.set.upsertSet', opts?.qp, data, opts)\n  }\n}\n\nexport class ToolsOzoneSettingNS {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  listOptions(\n    params?: ToolsOzoneSettingListOptions.QueryParams,\n    opts?: ToolsOzoneSettingListOptions.CallOptions,\n  ): Promise<ToolsOzoneSettingListOptions.Response> {\n    return this._client.call(\n      'tools.ozone.setting.listOptions',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  removeOptions(\n    data?: ToolsOzoneSettingRemoveOptions.InputSchema,\n    opts?: ToolsOzoneSettingRemoveOptions.CallOptions,\n  ): Promise<ToolsOzoneSettingRemoveOptions.Response> {\n    return this._client.call(\n      'tools.ozone.setting.removeOptions',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n\n  upsertOption(\n    data?: ToolsOzoneSettingUpsertOption.InputSchema,\n    opts?: ToolsOzoneSettingUpsertOption.CallOptions,\n  ): Promise<ToolsOzoneSettingUpsertOption.Response> {\n    return this._client.call(\n      'tools.ozone.setting.upsertOption',\n      opts?.qp,\n      data,\n      opts,\n    )\n  }\n}\n\nexport class ToolsOzoneSignatureNS {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  findCorrelation(\n    params?: ToolsOzoneSignatureFindCorrelation.QueryParams,\n    opts?: ToolsOzoneSignatureFindCorrelation.CallOptions,\n  ): Promise<ToolsOzoneSignatureFindCorrelation.Response> {\n    return this._client.call(\n      'tools.ozone.signature.findCorrelation',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  findRelatedAccounts(\n    params?: ToolsOzoneSignatureFindRelatedAccounts.QueryParams,\n    opts?: ToolsOzoneSignatureFindRelatedAccounts.CallOptions,\n  ): Promise<ToolsOzoneSignatureFindRelatedAccounts.Response> {\n    return this._client.call(\n      'tools.ozone.signature.findRelatedAccounts',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  searchAccounts(\n    params?: ToolsOzoneSignatureSearchAccounts.QueryParams,\n    opts?: ToolsOzoneSignatureSearchAccounts.CallOptions,\n  ): Promise<ToolsOzoneSignatureSearchAccounts.Response> {\n    return this._client.call(\n      'tools.ozone.signature.searchAccounts',\n      params,\n      undefined,\n      opts,\n    )\n  }\n}\n\nexport class ToolsOzoneTeamNS {\n  _client: XrpcClient\n\n  constructor(client: XrpcClient) {\n    this._client = client\n  }\n\n  addMember(\n    data?: ToolsOzoneTeamAddMember.InputSchema,\n    opts?: ToolsOzoneTeamAddMember.CallOptions,\n  ): Promise<ToolsOzoneTeamAddMember.Response> {\n    return this._client\n      .call('tools.ozone.team.addMember', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ToolsOzoneTeamAddMember.toKnownErr(e)\n      })\n  }\n\n  deleteMember(\n    data?: ToolsOzoneTeamDeleteMember.InputSchema,\n    opts?: ToolsOzoneTeamDeleteMember.CallOptions,\n  ): Promise<ToolsOzoneTeamDeleteMember.Response> {\n    return this._client\n      .call('tools.ozone.team.deleteMember', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ToolsOzoneTeamDeleteMember.toKnownErr(e)\n      })\n  }\n\n  listMembers(\n    params?: ToolsOzoneTeamListMembers.QueryParams,\n    opts?: ToolsOzoneTeamListMembers.CallOptions,\n  ): Promise<ToolsOzoneTeamListMembers.Response> {\n    return this._client.call(\n      'tools.ozone.team.listMembers',\n      params,\n      undefined,\n      opts,\n    )\n  }\n\n  updateMember(\n    data?: ToolsOzoneTeamUpdateMember.InputSchema,\n    opts?: ToolsOzoneTeamUpdateMember.CallOptions,\n  ): Promise<ToolsOzoneTeamUpdateMember.Response> {\n    return this._client\n      .call('tools.ozone.team.updateMember', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ToolsOzoneTeamUpdateMember.toKnownErr(e)\n      })\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 23082, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23087, "column": 0}, "map": {"version":3,"file":"unicode.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/rich-text/unicode.ts"],"sourcesContent":["/**\n * Javascript uses utf16-encoded strings while most environments and specs\n * have standardized around utf8 (including JSON).\n *\n * After some lengthy debated we decided that richtext facets need to use\n * utf8 indices. This means we need tools to convert indices between utf8\n * and utf16, and that's precisely what this library handles.\n */\n\nimport { graphemeLen } from '@atproto/common-web'\n\nconst encoder = new TextEncoder()\nconst decoder = new TextDecoder()\n\nexport class UnicodeString {\n  utf16: string\n  utf8: Uint8Array\n  private _graphemeLen?: number | undefined\n\n  constructor(utf16: string) {\n    this.utf16 = utf16\n    this.utf8 = encoder.encode(utf16)\n  }\n\n  get length() {\n    return this.utf8.byteLength\n  }\n\n  get graphemeLength() {\n    if (!this._graphemeLen) {\n      this._graphemeLen = graphemeLen(this.utf16)\n    }\n    return this._graphemeLen\n  }\n\n  slice(start?: number, end?: number): string {\n    return decoder.decode(this.utf8.slice(start, end))\n  }\n\n  utf16IndexToUtf8Index(i: number) {\n    return encoder.encode(this.utf16.slice(0, i)).byteLength\n  }\n\n  toString() {\n    return this.utf16\n  }\n}\n"],"names":[],"mappings":";AAAA;;;;;;;GAOG;;;;AAEH,MAAA,8CAAiD;AAEjD,MAAM,OAAO,GAAG,IAAI,WAAW,EAAE,CAAA;AACjC,MAAM,OAAO,GAAG,IAAI,WAAW,EAAE,CAAA;AAEjC,MAAa,aAAa;IAKxB,YAAY,KAAa,CAAA;QAJzB,OAAA,cAAA,CAAA,IAAA,EAAA,SAAA;;;;;WAAa;QACb,OAAA,cAAA,CAAA,IAAA,EAAA,QAAA;;;;;WAAgB;QACR,OAAA,cAAA,CAAA,IAAA,EAAA,gBAAA;;;;;WAAiC;QAGvC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAA;QAClB,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;IACnC,CAAC;IAED,IAAI,MAAM,GAAA;QACR,OAAO,IAAI,CAAC,IAAI,CAAC,UAAU,CAAA;IAC7B,CAAC;IAED,IAAI,cAAc,GAAA;QAChB,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;YACvB,IAAI,CAAC,YAAY,GAAG,CAAA,GAAA,aAAA,WAAW,EAAC,IAAI,CAAC,KAAK,CAAC,CAAA;QAC7C,CAAC;QACD,OAAO,IAAI,CAAC,YAAY,CAAA;IAC1B,CAAC;IAED,KAAK,CAAC,KAAc,EAAE,GAAY,EAAA;QAChC,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAA;IACpD,CAAC;IAED,qBAAqB,CAAC,CAAS,EAAA;QAC7B,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,CAAA;IAC1D,CAAC;IAED,QAAQ,GAAA;QACN,OAAO,IAAI,CAAC,KAAK,CAAA;IACnB,CAAC;CACF;AAhCD,QAAA,aAAA,GAAA,cAgCC","ignoreList":[0]}},
    {"offset": {"line": 23145, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23150, "column": 0}, "map": {"version":3,"file":"sanitization.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/rich-text/sanitization.ts"],"sourcesContent":["import { RichText } from './rich-text'\nimport { UnicodeString } from './unicode'\n\n// this regex is intentionally matching on the zero-with-separator codepoint\n// eslint-disable-next-line no-misleading-character-class\nconst EXCESS_SPACE_RE = /[\\r\\n]([\\u00AD\\u2060\\u200D\\u200C\\u200B\\s]*[\\r\\n]){2,}/\nconst REPLACEMENT_STR = '\\n\\n'\n\nexport function sanitizeRichText(\n  richText: RichText,\n  opts: { cleanNewlines?: boolean },\n) {\n  if (opts.cleanNewlines) {\n    richText = clean(richText, EXCESS_SPACE_RE, REPLACEMENT_STR)\n  }\n  return richText\n}\n\nfunction clean(\n  richText: RichText,\n  targetRegexp: RegExp,\n  replacementString: string,\n): RichText {\n  richText = richText.clone()\n\n  let match = richText.unicodeText.utf16.match(targetRegexp)\n  while (match && typeof match.index !== 'undefined') {\n    const oldText = richText.unicodeText\n    const removeStartIndex = richText.unicodeText.utf16IndexToUtf8Index(\n      match.index,\n    )\n    const removeEndIndex = removeStartIndex + new UnicodeString(match[0]).length\n    richText.delete(removeStartIndex, removeEndIndex)\n    if (richText.unicodeText.utf16 === oldText.utf16) {\n      break // sanity check\n    }\n    richText.insert(removeStartIndex, replacementString)\n    match = richText.unicodeText.utf16.match(targetRegexp)\n  }\n\n  return richText\n}\n"],"names":[],"mappings":";;;;AAQA,QAAA,gBAAA,GAAA,iBAQC;AAfD,MAAA,iCAAyC;AAEzC,4EAA4E;AAC5E,yDAAyD;AACzD,MAAM,eAAe,GAAG,uDAAuD,CAAA;AAC/E,MAAM,eAAe,GAAG,MAAM,CAAA;AAE9B,SAAgB,gBAAgB,CAC9B,QAAkB,EAClB,IAAiC;IAEjC,IAAI,IAAI,CAAC,aAAa,EAAE,CAAC;QACvB,QAAQ,GAAG,KAAK,CAAC,QAAQ,EAAE,eAAe,EAAE,eAAe,CAAC,CAAA;IAC9D,CAAC;IACD,OAAO,QAAQ,CAAA;AACjB,CAAC;AAED,SAAS,KAAK,CACZ,QAAkB,EAClB,YAAoB,EACpB,iBAAyB;IAEzB,QAAQ,GAAG,QAAQ,CAAC,KAAK,EAAE,CAAA;IAE3B,IAAI,KAAK,GAAG,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,CAAA;IAC1D,MAAO,KAAK,IAAI,OAAO,KAAK,CAAC,KAAK,KAAK,WAAW,CAAE,CAAC;QACnD,MAAM,OAAO,GAAG,QAAQ,CAAC,WAAW,CAAA;QACpC,MAAM,gBAAgB,GAAG,QAAQ,CAAC,WAAW,CAAC,qBAAqB,CACjE,KAAK,CAAC,KAAK,CACZ,CAAA;QACD,MAAM,cAAc,GAAG,gBAAgB,GAAG,IAAI,UAAA,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAA;QAC5E,QAAQ,CAAC,MAAM,CAAC,gBAAgB,EAAE,cAAc,CAAC,CAAA;QACjD,IAAI,QAAQ,CAAC,WAAW,CAAC,KAAK,KAAK,OAAO,CAAC,KAAK,EAAE,CAAC;YACjD,MAAK,CAAC,eAAe;QACvB,CAAC;QACD,QAAQ,CAAC,MAAM,CAAC,gBAAgB,EAAE,iBAAiB,CAAC,CAAA;QACpD,KAAK,GAAG,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,CAAA;IACxD,CAAC;IAED,OAAO,QAAQ,CAAA;AACjB,CAAC","ignoreList":[0]}},
    {"offset": {"line": 23182, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23187, "column": 0}, "map": {"version":3,"file":"util.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/rich-text/util.ts"],"sourcesContent":["export const MENTION_REGEX = /(^|\\s|\\()(@)([a-zA-Z0-9.-]+)(\\b)/g\nexport const URL_REGEX =\n  /(^|\\s|\\()((https?:\\/\\/[\\S]+)|((?<domain>[a-z][a-z0-9]*(\\.[a-z0-9]+)+)[\\S]*))/gim\nexport const TRAILING_PUNCTUATION_REGEX = /\\p{P}+$/gu\n\n/**\n * `\\ufe0f` emoji modifier\n * `\\u00AD\\u2060\\u200A\\u200B\\u200C\\u200D\\u20e2` zero-width spaces (likely incomplete)\n */\nexport const TAG_REGEX =\n  // eslint-disable-next-line no-misleading-character-class\n  /(^|\\s)[#＃]((?!\\ufe0f)[^\\s\\u00AD\\u2060\\u200A\\u200B\\u200C\\u200D\\u20e2]*[^\\d\\s\\p{P}\\u00AD\\u2060\\u200A\\u200B\\u200C\\u200D\\u20e2]+[^\\s\\u00AD\\u2060\\u200A\\u200B\\u200C\\u200D\\u20e2]*)?/gu\n"],"names":[],"mappings":";;;;;AAAa,QAAA,aAAa,GAAG,mCAAmC,CAAA;AACnD,QAAA,SAAS,GACpB,iFAAiF,CAAA;AACtE,QAAA,0BAA0B,GAAG,WAAW,CAAA;AAErD;;;GAGG,CACU,QAAA,SAAS,GACpB,yDAAyD;AACzD,kLAAkL,CAAA","ignoreList":[0]}},
    {"offset": {"line": 23200, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23205, "column": 0}, "map": {"version":3,"file":"detection.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/rich-text/detection.ts"],"sourcesContent":["import TLDs from 'tlds'\nimport { AppBskyRichtextFacet } from '../client'\nimport { UnicodeString } from './unicode'\nimport {\n  URL_REGEX,\n  MENTION_REGEX,\n  TAG_REGEX,\n  TRAILING_PUNCTUATION_REGEX,\n} from './util'\n\nexport type Facet = AppBskyRichtextFacet.Main\n\nexport function detectFacets(text: UnicodeString): Facet[] | undefined {\n  let match\n  const facets: Facet[] = []\n  {\n    // mentions\n    const re = MENTION_REGEX\n    while ((match = re.exec(text.utf16))) {\n      if (!isValidDomain(match[3]) && !match[3].endsWith('.test')) {\n        continue // probably not a handle\n      }\n\n      const start = text.utf16.indexOf(match[3], match.index) - 1\n      facets.push({\n        $type: 'app.bsky.richtext.facet',\n        index: {\n          byteStart: text.utf16IndexToUtf8Index(start),\n          byteEnd: text.utf16IndexToUtf8Index(start + match[3].length + 1),\n        },\n        features: [\n          {\n            $type: 'app.bsky.richtext.facet#mention',\n            did: match[3], // must be resolved afterwards\n          },\n        ],\n      })\n    }\n  }\n  {\n    // links\n    const re = URL_REGEX\n    while ((match = re.exec(text.utf16))) {\n      let uri = match[2]\n      if (!uri.startsWith('http')) {\n        const domain = match.groups?.domain\n        if (!domain || !isValidDomain(domain)) {\n          continue\n        }\n        uri = `https://${uri}`\n      }\n      const start = text.utf16.indexOf(match[2], match.index)\n      const index = { start, end: start + match[2].length }\n      // strip ending puncuation\n      if (/[.,;:!?]$/.test(uri)) {\n        uri = uri.slice(0, -1)\n        index.end--\n      }\n      if (/[)]$/.test(uri) && !uri.includes('(')) {\n        uri = uri.slice(0, -1)\n        index.end--\n      }\n      facets.push({\n        index: {\n          byteStart: text.utf16IndexToUtf8Index(index.start),\n          byteEnd: text.utf16IndexToUtf8Index(index.end),\n        },\n        features: [\n          {\n            $type: 'app.bsky.richtext.facet#link',\n            uri,\n          },\n        ],\n      })\n    }\n  }\n  {\n    const re = TAG_REGEX\n    while ((match = re.exec(text.utf16))) {\n      const leading = match[1]\n      let tag = match[2]\n\n      if (!tag) continue\n\n      // strip ending punctuation and any spaces\n      tag = tag.trim().replace(TRAILING_PUNCTUATION_REGEX, '')\n\n      if (tag.length === 0 || tag.length > 64) continue\n\n      const index = match.index + leading.length\n\n      facets.push({\n        index: {\n          byteStart: text.utf16IndexToUtf8Index(index),\n          byteEnd: text.utf16IndexToUtf8Index(index + 1 + tag.length),\n        },\n        features: [\n          {\n            $type: 'app.bsky.richtext.facet#tag',\n            tag: tag,\n          },\n        ],\n      })\n    }\n  }\n  return facets.length > 0 ? facets : undefined\n}\n\nfunction isValidDomain(str: string): boolean {\n  return !!TLDs.find((tld) => {\n    const i = str.lastIndexOf(tld)\n    if (i === -1) {\n      return false\n    }\n    return str.charAt(i - 1) === '.' && i === str.length - tld.length\n  })\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 23318, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23323, "column": 0}, "map": {"version":3,"file":"rich-text.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/rich-text/rich-text.ts"],"sourcesContent":["/*\n= Rich Text Manipulation\n\nWhen we sanitize rich text, we have to update the entity indices as the\ntext is modified. This can be modeled as inserts() and deletes() of the\nrich text string. The possible scenarios are outlined below, along with\ntheir expected behaviors.\n\nNOTE: Slices are start inclusive, end exclusive\n\n== richTextInsert()\n\nTarget string:\n\n   0 1 2 3 4 5 6 7 8 910   // string indices\n   h e l l o   w o r l d   // string value\n       ^-------^           // target slice {start: 2, end: 7}\n\nScenarios:\n\nA: ^                       // insert \"test\" at 0\nB:        ^                // insert \"test\" at 4\nC:                 ^       // insert \"test\" at 8\n\nA = before           -> move both by num added\nB = inner            -> move end by num added\nC = after            -> noop\n\nResults:\n\nA: 0 1 2 3 4 5 6 7 8 910   // string indices\n   t e s t h e l l o   w   // string value\n               ^-------^   // target slice {start: 6, end: 11}\n\nB: 0 1 2 3 4 5 6 7 8 910   // string indices\n   h e l l t e s t o   w   // string value\n       ^---------------^   // target slice {start: 2, end: 11}\n\nC: 0 1 2 3 4 5 6 7 8 910   // string indices\n   h e l l o   w o t e s   // string value\n       ^-------^           // target slice {start: 2, end: 7}\n\n== richTextDelete()\n\nTarget string:\n\n   0 1 2 3 4 5 6 7 8 910   // string indices\n   h e l l o   w o r l d   // string value\n       ^-------^           // target slice {start: 2, end: 7}\n\nScenarios:\n\nA: ^---------------^       // remove slice {start: 0, end: 9}\nB:               ^-----^   // remove slice {start: 7, end: 11}\nC:         ^-----------^   // remove slice {start: 4, end: 11}\nD:       ^-^               // remove slice {start: 3, end: 5}\nE:   ^-----^               // remove slice {start: 1, end: 5}\nF: ^-^                     // remove slice {start: 0, end: 2}\n\nA = entirely outer   -> delete slice\nB = entirely after   -> noop\nC = partially after  -> move end to remove-start\nD = entirely inner   -> move end by num removed\nE = partially before -> move start to remove-start index, move end by num removed\nF = entirely before  -> move both by num removed\n\nResults:\n\nA: 0 1 2 3 4 5 6 7 8 910   // string indices\n   l d                     // string value\n                           // target slice (deleted)\n\nB: 0 1 2 3 4 5 6 7 8 910   // string indices\n   h e l l o   w           // string value\n       ^-------^           // target slice {start: 2, end: 7}\n\nC: 0 1 2 3 4 5 6 7 8 910   // string indices\n   h e l l                 // string value\n       ^-^                 // target slice {start: 2, end: 4}\n\nD: 0 1 2 3 4 5 6 7 8 910   // string indices\n   h e l   w o r l d       // string value\n       ^---^               // target slice {start: 2, end: 5}\n\nE: 0 1 2 3 4 5 6 7 8 910   // string indices\n   h   w o r l d           // string value\n     ^-^                   // target slice {start: 1, end: 3}\n\nF: 0 1 2 3 4 5 6 7 8 910   // string indices\n   l l o   w o r l d       // string value\n   ^-------^               // target slice {start: 0, end: 5}\n */\n\nimport { AppBskyFeedPost, AppBskyRichtextFacet, AtpBaseClient } from '../client'\nimport { UnicodeString } from './unicode'\nimport { sanitizeRichText } from './sanitization'\nimport { detectFacets } from './detection'\n\nexport type Facet = AppBskyRichtextFacet.Main\nexport type FacetLink = AppBskyRichtextFacet.Link\nexport type FacetMention = AppBskyRichtextFacet.Mention\nexport type FacetTag = AppBskyRichtextFacet.Tag\nexport type Entity = AppBskyFeedPost.Entity\n\nexport interface RichTextProps {\n  text: string\n  facets?: Facet[]\n  /**\n   * @deprecated Use facets instead\n   */\n  entities?: Entity[]\n}\n\nexport interface RichTextOpts {\n  cleanNewlines?: boolean\n}\n\nexport class RichTextSegment {\n  constructor(\n    public text: string,\n    public facet?: Facet,\n  ) {}\n\n  get link(): FacetLink | undefined {\n    const link = this.facet?.features.find(AppBskyRichtextFacet.isLink)\n    if (AppBskyRichtextFacet.isLink(link)) {\n      return link\n    }\n    return undefined\n  }\n\n  isLink() {\n    return !!this.link\n  }\n\n  get mention(): FacetMention | undefined {\n    const mention = this.facet?.features.find(AppBskyRichtextFacet.isMention)\n    if (AppBskyRichtextFacet.isMention(mention)) {\n      return mention\n    }\n    return undefined\n  }\n\n  isMention() {\n    return !!this.mention\n  }\n\n  get tag(): FacetTag | undefined {\n    const tag = this.facet?.features.find(AppBskyRichtextFacet.isTag)\n    if (AppBskyRichtextFacet.isTag(tag)) {\n      return tag\n    }\n    return undefined\n  }\n\n  isTag() {\n    return !!this.tag\n  }\n}\n\nexport class RichText {\n  unicodeText: UnicodeString\n  facets?: Facet[]\n\n  constructor(props: RichTextProps, opts?: RichTextOpts) {\n    this.unicodeText = new UnicodeString(props.text)\n    this.facets = props.facets\n    if (!this.facets?.length && props.entities?.length) {\n      this.facets = entitiesToFacets(this.unicodeText, props.entities)\n    }\n    if (this.facets) {\n      this.facets = this.facets.filter(facetFilter).sort(facetSort)\n    }\n    if (opts?.cleanNewlines) {\n      sanitizeRichText(this, { cleanNewlines: true }).copyInto(this)\n    }\n  }\n\n  get text() {\n    return this.unicodeText.toString()\n  }\n\n  get length() {\n    return this.unicodeText.length\n  }\n\n  get graphemeLength() {\n    return this.unicodeText.graphemeLength\n  }\n\n  clone() {\n    return new RichText({\n      text: this.unicodeText.utf16,\n      facets: cloneDeep(this.facets),\n    })\n  }\n\n  copyInto(target: RichText) {\n    target.unicodeText = this.unicodeText\n    target.facets = cloneDeep(this.facets)\n  }\n\n  *segments(): Generator<RichTextSegment, void, void> {\n    const facets = this.facets || []\n    if (!facets.length) {\n      yield new RichTextSegment(this.unicodeText.utf16)\n      return\n    }\n\n    let textCursor = 0\n    let facetCursor = 0\n    do {\n      const currFacet = facets[facetCursor]\n      if (textCursor < currFacet.index.byteStart) {\n        yield new RichTextSegment(\n          this.unicodeText.slice(textCursor, currFacet.index.byteStart),\n        )\n      } else if (textCursor > currFacet.index.byteStart) {\n        facetCursor++\n        continue\n      }\n      if (currFacet.index.byteStart < currFacet.index.byteEnd) {\n        const subtext = this.unicodeText.slice(\n          currFacet.index.byteStart,\n          currFacet.index.byteEnd,\n        )\n        if (!subtext.trim()) {\n          // dont empty string entities\n          yield new RichTextSegment(subtext)\n        } else {\n          yield new RichTextSegment(subtext, currFacet)\n        }\n      }\n      textCursor = currFacet.index.byteEnd\n      facetCursor++\n    } while (facetCursor < facets.length)\n    if (textCursor < this.unicodeText.length) {\n      yield new RichTextSegment(\n        this.unicodeText.slice(textCursor, this.unicodeText.length),\n      )\n    }\n  }\n\n  insert(insertIndex: number, insertText: string) {\n    this.unicodeText = new UnicodeString(\n      this.unicodeText.slice(0, insertIndex) +\n        insertText +\n        this.unicodeText.slice(insertIndex),\n    )\n\n    if (!this.facets?.length) {\n      return this\n    }\n\n    const numCharsAdded = insertText.length\n    for (const ent of this.facets) {\n      // see comment at top of file for labels of each scenario\n      // scenario A (before)\n      if (insertIndex <= ent.index.byteStart) {\n        // move both by num added\n        ent.index.byteStart += numCharsAdded\n        ent.index.byteEnd += numCharsAdded\n      }\n      // scenario B (inner)\n      else if (\n        insertIndex >= ent.index.byteStart &&\n        insertIndex < ent.index.byteEnd\n      ) {\n        // move end by num added\n        ent.index.byteEnd += numCharsAdded\n      }\n      // scenario C (after)\n      // noop\n    }\n    return this\n  }\n\n  delete(removeStartIndex: number, removeEndIndex: number) {\n    this.unicodeText = new UnicodeString(\n      this.unicodeText.slice(0, removeStartIndex) +\n        this.unicodeText.slice(removeEndIndex),\n    )\n\n    if (!this.facets?.length) {\n      return this\n    }\n\n    const numCharsRemoved = removeEndIndex - removeStartIndex\n    for (const ent of this.facets) {\n      // see comment at top of file for labels of each scenario\n      // scenario A (entirely outer)\n      if (\n        removeStartIndex <= ent.index.byteStart &&\n        removeEndIndex >= ent.index.byteEnd\n      ) {\n        // delete slice (will get removed in final pass)\n        ent.index.byteStart = 0\n        ent.index.byteEnd = 0\n      }\n      // scenario B (entirely after)\n      else if (removeStartIndex > ent.index.byteEnd) {\n        // noop\n      }\n      // scenario C (partially after)\n      else if (\n        removeStartIndex > ent.index.byteStart &&\n        removeStartIndex <= ent.index.byteEnd &&\n        removeEndIndex > ent.index.byteEnd\n      ) {\n        // move end to remove start\n        ent.index.byteEnd = removeStartIndex\n      }\n      // scenario D (entirely inner)\n      else if (\n        removeStartIndex >= ent.index.byteStart &&\n        removeEndIndex <= ent.index.byteEnd\n      ) {\n        // move end by num removed\n        ent.index.byteEnd -= numCharsRemoved\n      }\n      // scenario E (partially before)\n      else if (\n        removeStartIndex < ent.index.byteStart &&\n        removeEndIndex >= ent.index.byteStart &&\n        removeEndIndex <= ent.index.byteEnd\n      ) {\n        // move start to remove-start index, move end by num removed\n        ent.index.byteStart = removeStartIndex\n        ent.index.byteEnd -= numCharsRemoved\n      }\n      // scenario F (entirely before)\n      else if (removeEndIndex < ent.index.byteStart) {\n        // move both by num removed\n        ent.index.byteStart -= numCharsRemoved\n        ent.index.byteEnd -= numCharsRemoved\n      }\n    }\n\n    // filter out any facets that were made irrelevant\n    this.facets = this.facets.filter(\n      (ent) => ent.index.byteStart < ent.index.byteEnd,\n    )\n    return this\n  }\n\n  /**\n   * Detects facets such as links and mentions\n   * Note: Overwrites the existing facets with auto-detected facets\n   */\n  async detectFacets(agent: AtpBaseClient) {\n    this.facets = detectFacets(this.unicodeText)\n    if (this.facets) {\n      const promises: Promise<void>[] = []\n      for (const facet of this.facets) {\n        for (const feature of facet.features) {\n          if (AppBskyRichtextFacet.isMention(feature)) {\n            promises.push(\n              agent.com.atproto.identity\n                .resolveHandle({ handle: feature.did })\n                .then((res) => res?.data.did)\n                .catch((_) => undefined)\n                .then((did) => {\n                  feature.did = did || ''\n                }),\n            )\n          }\n        }\n      }\n      await Promise.allSettled(promises)\n      this.facets.sort(facetSort)\n    }\n  }\n\n  /**\n   * Detects facets such as links and mentions but does not resolve them\n   * Will produce invalid facets! For instance, mentions will not have their DIDs set.\n   * Note: Overwrites the existing facets with auto-detected facets\n   */\n  detectFacetsWithoutResolution() {\n    this.facets = detectFacets(this.unicodeText)\n    if (this.facets) {\n      this.facets.sort(facetSort)\n    }\n  }\n}\n\nconst facetSort = (a: Facet, b: Facet) => a.index.byteStart - b.index.byteStart\n\nconst facetFilter = (facet: Facet) =>\n  // discard negative-length facets. zero-length facets are valid\n  facet.index.byteStart <= facet.index.byteEnd\n\nfunction entitiesToFacets(text: UnicodeString, entities: Entity[]): Facet[] {\n  const facets: Facet[] = []\n  for (const ent of entities) {\n    if (ent.type === 'link') {\n      facets.push({\n        $type: 'app.bsky.richtext.facet',\n        index: {\n          byteStart: text.utf16IndexToUtf8Index(ent.index.start),\n          byteEnd: text.utf16IndexToUtf8Index(ent.index.end),\n        },\n        features: [{ $type: 'app.bsky.richtext.facet#link', uri: ent.value }],\n      })\n    } else if (ent.type === 'mention') {\n      facets.push({\n        $type: 'app.bsky.richtext.facet',\n        index: {\n          byteStart: text.utf16IndexToUtf8Index(ent.index.start),\n          byteEnd: text.utf16IndexToUtf8Index(ent.index.end),\n        },\n        features: [\n          { $type: 'app.bsky.richtext.facet#mention', did: ent.value },\n        ],\n      })\n    }\n  }\n  return facets\n}\n\nfunction cloneDeep<T>(v: T): T {\n  if (typeof v === 'undefined') {\n    return v\n  }\n  return JSON.parse(JSON.stringify(v))\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 23684, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23689, "column": 0}, "map": {"version":3,"file":"types.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/moderation/types.ts"],"sourcesContent":["import {\n  AppBskyActorDefs,\n  AppBskyFeedDefs,\n  AppBskyNotificationListNotifications,\n  AppBskyGraphDefs,\n  ComAtprotoLabelDefs,\n} from '../client/index'\nimport { KnownLabelValue } from './const/labels'\n\n// syntax\n// =\n\nexport const CUSTOM_LABEL_VALUE_RE = /^[a-z-]+$/\n\n// behaviors\n// =\n\nexport interface ModerationBehavior {\n  profileList?: 'blur' | 'alert' | 'inform'\n  profileView?: 'blur' | 'alert' | 'inform'\n  avatar?: 'blur' | 'alert'\n  banner?: 'blur'\n  displayName?: 'blur'\n  contentList?: 'blur' | 'alert' | 'inform'\n  contentView?: 'blur' | 'alert' | 'inform'\n  contentMedia?: 'blur'\n}\nexport const BLOCK_BEHAVIOR: ModerationBehavior = {\n  profileList: 'blur',\n  profileView: 'alert',\n  avatar: 'blur',\n  banner: 'blur',\n  contentList: 'blur',\n  contentView: 'blur',\n}\nexport const MUTE_BEHAVIOR: ModerationBehavior = {\n  profileList: 'inform',\n  profileView: 'alert',\n  contentList: 'blur',\n  contentView: 'inform',\n}\nexport const MUTEWORD_BEHAVIOR: ModerationBehavior = {\n  contentList: 'blur',\n  contentView: 'blur',\n}\nexport const HIDE_BEHAVIOR: ModerationBehavior = {\n  contentList: 'blur',\n  contentView: 'blur',\n}\nexport const NOOP_BEHAVIOR: ModerationBehavior = {}\n\n// labels\n// =\n\nexport type Label = ComAtprotoLabelDefs.Label\nexport type LabelTarget = 'account' | 'profile' | 'content'\nexport type LabelPreference = 'ignore' | 'warn' | 'hide'\n\nexport type LabelValueDefinitionFlag =\n  | 'no-override'\n  | 'adult'\n  | 'unauthed'\n  | 'no-self'\n\nexport interface InterpretedLabelValueDefinition\n  extends ComAtprotoLabelDefs.LabelValueDefinition {\n  definedBy?: string | undefined // did of labeler or undefined for global\n  configurable: boolean\n  defaultSetting: LabelPreference // type narrowing\n  flags: LabelValueDefinitionFlag[]\n  behaviors: {\n    account?: ModerationBehavior\n    profile?: ModerationBehavior\n    content?: ModerationBehavior\n  }\n}\n\nexport type LabelDefinitionMap = Record<\n  KnownLabelValue,\n  InterpretedLabelValueDefinition\n>\n\n// subjects\n// =\n\nexport type ModerationSubjectProfile =\n  | AppBskyActorDefs.ProfileViewBasic\n  | AppBskyActorDefs.ProfileView\n  | AppBskyActorDefs.ProfileViewDetailed\n\nexport type ModerationSubjectPost = AppBskyFeedDefs.PostView\n\nexport type ModerationSubjectNotification =\n  AppBskyNotificationListNotifications.Notification\n\nexport type ModerationSubjectFeedGenerator = AppBskyFeedDefs.GeneratorView\n\nexport type ModerationSubjectUserList =\n  | AppBskyGraphDefs.ListViewBasic\n  | AppBskyGraphDefs.ListView\n\nexport type ModerationSubject =\n  | ModerationSubjectProfile\n  | ModerationSubjectPost\n  | ModerationSubjectNotification\n  | ModerationSubjectFeedGenerator\n  | ModerationSubjectUserList\n\n// behaviors\n// =\n\nexport type ModerationCauseSource =\n  | { type: 'user' }\n  | { type: 'list'; list: AppBskyGraphDefs.ListViewBasic }\n  | { type: 'labeler'; did: string }\n\nexport type ModerationCause =\n  | {\n      type: 'blocking'\n      source: ModerationCauseSource\n      priority: 3\n      downgraded?: boolean\n    }\n  | {\n      type: 'blocked-by'\n      source: ModerationCauseSource\n      priority: 4\n      downgraded?: boolean\n    }\n  | {\n      type: 'block-other'\n      source: ModerationCauseSource\n      priority: 4\n      downgraded?: boolean\n    }\n  | {\n      type: 'label'\n      source: ModerationCauseSource\n      label: Label\n      labelDef: InterpretedLabelValueDefinition\n      target: LabelTarget\n      setting: LabelPreference\n      behavior: ModerationBehavior\n      noOverride: boolean\n      priority: 1 | 2 | 5 | 7 | 8\n      downgraded?: boolean\n    }\n  | {\n      type: 'muted'\n      source: ModerationCauseSource\n      priority: 6\n      downgraded?: boolean\n    }\n  | {\n      type: 'mute-word'\n      source: ModerationCauseSource\n      priority: 6\n      downgraded?: boolean\n    }\n  | {\n      type: 'hidden'\n      source: ModerationCauseSource\n      priority: 6\n      downgraded?: boolean\n    }\n\nexport interface ModerationPrefsLabeler {\n  did: string\n  labels: Record<string, LabelPreference>\n}\n\nexport interface ModerationPrefs {\n  adultContentEnabled: boolean\n  labels: Record<string, LabelPreference>\n  labelers: ModerationPrefsLabeler[]\n  mutedWords: AppBskyActorDefs.MutedWord[]\n  hiddenPosts: string[]\n}\n\nexport interface ModerationOpts {\n  userDid: string | undefined\n  prefs: ModerationPrefs\n  /**\n   * Map of labeler did -> custom definitions\n   */\n  labelDefs?: Record<string, InterpretedLabelValueDefinition[]>\n}\n"],"names":[],"mappings":";;;;;AASA,SAAS;AACT,IAAI;AAES,QAAA,qBAAqB,GAAG,WAAW,CAAA;AAenC,QAAA,cAAc,GAAuB;IAChD,WAAW,EAAE,MAAM;IACnB,WAAW,EAAE,OAAO;IACpB,MAAM,EAAE,MAAM;IACd,MAAM,EAAE,MAAM;IACd,WAAW,EAAE,MAAM;IACnB,WAAW,EAAE,MAAM;CACpB,CAAA;AACY,QAAA,aAAa,GAAuB;IAC/C,WAAW,EAAE,QAAQ;IACrB,WAAW,EAAE,OAAO;IACpB,WAAW,EAAE,MAAM;IACnB,WAAW,EAAE,QAAQ;CACtB,CAAA;AACY,QAAA,iBAAiB,GAAuB;IACnD,WAAW,EAAE,MAAM;IACnB,WAAW,EAAE,MAAM;CACpB,CAAA;AACY,QAAA,aAAa,GAAuB;IAC/C,WAAW,EAAE,MAAM;IACnB,WAAW,EAAE,MAAM;CACpB,CAAA;AACY,QAAA,aAAa,GAAuB,CAAA,CAAE,CAAA","ignoreList":[0]}},
    {"offset": {"line": 23720, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23725, "column": 0}, "map": {"version":3,"file":"ui.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/moderation/ui.ts"],"sourcesContent":["import { ModerationCause } from './types'\n\nexport class ModerationUI {\n  noOverride = false\n  filters: ModerationCause[] = []\n  blurs: ModerationCause[] = []\n  alerts: ModerationCause[] = []\n  informs: ModerationCause[] = []\n  get filter(): boolean {\n    return this.filters.length !== 0\n  }\n  get blur(): boolean {\n    return this.blurs.length !== 0\n  }\n  get alert(): boolean {\n    return this.alerts.length !== 0\n  }\n  get inform(): boolean {\n    return this.informs.length !== 0\n  }\n}\n"],"names":[],"mappings":";;;;;AAEA,MAAa,YAAY;IAAzB,aAAA;QACE,OAAA,cAAA,CAAA,IAAA,EAAA,cAAA;;;;mBAAa,KAAK;WAAA;QAClB,OAAA,cAAA,CAAA,IAAA,EAAA,WAAA;;;;mBAA6B,EAAE;WAAA;QAC/B,OAAA,cAAA,CAAA,IAAA,EAAA,SAAA;;;;mBAA2B,EAAE;WAAA;QAC7B,OAAA,cAAA,CAAA,IAAA,EAAA,UAAA;;;;mBAA4B,EAAE;WAAA;QAC9B,OAAA,cAAA,CAAA,IAAA,EAAA,WAAA;;;;mBAA6B,EAAE;WAAA;IAajC,CAAC;IAZC,IAAI,MAAM,GAAA;QACR,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,CAAA;IAClC,CAAC;IACD,IAAI,IAAI,GAAA;QACN,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,CAAA;IAChC,CAAC;IACD,IAAI,KAAK,GAAA;QACP,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,CAAA;IACjC,CAAC;IACD,IAAI,MAAM,GAAA;QACR,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,CAAA;IAClC,CAAC;CACF;AAlBD,QAAA,YAAA,GAAA,aAkBC","ignoreList":[0]}},
    {"offset": {"line": 23777, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23782, "column": 0}, "map": {"version":3,"file":"labels.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/moderation/const/labels.ts"],"sourcesContent":["/** this doc is generated by ./scripts/code/labels.mjs **/\nimport { InterpretedLabelValueDefinition, LabelPreference } from '../types'\n\nexport type KnownLabelValue =\n  | '!hide'\n  | '!warn'\n  | '!no-unauthenticated'\n  | 'porn'\n  | 'sexual'\n  | 'nudity'\n  | 'graphic-media'\n  | 'gore'\n\nexport const DEFAULT_LABEL_SETTINGS: Record<string, LabelPreference> = {\n  porn: 'hide',\n  sexual: 'warn',\n  nudity: 'ignore',\n  'graphic-media': 'warn',\n}\n\nexport const LABELS: Record<KnownLabelValue, InterpretedLabelValueDefinition> =\n  {\n    '!hide': {\n      identifier: '!hide',\n      configurable: false,\n      defaultSetting: 'hide',\n      flags: ['no-override', 'no-self'],\n      severity: 'alert',\n      blurs: 'content',\n      behaviors: {\n        account: {\n          profileList: 'blur',\n          profileView: 'blur',\n          avatar: 'blur',\n          banner: 'blur',\n          displayName: 'blur',\n          contentList: 'blur',\n          contentView: 'blur',\n        },\n        profile: {\n          avatar: 'blur',\n          banner: 'blur',\n          displayName: 'blur',\n        },\n        content: {\n          contentList: 'blur',\n          contentView: 'blur',\n        },\n      },\n      locales: [],\n    },\n    '!warn': {\n      identifier: '!warn',\n      configurable: false,\n      defaultSetting: 'warn',\n      flags: ['no-self'],\n      severity: 'none',\n      blurs: 'content',\n      behaviors: {\n        account: {\n          profileList: 'blur',\n          profileView: 'blur',\n          avatar: 'blur',\n          banner: 'blur',\n          contentList: 'blur',\n          contentView: 'blur',\n        },\n        profile: {\n          avatar: 'blur',\n          banner: 'blur',\n          displayName: 'blur',\n        },\n        content: {\n          contentList: 'blur',\n          contentView: 'blur',\n        },\n      },\n      locales: [],\n    },\n    '!no-unauthenticated': {\n      identifier: '!no-unauthenticated',\n      configurable: false,\n      defaultSetting: 'hide',\n      flags: ['no-override', 'unauthed'],\n      severity: 'none',\n      blurs: 'content',\n      behaviors: {\n        account: {\n          profileList: 'blur',\n          profileView: 'blur',\n          avatar: 'blur',\n          banner: 'blur',\n          displayName: 'blur',\n          contentList: 'blur',\n          contentView: 'blur',\n        },\n        profile: {\n          avatar: 'blur',\n          banner: 'blur',\n          displayName: 'blur',\n        },\n        content: {\n          contentList: 'blur',\n          contentView: 'blur',\n        },\n      },\n      locales: [],\n    },\n    porn: {\n      identifier: 'porn',\n      configurable: true,\n      defaultSetting: 'hide',\n      flags: ['adult'],\n      severity: 'none',\n      blurs: 'media',\n      behaviors: {\n        account: {\n          avatar: 'blur',\n          banner: 'blur',\n        },\n        profile: {\n          avatar: 'blur',\n          banner: 'blur',\n        },\n        content: {\n          contentMedia: 'blur',\n        },\n      },\n      locales: [],\n    },\n    sexual: {\n      identifier: 'sexual',\n      configurable: true,\n      defaultSetting: 'warn',\n      flags: ['adult'],\n      severity: 'none',\n      blurs: 'media',\n      behaviors: {\n        account: {\n          avatar: 'blur',\n          banner: 'blur',\n        },\n        profile: {\n          avatar: 'blur',\n          banner: 'blur',\n        },\n        content: {\n          contentMedia: 'blur',\n        },\n      },\n      locales: [],\n    },\n    nudity: {\n      identifier: 'nudity',\n      configurable: true,\n      defaultSetting: 'ignore',\n      flags: [],\n      severity: 'none',\n      blurs: 'media',\n      behaviors: {\n        account: {\n          avatar: 'blur',\n          banner: 'blur',\n        },\n        profile: {\n          avatar: 'blur',\n          banner: 'blur',\n        },\n        content: {\n          contentMedia: 'blur',\n        },\n      },\n      locales: [],\n    },\n    'graphic-media': {\n      identifier: 'graphic-media',\n      flags: ['adult'],\n      configurable: true,\n      defaultSetting: 'warn',\n      severity: 'none',\n      blurs: 'media',\n      behaviors: {\n        account: {\n          avatar: 'blur',\n          banner: 'blur',\n        },\n        profile: {\n          avatar: 'blur',\n          banner: 'blur',\n        },\n        content: {\n          contentMedia: 'blur',\n        },\n      },\n      locales: [],\n    },\n    /** @deprecated alias for `graphic-media` */\n    gore: {\n      identifier: 'gore',\n      flags: ['adult'],\n      configurable: true,\n      defaultSetting: 'warn',\n      severity: 'none',\n      blurs: 'media',\n      behaviors: {\n        account: {\n          avatar: 'blur',\n          banner: 'blur',\n        },\n        profile: {\n          avatar: 'blur',\n          banner: 'blur',\n        },\n        content: {\n          contentMedia: 'blur',\n        },\n      },\n      locales: [],\n    },\n  }\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 24007, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 24012, "column": 0}, "map": {"version":3,"file":"decision.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/moderation/decision.ts"],"sourcesContent":["import { AppBskyGraphDefs } from '../client/index'\nimport {\n  BLOCK_BEHAVIOR,\n  MUTE_BEHAVIOR,\n  MUTEWORD_BEHAVIOR,\n  HIDE_BEHAVIOR,\n  NOOP_BEHAVIOR,\n  Label,\n  LabelPreference,\n  ModerationCause,\n  ModerationOpts,\n  LabelTarget,\n  ModerationBehavior,\n  CUSTOM_LABEL_VALUE_RE,\n} from './types'\nimport { ModerationUI } from './ui'\nimport { LABELS } from './const/labels'\n\nenum ModerationBehaviorSeverity {\n  High,\n  Medium,\n  Low,\n}\n\nexport class ModerationDecision {\n  did = ''\n  isMe = false\n  causes: ModerationCause[] = []\n\n  constructor() {}\n\n  static merge(\n    ...decisions: (ModerationDecision | undefined)[]\n  ): ModerationDecision {\n    const decisionsFiltered: ModerationDecision[] = decisions.filter(\n      (v) => !!v,\n    ) as ModerationDecision[]\n    const decision = new ModerationDecision()\n    if (decisionsFiltered[0]) {\n      decision.did = decisionsFiltered[0].did\n      decision.isMe = decisionsFiltered[0].isMe\n    }\n    decision.causes = decisionsFiltered.flatMap((d) => d.causes)\n    return decision\n  }\n\n  downgrade() {\n    for (const cause of this.causes) {\n      cause.downgraded = true\n    }\n    return this\n  }\n\n  get blocked() {\n    return !!this.blockCause\n  }\n\n  get muted() {\n    return !!this.muteCause\n  }\n\n  get blockCause() {\n    return this.causes.find(\n      (cause) =>\n        cause.type === 'blocking' ||\n        cause.type === 'blocked-by' ||\n        cause.type === 'block-other',\n    )\n  }\n\n  get muteCause() {\n    return this.causes.find((cause) => cause.type === 'muted')\n  }\n\n  get labelCauses() {\n    return this.causes.filter((cause) => cause.type === 'label')\n  }\n\n  ui(context: keyof ModerationBehavior): ModerationUI {\n    const ui = new ModerationUI()\n    for (const cause of this.causes) {\n      if (\n        cause.type === 'blocking' ||\n        cause.type === 'blocked-by' ||\n        cause.type === 'block-other'\n      ) {\n        if (this.isMe) {\n          continue\n        }\n        if (context === 'profileList' || context === 'contentList') {\n          ui.filters.push(cause)\n        }\n        if (!cause.downgraded) {\n          if (BLOCK_BEHAVIOR[context] === 'blur') {\n            ui.noOverride = true\n            ui.blurs.push(cause)\n          } else if (BLOCK_BEHAVIOR[context] === 'alert') {\n            ui.alerts.push(cause)\n          } else if (BLOCK_BEHAVIOR[context] === 'inform') {\n            ui.informs.push(cause)\n          }\n        }\n      } else if (cause.type === 'muted') {\n        if (this.isMe) {\n          continue\n        }\n        if (context === 'profileList' || context === 'contentList') {\n          ui.filters.push(cause)\n        }\n        if (!cause.downgraded) {\n          if (MUTE_BEHAVIOR[context] === 'blur') {\n            ui.blurs.push(cause)\n          } else if (MUTE_BEHAVIOR[context] === 'alert') {\n            ui.alerts.push(cause)\n          } else if (MUTE_BEHAVIOR[context] === 'inform') {\n            ui.informs.push(cause)\n          }\n        }\n      } else if (cause.type === 'mute-word') {\n        if (this.isMe) {\n          continue\n        }\n        if (context === 'contentList') {\n          ui.filters.push(cause)\n        }\n        if (!cause.downgraded) {\n          if (MUTEWORD_BEHAVIOR[context] === 'blur') {\n            ui.blurs.push(cause)\n          } else if (MUTEWORD_BEHAVIOR[context] === 'alert') {\n            ui.alerts.push(cause)\n          } else if (MUTEWORD_BEHAVIOR[context] === 'inform') {\n            ui.informs.push(cause)\n          }\n        }\n      } else if (cause.type === 'hidden') {\n        if (context === 'profileList' || context === 'contentList') {\n          ui.filters.push(cause)\n        }\n        if (!cause.downgraded) {\n          if (HIDE_BEHAVIOR[context] === 'blur') {\n            ui.blurs.push(cause)\n          } else if (HIDE_BEHAVIOR[context] === 'alert') {\n            ui.alerts.push(cause)\n          } else if (HIDE_BEHAVIOR[context] === 'inform') {\n            ui.informs.push(cause)\n          }\n        }\n      } else if (cause.type === 'label') {\n        if (context === 'profileList' && cause.target === 'account') {\n          if (cause.setting === 'hide' && !this.isMe) {\n            ui.filters.push(cause)\n          }\n        } else if (\n          context === 'contentList' &&\n          (cause.target === 'account' || cause.target === 'content')\n        ) {\n          if (cause.setting === 'hide' && !this.isMe) {\n            ui.filters.push(cause)\n          }\n        }\n        if (!cause.downgraded) {\n          if (cause.behavior[context] === 'blur') {\n            ui.blurs.push(cause)\n            if (cause.noOverride && !this.isMe) {\n              ui.noOverride = true\n            }\n          } else if (cause.behavior[context] === 'alert') {\n            ui.alerts.push(cause)\n          } else if (cause.behavior[context] === 'inform') {\n            ui.informs.push(cause)\n          }\n        }\n      }\n    }\n\n    ui.filters.sort(sortByPriority)\n    ui.blurs.sort(sortByPriority)\n\n    return ui\n  }\n\n  setDid(did: string) {\n    this.did = did\n  }\n\n  setIsMe(isMe: boolean) {\n    this.isMe = isMe\n  }\n\n  addHidden(hidden: boolean) {\n    if (hidden) {\n      this.causes.push({\n        type: 'hidden',\n        source: { type: 'user' },\n        priority: 6,\n      })\n    }\n  }\n\n  addMutedWord(mutedWord: boolean) {\n    if (mutedWord) {\n      this.causes.push({\n        type: 'mute-word',\n        source: { type: 'user' },\n        priority: 6,\n      })\n    }\n  }\n\n  addBlocking(blocking: string | undefined) {\n    if (blocking) {\n      this.causes.push({\n        type: 'blocking',\n        source: { type: 'user' },\n        priority: 3,\n      })\n    }\n  }\n\n  addBlockingByList(\n    blockingByList: AppBskyGraphDefs.ListViewBasic | undefined,\n  ) {\n    if (blockingByList) {\n      this.causes.push({\n        type: 'blocking',\n        source: { type: 'list', list: blockingByList },\n        priority: 3,\n      })\n    }\n  }\n\n  addBlockedBy(blockedBy: boolean | undefined) {\n    if (blockedBy) {\n      this.causes.push({\n        type: 'blocked-by',\n        source: { type: 'user' },\n        priority: 4,\n      })\n    }\n  }\n\n  addBlockOther(blockOther: boolean | undefined) {\n    if (blockOther) {\n      this.causes.push({\n        type: 'block-other',\n        source: { type: 'user' },\n        priority: 4,\n      })\n    }\n  }\n\n  addLabel(target: LabelTarget, label: Label, opts: ModerationOpts) {\n    // look up the label definition\n    const labelDef = CUSTOM_LABEL_VALUE_RE.test(label.val)\n      ? opts.labelDefs?.[label.src]?.find(\n          (def) => def.identifier === label.val,\n        ) || LABELS[label.val]\n      : LABELS[label.val]\n    if (!labelDef) {\n      // ignore labels we don't understand\n      return\n    }\n\n    // look up the label preference\n    const isSelf = label.src === this.did\n    const labeler = isSelf\n      ? undefined\n      : opts.prefs.labelers.find((s) => s.did === label.src)\n\n    if (!isSelf && !labeler) {\n      return // skip labelers not configured by the user\n    }\n    if (isSelf && labelDef.flags.includes('no-self')) {\n      return // skip self-labels that aren't supported\n    }\n\n    // establish the label preference for interpretation\n    let labelPref: LabelPreference = labelDef.defaultSetting || 'ignore'\n    if (!labelDef.configurable) {\n      labelPref = labelDef.defaultSetting || 'hide'\n    } else if (\n      labelDef.flags.includes('adult') &&\n      !opts.prefs.adultContentEnabled\n    ) {\n      labelPref = 'hide'\n    } else if (labeler?.labels[labelDef.identifier]) {\n      labelPref = labeler?.labels[labelDef.identifier]\n    } else if (opts.prefs.labels[labelDef.identifier]) {\n      labelPref = opts.prefs.labels[labelDef.identifier]\n    }\n\n    // ignore labels the user has asked to ignore\n    if (labelPref === 'ignore') {\n      return\n    }\n\n    // ignore 'unauthed' labels when the user is authed\n    if (labelDef.flags.includes('unauthed') && !!opts.userDid) {\n      return\n    }\n\n    // establish the priority of the label\n    let priority: 1 | 2 | 5 | 7 | 8\n    const severity = measureModerationBehaviorSeverity(\n      labelDef.behaviors[target],\n    )\n    if (\n      labelDef.flags.includes('no-override') ||\n      (labelDef.flags.includes('adult') && !opts.prefs.adultContentEnabled)\n    ) {\n      priority = 1\n    } else if (labelPref === 'hide') {\n      priority = 2\n    } else if (severity === ModerationBehaviorSeverity.High) {\n      // blurring profile view or content view\n      priority = 5\n    } else if (severity === ModerationBehaviorSeverity.Medium) {\n      // blurring content list or content media\n      priority = 7\n    } else {\n      // blurring avatar, adding alerts\n      priority = 8\n    }\n\n    let noOverride = false\n    if (labelDef.flags.includes('no-override')) {\n      noOverride = true\n    } else if (\n      labelDef.flags.includes('adult') &&\n      !opts.prefs.adultContentEnabled\n    ) {\n      noOverride = true\n    }\n\n    this.causes.push({\n      type: 'label',\n      source:\n        isSelf || !labeler\n          ? { type: 'user' }\n          : { type: 'labeler', did: labeler.did },\n      label,\n      labelDef,\n      target,\n      setting: labelPref,\n      behavior: labelDef.behaviors[target] || NOOP_BEHAVIOR,\n      noOverride,\n      priority,\n    })\n  }\n\n  addMuted(muted: boolean | undefined) {\n    if (muted) {\n      this.causes.push({\n        type: 'muted',\n        source: { type: 'user' },\n        priority: 6,\n      })\n    }\n  }\n\n  addMutedByList(mutedByList: AppBskyGraphDefs.ListViewBasic | undefined) {\n    if (mutedByList) {\n      this.causes.push({\n        type: 'muted',\n        source: { type: 'list', list: mutedByList },\n        priority: 6,\n      })\n    }\n  }\n}\n\nfunction measureModerationBehaviorSeverity(\n  beh: ModerationBehavior | undefined,\n): ModerationBehaviorSeverity {\n  if (!beh) {\n    return ModerationBehaviorSeverity.Low\n  }\n  if (beh.profileView === 'blur' || beh.contentView === 'blur') {\n    return ModerationBehaviorSeverity.High\n  }\n  if (beh.contentList === 'blur' || beh.contentMedia === 'blur') {\n    return ModerationBehaviorSeverity.Medium\n  }\n  return ModerationBehaviorSeverity.Low\n}\n\nfunction sortByPriority(a: ModerationCause, b: ModerationCause) {\n  return a.priority - b.priority\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 24359, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 24364, "column": 0}, "map": {"version":3,"file":"account.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/moderation/subjects/account.ts"],"sourcesContent":["import { ModerationDecision } from '../decision'\nimport { Label, ModerationSubjectProfile, ModerationOpts } from '../types'\n\nexport function decideAccount(\n  subject: ModerationSubjectProfile,\n  opts: ModerationOpts,\n): ModerationDecision {\n  const acc = new ModerationDecision()\n\n  acc.setDid(subject.did)\n  acc.setIsMe(subject.did === opts.userDid)\n  if (subject.viewer?.muted) {\n    if (subject.viewer?.mutedByList) {\n      acc.addMutedByList(subject.viewer?.mutedByList)\n    } else {\n      acc.addMuted(subject.viewer?.muted)\n    }\n  }\n  if (subject.viewer?.blocking) {\n    if (subject.viewer?.blockingByList) {\n      acc.addBlockingByList(subject.viewer?.blockingByList)\n    } else {\n      acc.addBlocking(subject.viewer?.blocking)\n    }\n  }\n  acc.addBlockedBy(subject.viewer?.blockedBy)\n\n  for (const label of filterAccountLabels(subject.labels)) {\n    acc.addLabel('account', label, opts)\n  }\n\n  return acc\n}\n\nexport function filterAccountLabels(labels?: Label[]): Label[] {\n  if (!labels) {\n    return []\n  }\n  return labels.filter(\n    (label) =>\n      !label.uri.endsWith('/app.bsky.actor.profile/self') ||\n      label.val === '!no-unauthenticated',\n  )\n}\n"],"names":[],"mappings":";;;;AAGA,QAAA,aAAA,GAAA,cA6BC;AAED,QAAA,mBAAA,GAAA,oBASC;AA3CD,MAAA,oCAAgD;AAGhD,SAAgB,aAAa,CAC3B,OAAiC,EACjC,IAAoB;IAEpB,MAAM,GAAG,GAAG,IAAI,WAAA,kBAAkB,EAAE,CAAA;IAEpC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAA;IACvB,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,KAAK,IAAI,CAAC,OAAO,CAAC,CAAA;IACzC,IAAI,OAAO,CAAC,MAAM,EAAE,KAAK,EAAE,CAAC;QAC1B,IAAI,OAAO,CAAC,MAAM,EAAE,WAAW,EAAE,CAAC;YAChC,GAAG,CAAC,cAAc,CAAC,OAAO,CAAC,MAAM,EAAE,WAAW,CAAC,CAAA;QACjD,CAAC,MAAM,CAAC;YACN,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;QACrC,CAAC;IACH,CAAC;IACD,IAAI,OAAO,CAAC,MAAM,EAAE,QAAQ,EAAE,CAAC;QAC7B,IAAI,OAAO,CAAC,MAAM,EAAE,cAAc,EAAE,CAAC;YACnC,GAAG,CAAC,iBAAiB,CAAC,OAAO,CAAC,MAAM,EAAE,cAAc,CAAC,CAAA;QACvD,CAAC,MAAM,CAAC;YACN,GAAG,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;QAC3C,CAAC;IACH,CAAC;IACD,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,SAAS,CAAC,CAAA;IAE3C,KAAK,MAAM,KAAK,IAAI,mBAAmB,CAAC,OAAO,CAAC,MAAM,CAAC,CAAE,CAAC;QACxD,GAAG,CAAC,QAAQ,CAAC,SAAS,EAAE,KAAK,EAAE,IAAI,CAAC,CAAA;IACtC,CAAC;IAED,OAAO,GAAG,CAAA;AACZ,CAAC;AAED,SAAgB,mBAAmB,CAAC,MAAgB;IAClD,IAAI,CAAC,MAAM,EAAE,CAAC;QACZ,OAAO,EAAE,CAAA;IACX,CAAC;IACD,OAAO,MAAM,CAAC,MAAM,CAClB,CAAC,KAAK,EAAE,CACN,CADQ,AACP,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,8BAA8B,CAAC,IACnD,KAAK,CAAC,GAAG,KAAK,qBAAqB,CACtC,CAAA;AACH,CAAC","ignoreList":[0]}},
    {"offset": {"line": 24401, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 24406, "column": 0}, "map": {"version":3,"file":"profile.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/moderation/subjects/profile.ts"],"sourcesContent":["import { ModerationDecision } from '../decision'\nimport { Label, ModerationSubjectProfile, ModerationOpts } from '../types'\n\nexport function decideProfile(\n  subject: ModerationSubjectProfile,\n  opts: ModerationOpts,\n): ModerationDecision {\n  const acc = new ModerationDecision()\n\n  acc.setDid(subject.did)\n  acc.setIsMe(subject.did === opts.userDid)\n  for (const label of filterProfileLabels(subject.labels)) {\n    acc.addLabel('profile', label, opts)\n  }\n\n  return acc\n}\n\nexport function filterProfileLabels(labels?: Label[]): Label[] {\n  if (!labels) {\n    return []\n  }\n  return labels.filter((label) =>\n    label.uri.endsWith('/app.bsky.actor.profile/self'),\n  )\n}\n"],"names":[],"mappings":";;;;AAGA,QAAA,aAAA,GAAA,cAaC;AAED,QAAA,mBAAA,GAAA,oBAOC;AAzBD,MAAA,oCAAgD;AAGhD,SAAgB,aAAa,CAC3B,OAAiC,EACjC,IAAoB;IAEpB,MAAM,GAAG,GAAG,IAAI,WAAA,kBAAkB,EAAE,CAAA;IAEpC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAA;IACvB,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,KAAK,IAAI,CAAC,OAAO,CAAC,CAAA;IACzC,KAAK,MAAM,KAAK,IAAI,mBAAmB,CAAC,OAAO,CAAC,MAAM,CAAC,CAAE,CAAC;QACxD,GAAG,CAAC,QAAQ,CAAC,SAAS,EAAE,KAAK,EAAE,IAAI,CAAC,CAAA;IACtC,CAAC;IAED,OAAO,GAAG,CAAA;AACZ,CAAC;AAED,SAAgB,mBAAmB,CAAC,MAAgB;IAClD,IAAI,CAAC,MAAM,EAAE,CAAC;QACZ,OAAO,EAAE,CAAA;IACX,CAAC;IACD,OAAO,MAAM,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,CAC3B,CAD6B,IACxB,CAAC,GAAG,CAAC,QAAQ,CAAC,8BAA8B,CAAC,CACnD,CAAA;AACH,CAAC","ignoreList":[0]}},
    {"offset": {"line": 24428, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 24433, "column": 0}, "map": {"version":3,"file":"notification.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/moderation/subjects/notification.ts"],"sourcesContent":["import { ModerationDecision } from '../decision'\nimport { ModerationSubjectNotification, ModerationOpts } from '../types'\nimport { decideAccount } from './account'\nimport { decideProfile } from './profile'\n\nexport function decideNotification(\n  subject: ModerationSubjectNotification,\n  opts: ModerationOpts,\n): ModerationDecision {\n  const acc = new ModerationDecision()\n\n  acc.setDid(subject.author.did)\n  acc.setIsMe(subject.author.did === opts.userDid)\n  if (subject.labels?.length) {\n    for (const label of subject.labels) {\n      acc.addLabel('content', label, opts)\n    }\n  }\n\n  return ModerationDecision.merge(\n    acc,\n    decideAccount(subject.author, opts),\n    decideProfile(subject.author, opts),\n  )\n}\n"],"names":[],"mappings":";;;;AAKA,QAAA,kBAAA,GAAA,mBAmBC;AAxBD,MAAA,oCAAgD;AAEhD,MAAA,iCAAyC;AACzC,MAAA,iCAAyC;AAEzC,SAAgB,kBAAkB,CAChC,OAAsC,EACtC,IAAoB;IAEpB,MAAM,GAAG,GAAG,IAAI,WAAA,kBAAkB,EAAE,CAAA;IAEpC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA;IAC9B,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,KAAK,IAAI,CAAC,OAAO,CAAC,CAAA;IAChD,IAAI,OAAO,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC;QAC3B,KAAK,MAAM,KAAK,IAAI,OAAO,CAAC,MAAM,CAAE,CAAC;YACnC,GAAG,CAAC,QAAQ,CAAC,SAAS,EAAE,KAAK,EAAE,IAAI,CAAC,CAAA;QACtC,CAAC;IACH,CAAC;IAED,OAAO,WAAA,kBAAkB,CAAC,KAAK,CAC7B,GAAG,EACH,CAAA,GAAA,UAAA,aAAa,EAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,EACnC,CAAA,GAAA,UAAA,aAAa,EAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CACpC,CAAA;AACH,CAAC","ignoreList":[0]}},
    {"offset": {"line": 24452, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 24457, "column": 0}, "map": {"version":3,"file":"mutewords.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/moderation/mutewords.ts"],"sourcesContent":["import { AppBskyActorDefs, AppBskyRichtextFacet } from '../client'\n\nconst REGEX = {\n  LEADING_TRAILING_PUNCTUATION: /(?:^\\p{P}+|\\p{P}+$)/gu,\n  ESCAPE: /[[\\]{}()*+?.\\\\^$|\\s]/g,\n  SEPARATORS: /[/\\-–—()[\\]_]+/g,\n  WORD_BOUNDARY: /[\\s\\n\\t\\r\\f\\v]+?/g,\n}\n\n/**\n * List of 2-letter lang codes for languages that either don't use spaces, or\n * don't use spaces in a way conducive to word-based filtering.\n *\n * For these, we use a simple `String.includes` to check for a match.\n */\nconst LANGUAGE_EXCEPTIONS = [\n  'ja', // Japanese\n  'zh', // Chinese\n  'ko', // Korean\n  'th', // Thai\n  'vi', // Vietnamese\n]\n\nexport function hasMutedWord({\n  mutedWords,\n  text,\n  facets,\n  outlineTags,\n  languages,\n  actor,\n}: {\n  mutedWords: AppBskyActorDefs.MutedWord[]\n  text: string\n  facets?: AppBskyRichtextFacet.Main[]\n  outlineTags?: string[]\n  languages?: string[]\n  actor?: AppBskyActorDefs.ProfileView\n}) {\n  const exception = LANGUAGE_EXCEPTIONS.includes(languages?.[0] || '')\n  const tags = ([] as string[])\n    .concat(outlineTags || [])\n    .concat(\n      (facets || []).flatMap((facet) =>\n        facet.features.filter(AppBskyRichtextFacet.isTag).map((tag) => tag.tag),\n      ),\n    )\n    .map((t) => t.toLowerCase())\n\n  for (const mute of mutedWords) {\n    const mutedWord = mute.value.toLowerCase()\n    const postText = text.toLowerCase()\n\n    // expired, ignore\n    if (mute.expiresAt && mute.expiresAt < new Date().toISOString()) continue\n\n    if (\n      mute.actorTarget === 'exclude-following' &&\n      Boolean(actor?.viewer?.following)\n    )\n      continue\n\n    // `content` applies to tags as well\n    if (tags.includes(mutedWord)) return true\n    // rest of the checks are for `content` only\n    if (!mute.targets.includes('content')) continue\n    // single character or other exception, has to use includes\n    if ((mutedWord.length === 1 || exception) && postText.includes(mutedWord))\n      return true\n    // too long\n    if (mutedWord.length > postText.length) continue\n    // exact match\n    if (mutedWord === postText) return true\n    // any muted phrase with space or punctuation\n    if (/(?:\\s|\\p{P})+?/u.test(mutedWord) && postText.includes(mutedWord))\n      return true\n\n    // check individual character groups\n    const words = postText.split(REGEX.WORD_BOUNDARY)\n    for (const word of words) {\n      if (word === mutedWord) return true\n\n      // compare word without leading/trailing punctuation, but allow internal\n      // punctuation (such as `s@ssy`)\n      const wordTrimmedPunctuation = word.replace(\n        REGEX.LEADING_TRAILING_PUNCTUATION,\n        '',\n      )\n\n      if (mutedWord === wordTrimmedPunctuation) return true\n      if (mutedWord.length > wordTrimmedPunctuation.length) continue\n\n      if (/\\p{P}+/u.test(wordTrimmedPunctuation)) {\n        const spacedWord = wordTrimmedPunctuation.replace(/\\p{P}+/gu, ' ')\n        if (spacedWord === mutedWord) return true\n\n        const contiguousWord = spacedWord.replace(/\\s/gu, '')\n        if (contiguousWord === mutedWord) return true\n\n        const wordParts = wordTrimmedPunctuation.split(/\\p{P}+/u)\n        for (const wordPart of wordParts) {\n          if (wordPart === mutedWord) return true\n        }\n      }\n    }\n  }\n\n  return false\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 24525, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 24530, "column": 0}, "map": {"version":3,"file":"post.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/moderation/subjects/post.ts"],"sourcesContent":["import { ModerationDecision } from '../decision'\nimport {\n  AppBskyFeedPost,\n  AppBskyEmbedImages,\n  AppBskyEmbedRecord,\n  AppBskyEmbedRecordWithMedia,\n  AppBskyEmbedExternal,\n  AppBskyActorDefs,\n} from '../../client'\nimport { ModerationSubjectPost, ModerationOpts } from '../types'\nimport { hasMutedWord } from '../mutewords'\nimport { decideAccount } from './account'\nimport { decideProfile } from './profile'\n\nexport function decidePost(\n  subject: ModerationSubjectPost,\n  opts: ModerationOpts,\n): ModerationDecision {\n  const acc = new ModerationDecision()\n\n  acc.setDid(subject.author.did)\n  acc.setIsMe(subject.author.did === opts.userDid)\n  if (subject.labels?.length) {\n    for (const label of subject.labels) {\n      acc.addLabel('content', label, opts)\n    }\n  }\n  acc.addHidden(checkHiddenPost(subject, opts.prefs.hiddenPosts))\n  if (!acc.isMe) {\n    acc.addMutedWord(checkMutedWords(subject, opts.prefs.mutedWords))\n  }\n\n  let embedAcc\n  if (subject.embed) {\n    if (AppBskyEmbedRecord.isViewRecord(subject.embed.record)) {\n      // quote post\n      embedAcc = decideQuotedPost(subject.embed.record, opts)\n    } else if (\n      AppBskyEmbedRecordWithMedia.isView(subject.embed) &&\n      AppBskyEmbedRecord.isViewRecord(subject.embed.record.record)\n    ) {\n      // quoted post with media\n      embedAcc = decideQuotedPost(subject.embed.record.record, opts)\n    } else if (AppBskyEmbedRecord.isViewBlocked(subject.embed.record)) {\n      // blocked quote post\n      embedAcc = decideBlockedQuotedPost(subject.embed.record, opts)\n    } else if (\n      AppBskyEmbedRecordWithMedia.isView(subject.embed) &&\n      AppBskyEmbedRecord.isViewBlocked(subject.embed.record.record)\n    ) {\n      // blocked quoted post with media\n      embedAcc = decideBlockedQuotedPost(subject.embed.record.record, opts)\n    }\n  }\n\n  return ModerationDecision.merge(\n    acc,\n    embedAcc?.downgrade(),\n    decideAccount(subject.author, opts),\n    decideProfile(subject.author, opts),\n  )\n}\n\nfunction decideQuotedPost(\n  subject: AppBskyEmbedRecord.ViewRecord,\n  opts: ModerationOpts,\n) {\n  const acc = new ModerationDecision()\n  acc.setDid(subject.author.did)\n  acc.setIsMe(subject.author.did === opts.userDid)\n  if (subject.labels?.length) {\n    for (const label of subject.labels) {\n      acc.addLabel('content', label, opts)\n    }\n  }\n  return ModerationDecision.merge(\n    acc,\n    decideAccount(subject.author, opts),\n    decideProfile(subject.author, opts),\n  )\n}\n\nfunction decideBlockedQuotedPost(\n  subject: AppBskyEmbedRecord.ViewBlocked,\n  opts: ModerationOpts,\n) {\n  const acc = new ModerationDecision()\n  acc.setDid(subject.author.did)\n  acc.setIsMe(subject.author.did === opts.userDid)\n  if (subject.author.viewer?.muted) {\n    if (subject.author.viewer?.mutedByList) {\n      acc.addMutedByList(subject.author.viewer?.mutedByList)\n    } else {\n      acc.addMuted(subject.author.viewer?.muted)\n    }\n  }\n  if (subject.author.viewer?.blocking) {\n    if (subject.author.viewer?.blockingByList) {\n      acc.addBlockingByList(subject.author.viewer?.blockingByList)\n    } else {\n      acc.addBlocking(subject.author.viewer?.blocking)\n    }\n  }\n  acc.addBlockedBy(subject.author.viewer?.blockedBy)\n  return acc\n}\n\nfunction checkHiddenPost(\n  subject: ModerationSubjectPost,\n  hiddenPosts: string[] | undefined,\n) {\n  if (!hiddenPosts?.length) {\n    return false\n  }\n  if (hiddenPosts.includes(subject.uri)) {\n    return true\n  }\n  if (subject.embed) {\n    if (\n      AppBskyEmbedRecord.isViewRecord(subject.embed.record) &&\n      hiddenPosts.includes(subject.embed.record.uri)\n    ) {\n      return true\n    }\n    if (\n      AppBskyEmbedRecordWithMedia.isView(subject.embed) &&\n      AppBskyEmbedRecord.isViewRecord(subject.embed.record.record) &&\n      hiddenPosts.includes(subject.embed.record.record.uri)\n    ) {\n      return true\n    }\n  }\n  return false\n}\n\nfunction checkMutedWords(\n  subject: ModerationSubjectPost,\n  mutedWords: AppBskyActorDefs.MutedWord[] | undefined,\n) {\n  if (!mutedWords?.length) {\n    return false\n  }\n\n  const postAuthor = subject.author\n\n  if (AppBskyFeedPost.isRecord(subject.record)) {\n    // post text\n    if (\n      hasMutedWord({\n        mutedWords,\n        text: subject.record.text,\n        facets: subject.record.facets,\n        outlineTags: subject.record.tags,\n        languages: subject.record.langs,\n        actor: postAuthor,\n      })\n    ) {\n      return true\n    }\n\n    if (\n      subject.record.embed &&\n      AppBskyEmbedImages.isMain(subject.record.embed)\n    ) {\n      // post images\n      for (const image of subject.record.embed.images) {\n        if (\n          hasMutedWord({\n            mutedWords,\n            text: image.alt,\n            languages: subject.record.langs,\n            actor: postAuthor,\n          })\n        ) {\n          return true\n        }\n      }\n    }\n  }\n\n  if (subject.embed) {\n    // quote post\n    if (AppBskyEmbedRecord.isViewRecord(subject.embed.record)) {\n      if (AppBskyFeedPost.isRecord(subject.embed.record.value)) {\n        const embeddedPost = subject.embed.record.value\n        const embedAuthor = subject.embed.record.author\n\n        // quoted post text\n        if (\n          hasMutedWord({\n            mutedWords,\n            text: embeddedPost.text,\n            facets: embeddedPost.facets,\n            outlineTags: embeddedPost.tags,\n            languages: embeddedPost.langs,\n            actor: embedAuthor,\n          })\n        ) {\n          return true\n        }\n\n        // quoted post's images\n        if (AppBskyEmbedImages.isMain(embeddedPost.embed)) {\n          for (const image of embeddedPost.embed.images) {\n            if (\n              hasMutedWord({\n                mutedWords,\n                text: image.alt,\n                languages: embeddedPost.langs,\n                actor: embedAuthor,\n              })\n            ) {\n              return true\n            }\n          }\n        }\n\n        // quoted post's link card\n        if (AppBskyEmbedExternal.isMain(embeddedPost.embed)) {\n          const { external } = embeddedPost.embed\n          if (\n            hasMutedWord({\n              mutedWords,\n              text: external.title + ' ' + external.description,\n              languages: [],\n              actor: embedAuthor,\n            })\n          ) {\n            return true\n          }\n        }\n\n        if (AppBskyEmbedRecordWithMedia.isMain(embeddedPost.embed)) {\n          // quoted post's link card when it did a quote + media\n          if (AppBskyEmbedExternal.isMain(embeddedPost.embed.media)) {\n            const { external } = embeddedPost.embed.media\n            if (\n              hasMutedWord({\n                mutedWords,\n                text: external.title + ' ' + external.description,\n                languages: [],\n                actor: embedAuthor,\n              })\n            ) {\n              return true\n            }\n          }\n\n          // quoted post's images when it did a quote + media\n          if (AppBskyEmbedImages.isMain(embeddedPost.embed.media)) {\n            for (const image of embeddedPost.embed.media.images) {\n              if (\n                hasMutedWord({\n                  mutedWords,\n                  text: image.alt,\n                  languages: AppBskyFeedPost.isRecord(embeddedPost.record)\n                    ? embeddedPost.langs\n                    : [],\n                  actor: embedAuthor,\n                })\n              ) {\n                return true\n              }\n            }\n          }\n        }\n      }\n    }\n    // link card\n    else if (AppBskyEmbedExternal.isView(subject.embed)) {\n      const { external } = subject.embed\n      if (\n        hasMutedWord({\n          mutedWords,\n          text: external.title + ' ' + external.description,\n          languages: [],\n          actor: postAuthor,\n        })\n      ) {\n        return true\n      }\n    }\n    // quote post with media\n    else if (\n      AppBskyEmbedRecordWithMedia.isView(subject.embed) &&\n      AppBskyEmbedRecord.isViewRecord(subject.embed.record.record)\n    ) {\n      const embedAuthor = subject.embed.record.record.author\n\n      // quoted post text\n      if (AppBskyFeedPost.isRecord(subject.embed.record.record.value)) {\n        const post = subject.embed.record.record.value\n        if (\n          hasMutedWord({\n            mutedWords,\n            text: post.text,\n            facets: post.facets,\n            outlineTags: post.tags,\n            languages: post.langs,\n            actor: embedAuthor,\n          })\n        ) {\n          return true\n        }\n      }\n\n      // quoted post images\n      if (AppBskyEmbedImages.isView(subject.embed.media)) {\n        for (const image of subject.embed.media.images) {\n          if (\n            hasMutedWord({\n              mutedWords,\n              text: image.alt,\n              languages: AppBskyFeedPost.isRecord(subject.record)\n                ? subject.record.langs\n                : [],\n              actor: embedAuthor,\n            })\n          ) {\n            return true\n          }\n        }\n      }\n\n      if (AppBskyEmbedExternal.isView(subject.embed.media)) {\n        const { external } = subject.embed.media\n        if (\n          hasMutedWord({\n            mutedWords,\n            text: external.title + ' ' + external.description,\n            languages: [],\n            actor: embedAuthor,\n          })\n        ) {\n          return true\n        }\n      }\n    }\n  }\n  return false\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 24775, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 24780, "column": 0}, "map": {"version":3,"file":"feed-generator.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/moderation/subjects/feed-generator.ts"],"sourcesContent":["import { ModerationDecision } from '../decision'\nimport { ModerationSubjectFeedGenerator, ModerationOpts } from '../types'\nimport { decideAccount } from './account'\nimport { decideProfile } from './profile'\n\nexport function decideFeedGenerator(\n  subject: ModerationSubjectFeedGenerator,\n  opts: ModerationOpts,\n): ModerationDecision {\n  const acc = new ModerationDecision()\n\n  acc.setDid(subject.creator.did)\n  acc.setIsMe(subject.creator.did === opts.userDid)\n  if (subject.labels?.length) {\n    for (const label of subject.labels) {\n      acc.addLabel('content', label, opts)\n    }\n  }\n  return ModerationDecision.merge(\n    acc,\n    decideAccount(subject.creator, opts),\n    decideProfile(subject.creator, opts),\n  )\n}\n"],"names":[],"mappings":";;;;AAKA,QAAA,mBAAA,GAAA,oBAkBC;AAvBD,MAAA,oCAAgD;AAEhD,MAAA,iCAAyC;AACzC,MAAA,iCAAyC;AAEzC,SAAgB,mBAAmB,CACjC,OAAuC,EACvC,IAAoB;IAEpB,MAAM,GAAG,GAAG,IAAI,WAAA,kBAAkB,EAAE,CAAA;IAEpC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAA;IAC/B,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,KAAK,IAAI,CAAC,OAAO,CAAC,CAAA;IACjD,IAAI,OAAO,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC;QAC3B,KAAK,MAAM,KAAK,IAAI,OAAO,CAAC,MAAM,CAAE,CAAC;YACnC,GAAG,CAAC,QAAQ,CAAC,SAAS,EAAE,KAAK,EAAE,IAAI,CAAC,CAAA;QACtC,CAAC;IACH,CAAC;IACD,OAAO,WAAA,kBAAkB,CAAC,KAAK,CAC7B,GAAG,EACH,CAAA,GAAA,UAAA,aAAa,EAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,EACpC,CAAA,GAAA,UAAA,aAAa,EAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,CACrC,CAAA;AACH,CAAC","ignoreList":[0]}},
    {"offset": {"line": 24799, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 24804, "column": 0}, "map": {"version":3,"file":"user-list.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/moderation/subjects/user-list.ts"],"sourcesContent":["import { AtUri } from '@atproto/syntax'\nimport { AppBskyActorDefs } from '../../client/index'\nimport { ModerationDecision } from '../decision'\nimport { ModerationSubjectUserList, ModerationOpts } from '../types'\nimport { decideAccount } from './account'\nimport { decideProfile } from './profile'\n\nexport function decideUserList(\n  subject: ModerationSubjectUserList,\n  opts: ModerationOpts,\n): ModerationDecision {\n  const acc = new ModerationDecision()\n\n  const creator = isProfile(subject.creator) ? subject.creator : undefined\n\n  if (creator) {\n    acc.setDid(creator.did)\n    acc.setIsMe(creator.did === opts.userDid)\n    if (subject.labels?.length) {\n      for (const label of subject.labels) {\n        acc.addLabel('content', label, opts)\n      }\n    }\n    return ModerationDecision.merge(\n      acc,\n      decideAccount(creator, opts),\n      decideProfile(creator, opts),\n    )\n  }\n\n  const creatorDid = new AtUri(subject.uri).hostname\n  acc.setDid(creatorDid)\n  acc.setIsMe(creatorDid === opts.userDid)\n  if (subject.labels?.length) {\n    for (const label of subject.labels) {\n      acc.addLabel('content', label, opts)\n    }\n  }\n  return acc\n}\n\nfunction isProfile(v: any): v is AppBskyActorDefs.ProfileViewBasic {\n  return v && typeof v === 'object' && 'did' in v\n}\n"],"names":[],"mappings":";;;;AAOA,QAAA,cAAA,GAAA,eAgCC;AAvCD,MAAA,sCAAuC;AAEvC,MAAA,oCAAgD;AAEhD,MAAA,iCAAyC;AACzC,MAAA,iCAAyC;AAEzC,SAAgB,cAAc,CAC5B,OAAkC,EAClC,IAAoB;IAEpB,MAAM,GAAG,GAAG,IAAI,WAAA,kBAAkB,EAAE,CAAA;IAEpC,MAAM,OAAO,GAAG,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAA;IAExE,IAAI,OAAO,EAAE,CAAC;QACZ,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAA;QACvB,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,KAAK,IAAI,CAAC,OAAO,CAAC,CAAA;QACzC,IAAI,OAAO,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC;YAC3B,KAAK,MAAM,KAAK,IAAI,OAAO,CAAC,MAAM,CAAE,CAAC;gBACnC,GAAG,CAAC,QAAQ,CAAC,SAAS,EAAE,KAAK,EAAE,IAAI,CAAC,CAAA;YACtC,CAAC;QACH,CAAC;QACD,OAAO,WAAA,kBAAkB,CAAC,KAAK,CAC7B,GAAG,EACH,CAAA,GAAA,UAAA,aAAa,EAAC,OAAO,EAAE,IAAI,CAAC,EAC5B,CAAA,GAAA,UAAA,aAAa,EAAC,OAAO,EAAE,IAAI,CAAC,CAC7B,CAAA;IACH,CAAC;IAED,MAAM,UAAU,GAAG,IAAI,SAAA,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAA;IAClD,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,CAAA;IACtB,GAAG,CAAC,OAAO,CAAC,UAAU,KAAK,IAAI,CAAC,OAAO,CAAC,CAAA;IACxC,IAAI,OAAO,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC;QAC3B,KAAK,MAAM,KAAK,IAAI,OAAO,CAAC,MAAM,CAAE,CAAC;YACnC,GAAG,CAAC,QAAQ,CAAC,SAAS,EAAE,KAAK,EAAE,IAAI,CAAC,CAAA;QACtC,CAAC;IACH,CAAC;IACD,OAAO,GAAG,CAAA;AACZ,CAAC;AAED,SAAS,SAAS,CAAC,CAAM;IACvB,OAAO,CAAC,IAAI,OAAO,CAAC,KAAK,QAAQ,IAAI,KAAK,IAAI,CAAC,CAAA;AACjD,CAAC","ignoreList":[0]}},
    {"offset": {"line": 24839, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 24844, "column": 0}, "map": {"version":3,"file":"util.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/moderation/util.ts"],"sourcesContent":["import {\n  AppBskyEmbedRecord,\n  AppBskyEmbedRecordWithMedia,\n  AppBskyLabelerDefs,\n  ComAtprotoLabelDefs,\n} from '../client'\nimport {\n  InterpretedLabelValueDefinition,\n  ModerationBehavior,\n  LabelPreference,\n  LabelValueDefinitionFlag,\n} from './types'\n\nexport function isQuotedPost(embed: unknown): embed is AppBskyEmbedRecord.View {\n  return Boolean(embed && AppBskyEmbedRecord.isView(embed))\n}\n\nexport function isQuotedPostWithMedia(\n  embed: unknown,\n): embed is AppBskyEmbedRecordWithMedia.View {\n  return Boolean(embed && AppBskyEmbedRecordWithMedia.isView(embed))\n}\n\nexport function interpretLabelValueDefinition(\n  def: ComAtprotoLabelDefs.LabelValueDefinition,\n  definedBy: string | undefined,\n): InterpretedLabelValueDefinition {\n  const behaviors: {\n    account: ModerationBehavior\n    profile: ModerationBehavior\n    content: ModerationBehavior\n  } = {\n    account: {},\n    profile: {},\n    content: {},\n  }\n  const alertOrInform: 'alert' | 'inform' | undefined =\n    def.severity === 'alert'\n      ? 'alert'\n      : def.severity === 'inform'\n        ? 'inform'\n        : undefined\n  if (def.blurs === 'content') {\n    // target=account, blurs=content\n    behaviors.account.profileList = alertOrInform\n    behaviors.account.profileView = alertOrInform\n    behaviors.account.contentList = 'blur'\n    behaviors.account.contentView = def.adultOnly ? 'blur' : alertOrInform\n    // target=profile, blurs=content\n    behaviors.profile.profileList = alertOrInform\n    behaviors.profile.profileView = alertOrInform\n    // target=content, blurs=content\n    behaviors.content.contentList = 'blur'\n    behaviors.content.contentView = def.adultOnly ? 'blur' : alertOrInform\n  } else if (def.blurs === 'media') {\n    // target=account, blurs=media\n    behaviors.account.profileList = alertOrInform\n    behaviors.account.profileView = alertOrInform\n    behaviors.account.avatar = 'blur'\n    behaviors.account.banner = 'blur'\n    // target=profile, blurs=media\n    behaviors.profile.profileList = alertOrInform\n    behaviors.profile.profileView = alertOrInform\n    behaviors.profile.avatar = 'blur'\n    behaviors.profile.banner = 'blur'\n    // target=content, blurs=media\n    behaviors.content.contentMedia = 'blur'\n  } else if (def.blurs === 'none') {\n    // target=account, blurs=none\n    behaviors.account.profileList = alertOrInform\n    behaviors.account.profileView = alertOrInform\n    behaviors.account.contentList = alertOrInform\n    behaviors.account.contentView = alertOrInform\n    // target=profile, blurs=none\n    behaviors.profile.profileList = alertOrInform\n    behaviors.profile.profileView = alertOrInform\n    // target=content, blurs=none\n    behaviors.content.contentList = alertOrInform\n    behaviors.content.contentView = alertOrInform\n  }\n\n  let defaultSetting: LabelPreference = 'warn'\n  if (def.defaultSetting === 'hide' || def.defaultSetting === 'ignore') {\n    defaultSetting = def.defaultSetting as LabelPreference\n  }\n\n  const flags: LabelValueDefinitionFlag[] = ['no-self']\n  if (def.adultOnly) {\n    flags.push('adult')\n  }\n\n  return {\n    ...def,\n    definedBy,\n    configurable: true,\n    defaultSetting,\n    flags,\n    behaviors,\n  }\n}\n\nexport function interpretLabelValueDefinitions(\n  labelerView: AppBskyLabelerDefs.LabelerViewDetailed,\n): InterpretedLabelValueDefinition[] {\n  return (labelerView.policies?.labelValueDefinitions || [])\n    .filter(\n      (labelValDef) =>\n        ComAtprotoLabelDefs.validateLabelValueDefinition(labelValDef).success,\n    )\n    .map((labelValDef) =>\n      interpretLabelValueDefinition(labelValDef, labelerView.creator.did),\n    )\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 24926, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 24931, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/moderation/index.ts"],"sourcesContent":["import {\n  ModerationSubjectProfile,\n  ModerationSubjectPost,\n  ModerationSubjectNotification,\n  ModerationSubjectFeedGenerator,\n  ModerationSubjectUserList,\n  ModerationOpts,\n} from './types'\nimport { decideAccount } from './subjects/account'\nimport { decideProfile } from './subjects/profile'\nimport { decideNotification } from './subjects/notification'\nimport { decidePost } from './subjects/post'\nimport { decideFeedGenerator } from './subjects/feed-generator'\nimport { decideUserList } from './subjects/user-list'\nimport { ModerationDecision } from './decision'\n\nexport { ModerationUI } from './ui'\nexport { ModerationDecision } from './decision'\nexport { hasMutedWord } from './mutewords'\nexport {\n  interpretLabelValueDefinition,\n  interpretLabelValueDefinitions,\n} from './util'\n\nexport function moderateProfile(\n  subject: ModerationSubjectProfile,\n  opts: ModerationOpts,\n): ModerationDecision {\n  return ModerationDecision.merge(\n    decideAccount(subject, opts),\n    decideProfile(subject, opts),\n  )\n}\n\nexport function moderatePost(\n  subject: ModerationSubjectPost,\n  opts: ModerationOpts,\n): ModerationDecision {\n  return decidePost(subject, opts)\n}\n\nexport function moderateNotification(\n  subject: ModerationSubjectNotification,\n  opts: ModerationOpts,\n): ModerationDecision {\n  return decideNotification(subject, opts)\n}\n\nexport function moderateFeedGenerator(\n  subject: ModerationSubjectFeedGenerator,\n  opts: ModerationOpts,\n): ModerationDecision {\n  return decideFeedGenerator(subject, opts)\n}\n\nexport function moderateUserList(\n  subject: ModerationSubjectUserList,\n  opts: ModerationOpts,\n): ModerationDecision {\n  return decideUserList(subject, opts)\n}\n"],"names":[],"mappings":";;;;;AAwBA,QAAA,eAAA,GAAA,gBAQC;AAED,QAAA,YAAA,GAAA,aAKC;AAED,QAAA,oBAAA,GAAA,qBAKC;AAED,QAAA,qBAAA,GAAA,sBAKC;AAED,QAAA,gBAAA,GAAA,iBAKC;AApDD,MAAA,0CAAkD;AAClD,MAAA,0CAAkD;AAClD,MAAA,oDAA4D;AAC5D,MAAA,oCAA4C;AAC5C,MAAA,wDAA+D;AAC/D,MAAA,8CAAqD;AACrD,MAAA,mCAA+C;AAE/C,IAAA,uBAAmC;AAA1B,OAAA,cAAA,CAAA,SAAA,gBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,KAAA,YAAY;IAAA;AAAA,GAAA;AACrB,IAAA,mCAA+C;AAAtC,OAAA,cAAA,CAAA,SAAA,sBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,WAAA,kBAAkB;IAAA;AAAA,GAAA;AAC3B,IAAA,qCAA0C;AAAjC,OAAA,cAAA,CAAA,SAAA,gBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,YAAA,YAAY;IAAA;AAAA,GAAA;AACrB,IAAA,2BAGe;AAFb,OAAA,cAAA,CAAA,SAAA,iCAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,OAAA,6BAA6B;IAAA;AAAA,GAAA;AAC7B,OAAA,cAAA,CAAA,SAAA,kCAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,OAAA,8BAA8B;IAAA;AAAA,GAAA;AAGhC,SAAgB,eAAe,CAC7B,OAAiC,EACjC,IAAoB;IAEpB,OAAO,WAAA,kBAAkB,CAAC,KAAK,CAC7B,CAAA,GAAA,UAAA,aAAa,EAAC,OAAO,EAAE,IAAI,CAAC,EAC5B,CAAA,GAAA,UAAA,aAAa,EAAC,OAAO,EAAE,IAAI,CAAC,CAC7B,CAAA;AACH,CAAC;AAED,SAAgB,YAAY,CAC1B,OAA8B,EAC9B,IAAoB;IAEpB,OAAO,CAAA,GAAA,OAAA,UAAU,EAAC,OAAO,EAAE,IAAI,CAAC,CAAA;AAClC,CAAC;AAED,SAAgB,oBAAoB,CAClC,OAAsC,EACtC,IAAoB;IAEpB,OAAO,CAAA,GAAA,eAAA,kBAAkB,EAAC,OAAO,EAAE,IAAI,CAAC,CAAA;AAC1C,CAAC;AAED,SAAgB,qBAAqB,CACnC,OAAuC,EACvC,IAAoB;IAEpB,OAAO,CAAA,GAAA,iBAAA,mBAAmB,EAAC,OAAO,EAAE,IAAI,CAAC,CAAA;AAC3C,CAAC;AAED,SAAgB,gBAAgB,CAC9B,OAAkC,EAClC,IAAoB;IAEpB,OAAO,CAAA,GAAA,YAAA,cAAc,EAAC,OAAO,EAAE,IAAI,CAAC,CAAA;AACtC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 24997, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 25002, "column": 0}, "map": {"version":3,"file":"mocker.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/mocker.ts"],"sourcesContent":["import {\n  ComAtprotoLabelDefs,\n  AppBskyFeedDefs,\n  AppBskyActorDefs,\n  AppBskyFeedPost,\n  AppBskyEmbedRecord,\n  AppBskyGraphDefs,\n  AppBskyNotificationListNotifications,\n} from './client'\n\nconst FAKE_CID = 'bafyreiclp443lavogvhj3d2ob2cxbfuscni2k5jk7bebjzg7khl3esabwq'\n\nexport const mock = {\n  post({\n    text,\n    facets,\n    reply,\n    embed,\n  }: {\n    text: string\n    facets?: AppBskyFeedPost.Record['facets']\n    reply?: AppBskyFeedPost.ReplyRef\n    embed?: AppBskyFeedPost.Record['embed']\n  }): AppBskyFeedPost.Record {\n    return {\n      $type: 'app.bsky.feed.post',\n      text,\n      facets,\n      reply,\n      embed,\n      langs: ['en'],\n      createdAt: new Date().toISOString(),\n    }\n  },\n\n  postView({\n    record,\n    author,\n    embed,\n    replyCount,\n    repostCount,\n    likeCount,\n    viewer,\n    labels,\n  }: {\n    record: AppBskyFeedPost.Record\n    author: AppBskyActorDefs.ProfileViewBasic\n    embed?: AppBskyFeedDefs.PostView['embed']\n    replyCount?: number\n    repostCount?: number\n    likeCount?: number\n    viewer?: AppBskyFeedDefs.ViewerState\n    labels?: ComAtprotoLabelDefs.Label[]\n  }): AppBskyFeedDefs.PostView {\n    return {\n      $type: 'app.bsky.feed.defs#postView',\n      uri: `at://${author.did}/app.bsky.feed.post/fake`,\n      cid: FAKE_CID,\n      author,\n      record,\n      embed,\n      replyCount,\n      repostCount,\n      likeCount,\n      indexedAt: new Date().toISOString(),\n      viewer,\n      labels,\n    }\n  },\n\n  embedRecordView({\n    record,\n    author,\n    labels,\n  }: {\n    record: AppBskyFeedPost.Record\n    author: AppBskyActorDefs.ProfileViewBasic\n    labels?: ComAtprotoLabelDefs.Label[]\n  }): AppBskyEmbedRecord.View {\n    return {\n      $type: 'app.bsky.embed.record#view',\n      record: {\n        $type: 'app.bsky.embed.record#viewRecord',\n        uri: `at://${author.did}/app.bsky.feed.post/fake`,\n        cid: FAKE_CID,\n        author,\n        value: record,\n        labels,\n        indexedAt: new Date().toISOString(),\n      },\n    }\n  },\n\n  profileViewBasic({\n    handle,\n    displayName,\n    description,\n    viewer,\n    labels,\n  }: {\n    handle: string\n    displayName?: string\n    description?: string\n    viewer?: AppBskyActorDefs.ViewerState\n    labels?: ComAtprotoLabelDefs.Label[]\n  }): AppBskyActorDefs.ProfileViewBasic {\n    return {\n      did: `did:web:${handle}`,\n      handle,\n      displayName,\n      description, // technically not in ProfileViewBasic but useful in some cases\n      viewer,\n      labels,\n    }\n  },\n\n  actorViewerState({\n    muted,\n    mutedByList,\n    blockedBy,\n    blocking,\n    blockingByList,\n    following,\n    followedBy,\n  }: {\n    muted?: boolean\n    mutedByList?: AppBskyGraphDefs.ListViewBasic\n    blockedBy?: boolean\n    blocking?: string\n    blockingByList?: AppBskyGraphDefs.ListViewBasic\n    following?: string\n    followedBy?: string\n  }): AppBskyActorDefs.ViewerState {\n    return {\n      muted,\n      mutedByList,\n      blockedBy,\n      blocking,\n      blockingByList,\n      following,\n      followedBy,\n    }\n  },\n\n  listViewBasic({ name }: { name: string }): AppBskyGraphDefs.ListViewBasic {\n    return {\n      uri: 'at://did:plc:fake/app.bsky.graph.list/fake',\n      cid: FAKE_CID,\n      name,\n      purpose: 'app.bsky.graph.defs#modlist',\n      indexedAt: new Date().toISOString(),\n    }\n  },\n\n  replyNotification({\n    author,\n    record,\n    labels,\n  }: {\n    record: AppBskyFeedPost.Record\n    author: AppBskyActorDefs.ProfileViewBasic\n    labels?: ComAtprotoLabelDefs.Label[]\n  }): AppBskyNotificationListNotifications.Notification {\n    return {\n      uri: `at://${author.did}/app.bsky.feed.post/fake`,\n      cid: FAKE_CID,\n      author,\n      reason: 'reply',\n      reasonSubject: `at://${author.did}/app.bsky.feed.post/fake-parent`,\n      record,\n      isRead: false,\n      indexedAt: new Date().toISOString(),\n      labels,\n    }\n  },\n\n  followNotification({\n    author,\n    subjectDid,\n    labels,\n  }: {\n    author: AppBskyActorDefs.ProfileViewBasic\n    subjectDid: string\n    labels?: ComAtprotoLabelDefs.Label[]\n  }): AppBskyNotificationListNotifications.Notification {\n    return {\n      uri: `at://${author.did}/app.bsky.graph.follow/fake`,\n      cid: FAKE_CID,\n      author,\n      reason: 'follow',\n      record: {\n        $type: 'app.bsky.graph.follow',\n        createdAt: new Date().toISOString(),\n        subject: subjectDid,\n      },\n      isRead: false,\n      indexedAt: new Date().toISOString(),\n      labels,\n    }\n  },\n\n  label({\n    val,\n    uri,\n    src,\n  }: {\n    val: string\n    uri: string\n    src?: string\n  }): ComAtprotoLabelDefs.Label {\n    return {\n      src: src || 'did:plc:fake-labeler',\n      uri,\n      val,\n      cts: new Date().toISOString(),\n    }\n  },\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 25120, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 25125, "column": 0}, "map": {"version":3,"file":"agent.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/agent.ts"],"sourcesContent":["import { TID } from '@atproto/common-web'\nimport { AtUri, ensureValidDid } from '@atproto/syntax'\nimport {\n  buildFetchHandler,\n  BuildFetchHandlerOptions,\n  FetchHandler,\n  XrpcClient,\n} from '@atproto/xrpc'\nimport AwaitLock from 'await-lock'\nimport {\n  AppBskyActorDefs,\n  AppBskyActorProfile,\n  AppBskyFeedPost,\n  AppBskyLabelerDefs,\n  AppNS,\n  ChatNS,\n  ComAtprotoRepoPutRecord,\n  ComNS,\n  ToolsNS,\n} from './client/index'\nimport { schemas } from './client/lexicons'\nimport { MutedWord, Nux } from './client/types/app/bsky/actor/defs'\nimport { BSKY_LABELER_DID } from './const'\nimport { interpretLabelValueDefinitions } from './moderation'\nimport { DEFAULT_LABEL_SETTINGS } from './moderation/const/labels'\nimport {\n  InterpretedLabelValueDefinition,\n  LabelPreference,\n  ModerationPrefs,\n} from './moderation/types'\nimport { SessionManager } from './session-manager'\nimport {\n  AtpAgentGlobalOpts,\n  AtprotoServiceType,\n  BskyFeedViewPreference,\n  BskyInterestsPreference,\n  BskyPreferences,\n  BskyThreadViewPreference,\n} from './types'\nimport {\n  asDid,\n  Did,\n  getSavedFeedType,\n  isDid,\n  sanitizeMutedWordValue,\n  savedFeedsToUriArrays,\n  validateSavedFeed,\n  validateNux,\n} from './util'\n\nconst FEED_VIEW_PREF_DEFAULTS = {\n  hideReplies: false,\n  hideRepliesByUnfollowed: true,\n  hideRepliesByLikeCount: 0,\n  hideReposts: false,\n  hideQuotePosts: false,\n}\n\nconst THREAD_VIEW_PREF_DEFAULTS = {\n  sort: 'hotness',\n  prioritizeFollowedUsers: true,\n}\n\ndeclare global {\n  interface Array<T> {\n    findLast(\n      predicate: (value: T, index: number, obj: T[]) => unknown,\n      thisArg?: any,\n    ): T\n  }\n}\n\nexport type { FetchHandler }\n\n/**\n * An {@link Agent} is an {@link AtpBaseClient} with the following\n * additional features:\n * - AT Protocol labelers configuration utilities\n * - AT Protocol proxy configuration utilities\n * - Cloning utilities\n * - `app.bsky` syntactic sugar\n * - `com.atproto` syntactic sugar\n */\nexport class Agent extends XrpcClient {\n  //#region Static configuration\n\n  /**\n   * The labelers to be used across all requests with the takedown capability\n   */\n  static appLabelers: readonly string[] = [BSKY_LABELER_DID]\n\n  /**\n   * Configures the Agent (or its sub classes) globally.\n   */\n  static configure(opts: AtpAgentGlobalOpts) {\n    if (opts.appLabelers) {\n      this.appLabelers = opts.appLabelers.map(asDid) // Validate & copy\n    }\n  }\n\n  //#endregion\n\n  com = new ComNS(this)\n  app = new AppNS(this)\n  chat = new ChatNS(this)\n  tools = new ToolsNS(this)\n\n  /** @deprecated use `this` instead */\n  get xrpc(): XrpcClient {\n    return this\n  }\n\n  readonly sessionManager: SessionManager\n\n  constructor(options: string | URL | SessionManager) {\n    const sessionManager: SessionManager =\n      typeof options === 'string' || options instanceof URL\n        ? {\n            did: undefined,\n            fetchHandler: buildFetchHandler(options),\n          }\n        : options\n\n    super((url, init) => {\n      const headers = new Headers(init?.headers)\n\n      if (this.proxy && !headers.has('atproto-proxy')) {\n        headers.set('atproto-proxy', this.proxy)\n      }\n\n      // Merge the labelers header of this particular request with the app &\n      // instance labelers.\n      headers.set(\n        'atproto-accept-labelers',\n        [\n          ...this.appLabelers.map((l) => `${l};redact`),\n          ...this.labelers,\n          headers.get('atproto-accept-labelers')?.trim(),\n        ]\n          .filter(Boolean)\n          .join(', '),\n      )\n\n      return this.sessionManager.fetchHandler(url, { ...init, headers })\n    }, schemas)\n\n    this.sessionManager = sessionManager\n  }\n\n  //#region Cloning utilities\n\n  clone(): Agent {\n    return this.copyInto(new Agent(this.sessionManager))\n  }\n\n  copyInto<T extends Agent>(inst: T): T {\n    inst.configureLabelers(this.labelers)\n    inst.configureProxy(this.proxy ?? null)\n    inst.clearHeaders()\n    for (const [key, value] of this.headers) inst.setHeader(key, value)\n    return inst\n  }\n\n  withProxy(serviceType: AtprotoServiceType, did: string) {\n    const inst = this.clone()\n    inst.configureProxy(`${asDid(did)}#${serviceType}`)\n    return inst as ReturnType<this['clone']>\n  }\n\n  //#endregion\n\n  //#region ATPROTO labelers configuration utilities\n\n  /**\n   * The labelers statically configured on the class of the current instance.\n   */\n  get appLabelers() {\n    return (this.constructor as typeof Agent).appLabelers\n  }\n\n  labelers: readonly string[] = []\n\n  configureLabelers(labelerDids: readonly string[]) {\n    this.labelers = labelerDids.map(asDid) // Validate & copy\n  }\n\n  /** @deprecated use {@link configureLabelers} instead */\n  configureLabelersHeader(labelerDids: readonly string[]) {\n    // Filtering non-did values for backwards compatibility\n    this.configureLabelers(labelerDids.filter(isDid))\n  }\n\n  //#endregion\n\n  //#region ATPROTO proxy configuration utilities\n\n  proxy?: `${Did}#${AtprotoServiceType}`\n\n  configureProxy(value: `${Did}#${AtprotoServiceType}` | null) {\n    if (value === null) this.proxy = undefined\n    else if (isDid(value)) this.proxy = value\n    else throw new TypeError('Invalid proxy DID')\n  }\n\n  /** @deprecated use {@link configureProxy} instead */\n  configureProxyHeader(serviceType: AtprotoServiceType, did: string) {\n    // Ignoring non-did values for backwards compatibility\n    if (isDid(did)) this.configureProxy(`${did}#${serviceType}`)\n  }\n\n  //#endregion\n\n  //#region Session management\n\n  /**\n   * Get the authenticated user's DID, if any.\n   */\n  get did() {\n    return this.sessionManager.did\n  }\n\n  /** @deprecated Use {@link Agent.assertDid} instead */\n  get accountDid() {\n    return this.assertDid\n  }\n\n  /**\n   * Get the authenticated user's DID, or throw an error if not authenticated.\n   */\n  get assertDid(): string {\n    this.assertAuthenticated()\n    return this.did\n  }\n\n  /**\n   * Assert that the user is authenticated.\n   */\n  public assertAuthenticated(): asserts this is { did: string } {\n    if (!this.did) throw new Error('Not logged in')\n  }\n\n  //#endregion\n\n  /** @deprecated use \"this\" instead */\n  get api() {\n    return this\n  }\n\n  //#region \"com.atproto\" lexicon short hand methods\n\n  /**\n   * Upload a binary blob to the server\n   */\n  uploadBlob: typeof this.com.atproto.repo.uploadBlob = (data, opts) =>\n    this.com.atproto.repo.uploadBlob(data, opts)\n\n  /**\n   * Resolve a handle to a DID\n   */\n  resolveHandle: typeof this.com.atproto.identity.resolveHandle = (\n    params,\n    opts,\n  ) => this.com.atproto.identity.resolveHandle(params, opts)\n\n  /**\n   * Change the user's handle\n   */\n  updateHandle: typeof this.com.atproto.identity.updateHandle = (data, opts) =>\n    this.com.atproto.identity.updateHandle(data, opts)\n\n  /**\n   * Create a moderation report\n   */\n  createModerationReport: typeof this.com.atproto.moderation.createReport = (\n    data,\n    opts,\n  ) => this.com.atproto.moderation.createReport(data, opts)\n\n  //#endregion\n\n  //#region \"app.bsky\" lexicon short hand methods\n\n  getTimeline: typeof this.app.bsky.feed.getTimeline = (params, opts) =>\n    this.app.bsky.feed.getTimeline(params, opts)\n\n  getAuthorFeed: typeof this.app.bsky.feed.getAuthorFeed = (params, opts) =>\n    this.app.bsky.feed.getAuthorFeed(params, opts)\n\n  getActorLikes: typeof this.app.bsky.feed.getActorLikes = (params, opts) =>\n    this.app.bsky.feed.getActorLikes(params, opts)\n\n  getPostThread: typeof this.app.bsky.feed.getPostThread = (params, opts) =>\n    this.app.bsky.feed.getPostThread(params, opts)\n\n  getPost: typeof this.app.bsky.feed.post.get = (params) =>\n    this.app.bsky.feed.post.get(params)\n\n  getPosts: typeof this.app.bsky.feed.getPosts = (params, opts) =>\n    this.app.bsky.feed.getPosts(params, opts)\n\n  getLikes: typeof this.app.bsky.feed.getLikes = (params, opts) =>\n    this.app.bsky.feed.getLikes(params, opts)\n\n  getRepostedBy: typeof this.app.bsky.feed.getRepostedBy = (params, opts) =>\n    this.app.bsky.feed.getRepostedBy(params, opts)\n\n  getFollows: typeof this.app.bsky.graph.getFollows = (params, opts) =>\n    this.app.bsky.graph.getFollows(params, opts)\n\n  getFollowers: typeof this.app.bsky.graph.getFollowers = (params, opts) =>\n    this.app.bsky.graph.getFollowers(params, opts)\n\n  getProfile: typeof this.app.bsky.actor.getProfile = (params, opts) =>\n    this.app.bsky.actor.getProfile(params, opts)\n\n  getProfiles: typeof this.app.bsky.actor.getProfiles = (params, opts) =>\n    this.app.bsky.actor.getProfiles(params, opts)\n\n  getSuggestions: typeof this.app.bsky.actor.getSuggestions = (params, opts) =>\n    this.app.bsky.actor.getSuggestions(params, opts)\n\n  searchActors: typeof this.app.bsky.actor.searchActors = (params, opts) =>\n    this.app.bsky.actor.searchActors(params, opts)\n\n  searchActorsTypeahead: typeof this.app.bsky.actor.searchActorsTypeahead = (\n    params,\n    opts,\n  ) => this.app.bsky.actor.searchActorsTypeahead(params, opts)\n\n  listNotifications: typeof this.app.bsky.notification.listNotifications = (\n    params,\n    opts,\n  ) => this.app.bsky.notification.listNotifications(params, opts)\n\n  countUnreadNotifications: typeof this.app.bsky.notification.getUnreadCount = (\n    params,\n    opts,\n  ) => this.app.bsky.notification.getUnreadCount(params, opts)\n\n  getLabelers: typeof this.app.bsky.labeler.getServices = (params, opts) =>\n    this.app.bsky.labeler.getServices(params, opts)\n\n  async getLabelDefinitions(\n    prefs: BskyPreferences | ModerationPrefs | string[],\n  ): Promise<Record<string, InterpretedLabelValueDefinition[]>> {\n    // collect the labeler dids\n    const dids: string[] = [...this.appLabelers]\n    if (isBskyPrefs(prefs)) {\n      dids.push(...prefs.moderationPrefs.labelers.map((l) => l.did))\n    } else if (isModPrefs(prefs)) {\n      dids.push(...prefs.labelers.map((l) => l.did))\n    } else {\n      dids.push(...prefs)\n    }\n\n    // fetch their definitions\n    const labelers = await this.getLabelers({\n      dids,\n      detailed: true,\n    })\n\n    // assemble a map of labeler dids to the interpreted label value definitions\n    const labelDefs = {}\n    if (labelers.data) {\n      for (const labeler of labelers.data\n        .views as AppBskyLabelerDefs.LabelerViewDetailed[]) {\n        labelDefs[labeler.creator.did] = interpretLabelValueDefinitions(labeler)\n      }\n    }\n\n    return labelDefs\n  }\n\n  async post(\n    record: Partial<AppBskyFeedPost.Record> &\n      Omit<AppBskyFeedPost.Record, 'createdAt'>,\n  ) {\n    record.createdAt ||= new Date().toISOString()\n    return this.app.bsky.feed.post.create(\n      { repo: this.accountDid },\n      record as AppBskyFeedPost.Record,\n    )\n  }\n\n  async deletePost(postUri: string) {\n    this.assertAuthenticated()\n\n    const postUrip = new AtUri(postUri)\n    return this.app.bsky.feed.post.delete({\n      repo: postUrip.hostname,\n      rkey: postUrip.rkey,\n    })\n  }\n\n  async like(uri: string, cid: string) {\n    return this.app.bsky.feed.like.create(\n      { repo: this.accountDid },\n      {\n        subject: { uri, cid },\n        createdAt: new Date().toISOString(),\n      },\n    )\n  }\n\n  async deleteLike(likeUri: string) {\n    this.assertAuthenticated()\n\n    const likeUrip = new AtUri(likeUri)\n    return this.app.bsky.feed.like.delete({\n      repo: likeUrip.hostname,\n      rkey: likeUrip.rkey,\n    })\n  }\n\n  async repost(uri: string, cid: string) {\n    return this.app.bsky.feed.repost.create(\n      { repo: this.accountDid },\n      {\n        subject: { uri, cid },\n        createdAt: new Date().toISOString(),\n      },\n    )\n  }\n\n  async deleteRepost(repostUri: string) {\n    this.assertAuthenticated()\n\n    const repostUrip = new AtUri(repostUri)\n    return this.app.bsky.feed.repost.delete({\n      repo: repostUrip.hostname,\n      rkey: repostUrip.rkey,\n    })\n  }\n\n  async follow(subjectDid: string) {\n    return this.app.bsky.graph.follow.create(\n      { repo: this.accountDid },\n      {\n        subject: subjectDid,\n        createdAt: new Date().toISOString(),\n      },\n    )\n  }\n\n  async deleteFollow(followUri: string) {\n    this.assertAuthenticated()\n\n    const followUrip = new AtUri(followUri)\n    return this.app.bsky.graph.follow.delete({\n      repo: followUrip.hostname,\n      rkey: followUrip.rkey,\n    })\n  }\n\n  async upsertProfile(\n    updateFn: (\n      existing: AppBskyActorProfile.Record | undefined,\n    ) => AppBskyActorProfile.Record | Promise<AppBskyActorProfile.Record>,\n  ) {\n    const repo = this.accountDid\n\n    let retriesRemaining = 5\n    while (retriesRemaining >= 0) {\n      // fetch existing\n      const existing = await this.com.atproto.repo\n        .getRecord({\n          repo,\n          collection: 'app.bsky.actor.profile',\n          rkey: 'self',\n        })\n        .catch((_) => undefined)\n\n      // run the update\n      const updated = await updateFn(existing?.data.value)\n      if (updated) {\n        updated.$type = 'app.bsky.actor.profile'\n      }\n\n      // validate the record\n      const validation = AppBskyActorProfile.validateRecord(updated)\n      if (!validation.success) {\n        throw validation.error\n      }\n\n      try {\n        // attempt the put\n        await this.com.atproto.repo.putRecord({\n          repo,\n          collection: 'app.bsky.actor.profile',\n          rkey: 'self',\n          record: updated,\n          swapRecord: existing?.data.cid || null,\n        })\n      } catch (e: unknown) {\n        if (\n          retriesRemaining > 0 &&\n          e instanceof ComAtprotoRepoPutRecord.InvalidSwapError\n        ) {\n          // try again\n          retriesRemaining--\n          continue\n        } else {\n          throw e\n        }\n      }\n      break\n    }\n  }\n\n  async mute(actor: string) {\n    return this.app.bsky.graph.muteActor({ actor })\n  }\n\n  async unmute(actor: string) {\n    return this.app.bsky.graph.unmuteActor({ actor })\n  }\n\n  async muteModList(uri: string) {\n    return this.app.bsky.graph.muteActorList({ list: uri })\n  }\n\n  async unmuteModList(uri: string) {\n    return this.app.bsky.graph.unmuteActorList({ list: uri })\n  }\n\n  async blockModList(uri: string) {\n    return this.app.bsky.graph.listblock.create(\n      { repo: this.accountDid },\n      {\n        subject: uri,\n        createdAt: new Date().toISOString(),\n      },\n    )\n  }\n\n  async unblockModList(uri: string) {\n    const repo = this.accountDid\n\n    const listInfo = await this.app.bsky.graph.getList({\n      list: uri,\n      limit: 1,\n    })\n\n    const blocked = listInfo.data.list.viewer?.blocked\n    if (blocked) {\n      const { rkey } = new AtUri(blocked)\n      return this.app.bsky.graph.listblock.delete({\n        repo,\n        rkey,\n      })\n    }\n  }\n\n  async updateSeenNotifications(seenAt = new Date().toISOString()) {\n    return this.app.bsky.notification.updateSeen({ seenAt })\n  }\n\n  async getPreferences(): Promise<BskyPreferences> {\n    const prefs: BskyPreferences = {\n      feeds: {\n        saved: undefined,\n        pinned: undefined,\n      },\n      // @ts-ignore populating below\n      savedFeeds: undefined,\n      feedViewPrefs: {\n        home: {\n          ...FEED_VIEW_PREF_DEFAULTS,\n        },\n      },\n      threadViewPrefs: { ...THREAD_VIEW_PREF_DEFAULTS },\n      moderationPrefs: {\n        adultContentEnabled: false,\n        labels: { ...DEFAULT_LABEL_SETTINGS },\n        labelers: this.appLabelers.map((did) => ({\n          did,\n          labels: {},\n        })),\n        mutedWords: [],\n        hiddenPosts: [],\n      },\n      birthDate: undefined,\n      interests: {\n        tags: [],\n      },\n      bskyAppState: {\n        queuedNudges: [],\n        activeProgressGuide: undefined,\n        nuxs: [],\n      },\n    }\n    const res = await this.app.bsky.actor.getPreferences({})\n    const labelPrefs: AppBskyActorDefs.ContentLabelPref[] = []\n    for (const pref of res.data.preferences) {\n      if (\n        AppBskyActorDefs.isAdultContentPref(pref) &&\n        AppBskyActorDefs.validateAdultContentPref(pref).success\n      ) {\n        // adult content preferences\n        prefs.moderationPrefs.adultContentEnabled = pref.enabled\n      } else if (\n        AppBskyActorDefs.isContentLabelPref(pref) &&\n        AppBskyActorDefs.validateContentLabelPref(pref).success\n      ) {\n        // content label preference\n        const adjustedPref = adjustLegacyContentLabelPref(pref)\n        labelPrefs.push(adjustedPref)\n      } else if (\n        AppBskyActorDefs.isLabelersPref(pref) &&\n        AppBskyActorDefs.validateLabelersPref(pref).success\n      ) {\n        // labelers preferences\n        prefs.moderationPrefs.labelers = this.appLabelers\n          .map((did: string) => ({ did, labels: {} }))\n          .concat(\n            pref.labelers.map((labeler) => ({\n              ...labeler,\n              labels: {},\n            })),\n          )\n      } else if (\n        AppBskyActorDefs.isSavedFeedsPrefV2(pref) &&\n        AppBskyActorDefs.validateSavedFeedsPrefV2(pref).success\n      ) {\n        prefs.savedFeeds = pref.items\n      } else if (\n        AppBskyActorDefs.isSavedFeedsPref(pref) &&\n        AppBskyActorDefs.validateSavedFeedsPref(pref).success\n      ) {\n        // saved and pinned feeds\n        prefs.feeds.saved = pref.saved\n        prefs.feeds.pinned = pref.pinned\n      } else if (\n        AppBskyActorDefs.isPersonalDetailsPref(pref) &&\n        AppBskyActorDefs.validatePersonalDetailsPref(pref).success\n      ) {\n        // birth date (irl)\n        if (pref.birthDate) {\n          prefs.birthDate = new Date(pref.birthDate)\n        }\n      } else if (\n        AppBskyActorDefs.isFeedViewPref(pref) &&\n        AppBskyActorDefs.validateFeedViewPref(pref).success\n      ) {\n        // feed view preferences\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { $type, feed, ...v } = pref\n        prefs.feedViewPrefs[pref.feed] = { ...FEED_VIEW_PREF_DEFAULTS, ...v }\n      } else if (\n        AppBskyActorDefs.isThreadViewPref(pref) &&\n        AppBskyActorDefs.validateThreadViewPref(pref).success\n      ) {\n        // thread view preferences\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { $type, ...v } = pref\n        prefs.threadViewPrefs = { ...prefs.threadViewPrefs, ...v }\n      } else if (\n        AppBskyActorDefs.isInterestsPref(pref) &&\n        AppBskyActorDefs.validateInterestsPref(pref).success\n      ) {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { $type, ...v } = pref\n        prefs.interests = { ...prefs.interests, ...v }\n      } else if (\n        AppBskyActorDefs.isMutedWordsPref(pref) &&\n        AppBskyActorDefs.validateMutedWordsPref(pref).success\n      ) {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { $type, ...v } = pref\n        prefs.moderationPrefs.mutedWords = v.items\n\n        if (prefs.moderationPrefs.mutedWords.length) {\n          prefs.moderationPrefs.mutedWords =\n            prefs.moderationPrefs.mutedWords.map((word) => {\n              word.actorTarget = word.actorTarget || 'all'\n              return word\n            })\n        }\n      } else if (\n        AppBskyActorDefs.isHiddenPostsPref(pref) &&\n        AppBskyActorDefs.validateHiddenPostsPref(pref).success\n      ) {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { $type, ...v } = pref\n        prefs.moderationPrefs.hiddenPosts = v.items\n      } else if (\n        AppBskyActorDefs.isBskyAppStatePref(pref) &&\n        AppBskyActorDefs.validateBskyAppStatePref(pref).success\n      ) {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { $type, ...v } = pref\n        prefs.bskyAppState.queuedNudges = v.queuedNudges || []\n        prefs.bskyAppState.activeProgressGuide = v.activeProgressGuide\n        prefs.bskyAppState.nuxs = v.nuxs || []\n      }\n    }\n\n    /*\n     * If `prefs.savedFeeds` is undefined, no `savedFeedsPrefV2` exists, which\n     * means we want to try to migrate if needed.\n     *\n     * If v1 prefs exist, they will be migrated to v2.\n     *\n     * If no v1 prefs exist, the user is either new, or could be old and has\n     * never edited their feeds.\n     */\n    if (prefs.savedFeeds == null) {\n      const { saved, pinned } = prefs.feeds\n\n      if (saved && pinned) {\n        const uniqueMigratedSavedFeeds: Map<\n          string,\n          AppBskyActorDefs.SavedFeed\n        > = new Map()\n\n        // insert Following feed first\n        uniqueMigratedSavedFeeds.set('timeline', {\n          id: TID.nextStr(),\n          type: 'timeline',\n          value: 'following',\n          pinned: true,\n        })\n\n        // use pinned as source of truth for feed order\n        for (const uri of pinned) {\n          const type = getSavedFeedType(uri)\n          // only want supported types\n          if (type === 'unknown') continue\n          uniqueMigratedSavedFeeds.set(uri, {\n            id: TID.nextStr(),\n            type,\n            value: uri,\n            pinned: true,\n          })\n        }\n\n        for (const uri of saved) {\n          if (!uniqueMigratedSavedFeeds.has(uri)) {\n            const type = getSavedFeedType(uri)\n            // only want supported types\n            if (type === 'unknown') continue\n            uniqueMigratedSavedFeeds.set(uri, {\n              id: TID.nextStr(),\n              type,\n              value: uri,\n              pinned: false,\n            })\n          }\n        }\n\n        prefs.savedFeeds = Array.from(uniqueMigratedSavedFeeds.values())\n      } else {\n        prefs.savedFeeds = [\n          {\n            id: TID.nextStr(),\n            type: 'timeline',\n            value: 'following',\n            pinned: true,\n          },\n        ]\n      }\n\n      // save to user preferences so this migration doesn't re-occur\n      await this.overwriteSavedFeeds(prefs.savedFeeds)\n    }\n\n    // apply the label prefs\n    for (const pref of labelPrefs) {\n      if (pref.labelerDid) {\n        const labeler = prefs.moderationPrefs.labelers.find(\n          (labeler) => labeler.did === pref.labelerDid,\n        )\n        if (!labeler) continue\n        labeler.labels[pref.label] = pref.visibility as LabelPreference\n      } else {\n        prefs.moderationPrefs.labels[pref.label] =\n          pref.visibility as LabelPreference\n      }\n    }\n\n    prefs.moderationPrefs.labels = remapLegacyLabels(\n      prefs.moderationPrefs.labels,\n    )\n\n    // automatically configure the client\n    this.configureLabelers(prefsArrayToLabelerDids(res.data.preferences))\n\n    return prefs\n  }\n\n  async overwriteSavedFeeds(savedFeeds: AppBskyActorDefs.SavedFeed[]) {\n    savedFeeds.forEach(validateSavedFeed)\n    const uniqueSavedFeeds = new Map<string, AppBskyActorDefs.SavedFeed>()\n    savedFeeds.forEach((feed) => {\n      // remove and re-insert to preserve order\n      if (uniqueSavedFeeds.has(feed.id)) {\n        uniqueSavedFeeds.delete(feed.id)\n      }\n      uniqueSavedFeeds.set(feed.id, feed)\n    })\n    return this.updateSavedFeedsV2Preferences(() =>\n      Array.from(uniqueSavedFeeds.values()),\n    )\n  }\n\n  async updateSavedFeeds(savedFeedsToUpdate: AppBskyActorDefs.SavedFeed[]) {\n    savedFeedsToUpdate.map(validateSavedFeed)\n    return this.updateSavedFeedsV2Preferences((savedFeeds) => {\n      return savedFeeds.map((savedFeed) => {\n        const updatedVersion = savedFeedsToUpdate.find(\n          (updated) => savedFeed.id === updated.id,\n        )\n        if (updatedVersion) {\n          return {\n            ...savedFeed,\n            // only update pinned\n            pinned: updatedVersion.pinned,\n          }\n        }\n        return savedFeed\n      })\n    })\n  }\n\n  async addSavedFeeds(\n    savedFeeds: Pick<AppBskyActorDefs.SavedFeed, 'type' | 'value' | 'pinned'>[],\n  ) {\n    const toSave: AppBskyActorDefs.SavedFeed[] = savedFeeds.map((f) => ({\n      ...f,\n      id: TID.nextStr(),\n    }))\n    toSave.forEach(validateSavedFeed)\n    return this.updateSavedFeedsV2Preferences((savedFeeds) => [\n      ...savedFeeds,\n      ...toSave,\n    ])\n  }\n\n  async removeSavedFeeds(ids: string[]) {\n    return this.updateSavedFeedsV2Preferences((savedFeeds) => [\n      ...savedFeeds.filter((feed) => !ids.find((id) => feed.id === id)),\n    ])\n  }\n\n  /**\n   * @deprecated use `overwriteSavedFeeds`\n   */\n  async setSavedFeeds(saved: string[], pinned: string[]) {\n    return this.updateFeedPreferences(() => ({\n      saved,\n      pinned,\n    }))\n  }\n\n  /**\n   * @deprecated use `addSavedFeeds`\n   */\n  async addSavedFeed(v: string) {\n    return this.updateFeedPreferences((saved: string[], pinned: string[]) => ({\n      saved: [...saved.filter((uri) => uri !== v), v],\n      pinned,\n    }))\n  }\n\n  /**\n   * @deprecated use `removeSavedFeeds`\n   */\n  async removeSavedFeed(v: string) {\n    return this.updateFeedPreferences((saved: string[], pinned: string[]) => ({\n      saved: saved.filter((uri) => uri !== v),\n      pinned: pinned.filter((uri) => uri !== v),\n    }))\n  }\n\n  /**\n   * @deprecated use `addSavedFeeds` or `updateSavedFeeds`\n   */\n  async addPinnedFeed(v: string) {\n    return this.updateFeedPreferences((saved: string[], pinned: string[]) => ({\n      saved: [...saved.filter((uri) => uri !== v), v],\n      pinned: [...pinned.filter((uri) => uri !== v), v],\n    }))\n  }\n\n  /**\n   * @deprecated use `updateSavedFeeds` or `removeSavedFeeds`\n   */\n  async removePinnedFeed(v: string) {\n    return this.updateFeedPreferences((saved: string[], pinned: string[]) => ({\n      saved,\n      pinned: pinned.filter((uri) => uri !== v),\n    }))\n  }\n\n  async setAdultContentEnabled(v: boolean) {\n    await this.updatePreferences((prefs: AppBskyActorDefs.Preferences) => {\n      let adultContentPref = prefs.findLast(\n        (pref) =>\n          AppBskyActorDefs.isAdultContentPref(pref) &&\n          AppBskyActorDefs.validateAdultContentPref(pref).success,\n      )\n      if (adultContentPref) {\n        adultContentPref.enabled = v\n      } else {\n        adultContentPref = {\n          $type: 'app.bsky.actor.defs#adultContentPref',\n          enabled: v,\n        }\n      }\n      return prefs\n        .filter((pref) => !AppBskyActorDefs.isAdultContentPref(pref))\n        .concat([adultContentPref])\n    })\n  }\n\n  async setContentLabelPref(\n    key: string,\n    value: LabelPreference,\n    labelerDid?: string,\n  ) {\n    if (labelerDid) {\n      ensureValidDid(labelerDid)\n    }\n    await this.updatePreferences((prefs: AppBskyActorDefs.Preferences) => {\n      let labelPref = prefs.findLast(\n        (pref) =>\n          AppBskyActorDefs.isContentLabelPref(pref) &&\n          AppBskyActorDefs.validateContentLabelPref(pref).success &&\n          pref.label === key &&\n          pref.labelerDid === labelerDid,\n      )\n      let legacyLabelPref: AppBskyActorDefs.ContentLabelPref | undefined\n\n      if (labelPref) {\n        labelPref.visibility = value\n      } else {\n        labelPref = {\n          $type: 'app.bsky.actor.defs#contentLabelPref',\n          label: key,\n          labelerDid,\n          visibility: value,\n        }\n      }\n\n      if (AppBskyActorDefs.isContentLabelPref(labelPref)) {\n        // is global\n        if (!labelPref.labelerDid) {\n          const legacyLabelValue = {\n            'graphic-media': 'gore',\n            porn: 'nsfw',\n            sexual: 'suggestive',\n          }[labelPref.label]\n\n          // if it's a legacy label, double-write the legacy label\n          if (legacyLabelValue) {\n            legacyLabelPref = prefs.findLast(\n              (pref) =>\n                AppBskyActorDefs.isContentLabelPref(pref) &&\n                AppBskyActorDefs.validateContentLabelPref(pref).success &&\n                pref.label === legacyLabelValue &&\n                pref.labelerDid === undefined,\n            ) as AppBskyActorDefs.ContentLabelPref | undefined\n\n            if (legacyLabelPref) {\n              legacyLabelPref.visibility = value\n            } else {\n              legacyLabelPref = {\n                $type: 'app.bsky.actor.defs#contentLabelPref',\n                label: legacyLabelValue,\n                labelerDid: undefined,\n                visibility: value,\n              }\n            }\n          }\n        }\n      }\n\n      return prefs\n        .filter(\n          (pref) =>\n            !AppBskyActorDefs.isContentLabelPref(pref) ||\n            !(pref.label === key && pref.labelerDid === labelerDid),\n        )\n        .concat([labelPref])\n        .filter((pref) => {\n          if (!legacyLabelPref) return true\n          return (\n            !AppBskyActorDefs.isContentLabelPref(pref) ||\n            !(\n              pref.label === legacyLabelPref.label &&\n              pref.labelerDid === undefined\n            )\n          )\n        })\n        .concat(legacyLabelPref ? [legacyLabelPref] : [])\n    })\n  }\n\n  async addLabeler(did: string) {\n    const prefs = await this.updatePreferences(\n      (prefs: AppBskyActorDefs.Preferences) => {\n        let labelersPref = prefs.findLast(\n          (pref) =>\n            AppBskyActorDefs.isLabelersPref(pref) &&\n            AppBskyActorDefs.validateLabelersPref(pref).success,\n        )\n        if (!labelersPref) {\n          labelersPref = {\n            $type: 'app.bsky.actor.defs#labelersPref',\n            labelers: [],\n          }\n        }\n        if (AppBskyActorDefs.isLabelersPref(labelersPref)) {\n          let labelerPrefItem = labelersPref.labelers.find(\n            (labeler) => labeler.did === did,\n          )\n          if (!labelerPrefItem) {\n            labelerPrefItem = {\n              did,\n            }\n            labelersPref.labelers.push(labelerPrefItem)\n          }\n        }\n        return prefs\n          .filter((pref) => !AppBskyActorDefs.isLabelersPref(pref))\n          .concat([labelersPref])\n      },\n    )\n    // automatically configure the client\n    this.configureLabelers(prefsArrayToLabelerDids(prefs))\n  }\n\n  async removeLabeler(did: string) {\n    const prefs = await this.updatePreferences(\n      (prefs: AppBskyActorDefs.Preferences) => {\n        let labelersPref = prefs.findLast(\n          (pref) =>\n            AppBskyActorDefs.isLabelersPref(pref) &&\n            AppBskyActorDefs.validateLabelersPref(pref).success,\n        )\n        if (!labelersPref) {\n          labelersPref = {\n            $type: 'app.bsky.actor.defs#labelersPref',\n            labelers: [],\n          }\n        }\n        if (AppBskyActorDefs.isLabelersPref(labelersPref)) {\n          labelersPref.labelers = labelersPref.labelers.filter(\n            (labeler) => labeler.did !== did,\n          )\n        }\n        return prefs\n          .filter((pref) => !AppBskyActorDefs.isLabelersPref(pref))\n          .concat([labelersPref])\n      },\n    )\n    // automatically configure the client\n    this.configureLabelers(prefsArrayToLabelerDids(prefs))\n  }\n\n  async setPersonalDetails({\n    birthDate,\n  }: {\n    birthDate: string | Date | undefined\n  }) {\n    birthDate = birthDate instanceof Date ? birthDate.toISOString() : birthDate\n    await this.updatePreferences((prefs: AppBskyActorDefs.Preferences) => {\n      let personalDetailsPref = prefs.findLast(\n        (pref) =>\n          AppBskyActorDefs.isPersonalDetailsPref(pref) &&\n          AppBskyActorDefs.validatePersonalDetailsPref(pref).success,\n      )\n      if (personalDetailsPref) {\n        personalDetailsPref.birthDate = birthDate\n      } else {\n        personalDetailsPref = {\n          $type: 'app.bsky.actor.defs#personalDetailsPref',\n          birthDate,\n        }\n      }\n      return prefs\n        .filter((pref) => !AppBskyActorDefs.isPersonalDetailsPref(pref))\n        .concat([personalDetailsPref])\n    })\n  }\n\n  async setFeedViewPrefs(feed: string, pref: Partial<BskyFeedViewPreference>) {\n    await this.updatePreferences((prefs: AppBskyActorDefs.Preferences) => {\n      const existing = prefs.findLast(\n        (pref) =>\n          AppBskyActorDefs.isFeedViewPref(pref) &&\n          AppBskyActorDefs.validateFeedViewPref(pref).success &&\n          pref.feed === feed,\n      )\n      if (existing) {\n        pref = { ...existing, ...pref }\n      }\n      return prefs\n        .filter(\n          (p) => !AppBskyActorDefs.isFeedViewPref(pref) || p.feed !== feed,\n        )\n        .concat([{ ...pref, $type: 'app.bsky.actor.defs#feedViewPref', feed }])\n    })\n  }\n\n  async setThreadViewPrefs(pref: Partial<BskyThreadViewPreference>) {\n    await this.updatePreferences((prefs: AppBskyActorDefs.Preferences) => {\n      const existing = prefs.findLast(\n        (pref) =>\n          AppBskyActorDefs.isThreadViewPref(pref) &&\n          AppBskyActorDefs.validateThreadViewPref(pref).success,\n      )\n      if (existing) {\n        pref = { ...existing, ...pref }\n      }\n      return prefs\n        .filter((p) => !AppBskyActorDefs.isThreadViewPref(p))\n        .concat([{ ...pref, $type: 'app.bsky.actor.defs#threadViewPref' }])\n    })\n  }\n\n  async setInterestsPref(pref: Partial<BskyInterestsPreference>) {\n    await this.updatePreferences((prefs: AppBskyActorDefs.Preferences) => {\n      const existing = prefs.findLast(\n        (pref) =>\n          AppBskyActorDefs.isInterestsPref(pref) &&\n          AppBskyActorDefs.validateInterestsPref(pref).success,\n      )\n      if (existing) {\n        pref = { ...existing, ...pref }\n      }\n      return prefs\n        .filter((p) => !AppBskyActorDefs.isInterestsPref(p))\n        .concat([{ ...pref, $type: 'app.bsky.actor.defs#interestsPref' }])\n    })\n  }\n\n  /**\n   * Add a muted word to user preferences.\n   */\n  async addMutedWord(\n    mutedWord: Pick<\n      MutedWord,\n      'value' | 'targets' | 'actorTarget' | 'expiresAt'\n    >,\n  ) {\n    const sanitizedValue = sanitizeMutedWordValue(mutedWord.value)\n\n    if (!sanitizedValue) return\n\n    await this.updatePreferences((prefs: AppBskyActorDefs.Preferences) => {\n      let mutedWordsPref = prefs.findLast(\n        (pref) =>\n          AppBskyActorDefs.isMutedWordsPref(pref) &&\n          AppBskyActorDefs.validateMutedWordsPref(pref).success,\n      )\n\n      const newMutedWord: AppBskyActorDefs.MutedWord = {\n        id: TID.nextStr(),\n        value: sanitizedValue,\n        targets: mutedWord.targets || [],\n        actorTarget: mutedWord.actorTarget || 'all',\n        expiresAt: mutedWord.expiresAt || undefined,\n      }\n\n      if (mutedWordsPref && AppBskyActorDefs.isMutedWordsPref(mutedWordsPref)) {\n        mutedWordsPref.items.push(newMutedWord)\n\n        /**\n         * Migrate any old muted words that don't have an id\n         */\n        mutedWordsPref.items = migrateLegacyMutedWordsItems(\n          mutedWordsPref.items,\n        )\n      } else {\n        // if the pref doesn't exist, create it\n        mutedWordsPref = {\n          items: [newMutedWord],\n        }\n      }\n\n      return prefs\n        .filter((p) => !AppBskyActorDefs.isMutedWordsPref(p))\n        .concat([\n          { ...mutedWordsPref, $type: 'app.bsky.actor.defs#mutedWordsPref' },\n        ])\n    })\n  }\n\n  /**\n   * Convenience method to add muted words to user preferences\n   */\n  async addMutedWords(newMutedWords: AppBskyActorDefs.MutedWord[]) {\n    await Promise.all(newMutedWords.map((word) => this.addMutedWord(word)))\n  }\n\n  /**\n   * @deprecated use `addMutedWords` or `addMutedWord` instead\n   */\n  async upsertMutedWords(\n    mutedWords: Pick<\n      MutedWord,\n      'value' | 'targets' | 'actorTarget' | 'expiresAt'\n    >[],\n  ) {\n    await this.addMutedWords(mutedWords)\n  }\n\n  /**\n   * Update a muted word in user preferences.\n   */\n  async updateMutedWord(mutedWord: AppBskyActorDefs.MutedWord) {\n    await this.updatePreferences((prefs: AppBskyActorDefs.Preferences) => {\n      const mutedWordsPref = prefs.findLast(\n        (pref) =>\n          AppBskyActorDefs.isMutedWordsPref(pref) &&\n          AppBskyActorDefs.validateMutedWordsPref(pref).success,\n      )\n\n      if (mutedWordsPref && AppBskyActorDefs.isMutedWordsPref(mutedWordsPref)) {\n        mutedWordsPref.items = mutedWordsPref.items.map((existingItem) => {\n          const match = matchMutedWord(existingItem, mutedWord)\n\n          if (match) {\n            const updated = {\n              ...existingItem,\n              ...mutedWord,\n            }\n            return {\n              id: existingItem.id || TID.nextStr(),\n              value:\n                sanitizeMutedWordValue(updated.value) || existingItem.value,\n              targets: updated.targets || [],\n              actorTarget: updated.actorTarget || 'all',\n              expiresAt: updated.expiresAt || undefined,\n            }\n          } else {\n            return existingItem\n          }\n        })\n\n        /**\n         * Migrate any old muted words that don't have an id\n         */\n        mutedWordsPref.items = migrateLegacyMutedWordsItems(\n          mutedWordsPref.items,\n        )\n\n        return prefs\n          .filter((p) => !AppBskyActorDefs.isMutedWordsPref(p))\n          .concat([\n            { ...mutedWordsPref, $type: 'app.bsky.actor.defs#mutedWordsPref' },\n          ])\n      }\n\n      return prefs\n    })\n  }\n\n  /**\n   * Remove a muted word from user preferences.\n   */\n  async removeMutedWord(mutedWord: AppBskyActorDefs.MutedWord) {\n    await this.updatePreferences((prefs: AppBskyActorDefs.Preferences) => {\n      const mutedWordsPref = prefs.findLast(\n        (pref) =>\n          AppBskyActorDefs.isMutedWordsPref(pref) &&\n          AppBskyActorDefs.validateMutedWordsPref(pref).success,\n      )\n\n      if (mutedWordsPref && AppBskyActorDefs.isMutedWordsPref(mutedWordsPref)) {\n        for (let i = 0; i < mutedWordsPref.items.length; i++) {\n          const match = matchMutedWord(mutedWordsPref.items[i], mutedWord)\n\n          if (match) {\n            mutedWordsPref.items.splice(i, 1)\n            break\n          }\n        }\n\n        /**\n         * Migrate any old muted words that don't have an id\n         */\n        mutedWordsPref.items = migrateLegacyMutedWordsItems(\n          mutedWordsPref.items,\n        )\n\n        return prefs\n          .filter((p) => !AppBskyActorDefs.isMutedWordsPref(p))\n          .concat([\n            { ...mutedWordsPref, $type: 'app.bsky.actor.defs#mutedWordsPref' },\n          ])\n      }\n\n      return prefs\n    })\n  }\n\n  /**\n   * Convenience method to remove muted words from user preferences\n   */\n  async removeMutedWords(mutedWords: AppBskyActorDefs.MutedWord[]) {\n    await Promise.all(mutedWords.map((word) => this.removeMutedWord(word)))\n  }\n\n  async hidePost(postUri: string) {\n    await this.updateHiddenPost(postUri, 'hide')\n  }\n\n  async unhidePost(postUri: string) {\n    await this.updateHiddenPost(postUri, 'unhide')\n  }\n\n  async bskyAppQueueNudges(nudges: string | string[]) {\n    await this.updatePreferences((prefs: AppBskyActorDefs.Preferences) => {\n      let bskyAppStatePref: AppBskyActorDefs.BskyAppStatePref = prefs.findLast(\n        (pref) =>\n          AppBskyActorDefs.isBskyAppStatePref(pref) &&\n          AppBskyActorDefs.validateBskyAppStatePref(pref).success,\n      )\n\n      bskyAppStatePref = bskyAppStatePref || {}\n      nudges = Array.isArray(nudges) ? nudges : [nudges]\n      bskyAppStatePref.queuedNudges = (\n        bskyAppStatePref.queuedNudges || []\n      ).concat(nudges)\n\n      return prefs\n        .filter((p) => !AppBskyActorDefs.isBskyAppStatePref(p))\n        .concat([\n          {\n            ...bskyAppStatePref,\n            $type: 'app.bsky.actor.defs#bskyAppStatePref',\n          },\n        ])\n    })\n  }\n\n  async bskyAppDismissNudges(nudges: string | string[]) {\n    await this.updatePreferences((prefs: AppBskyActorDefs.Preferences) => {\n      let bskyAppStatePref: AppBskyActorDefs.BskyAppStatePref = prefs.findLast(\n        (pref) =>\n          AppBskyActorDefs.isBskyAppStatePref(pref) &&\n          AppBskyActorDefs.validateBskyAppStatePref(pref).success,\n      )\n\n      bskyAppStatePref = bskyAppStatePref || {}\n      nudges = Array.isArray(nudges) ? nudges : [nudges]\n      bskyAppStatePref.queuedNudges = (\n        bskyAppStatePref.queuedNudges || []\n      ).filter((nudge) => !nudges.includes(nudge))\n\n      return prefs\n        .filter((p) => !AppBskyActorDefs.isBskyAppStatePref(p))\n        .concat([\n          {\n            ...bskyAppStatePref,\n            $type: 'app.bsky.actor.defs#bskyAppStatePref',\n          },\n        ])\n    })\n  }\n\n  async bskyAppSetActiveProgressGuide(\n    guide: AppBskyActorDefs.BskyAppProgressGuide | undefined,\n  ) {\n    if (\n      guide &&\n      !AppBskyActorDefs.validateBskyAppProgressGuide(guide).success\n    ) {\n      throw new Error('Invalid progress guide')\n    }\n\n    await this.updatePreferences((prefs: AppBskyActorDefs.Preferences) => {\n      let bskyAppStatePref: AppBskyActorDefs.BskyAppStatePref = prefs.findLast(\n        (pref) =>\n          AppBskyActorDefs.isBskyAppStatePref(pref) &&\n          AppBskyActorDefs.validateBskyAppStatePref(pref).success,\n      )\n\n      bskyAppStatePref = bskyAppStatePref || {}\n      bskyAppStatePref.activeProgressGuide = guide\n\n      return prefs\n        .filter((p) => !AppBskyActorDefs.isBskyAppStatePref(p))\n        .concat([\n          {\n            ...bskyAppStatePref,\n            $type: 'app.bsky.actor.defs#bskyAppStatePref',\n          },\n        ])\n    })\n  }\n\n  /**\n   * Insert or update a NUX in user prefs\n   */\n  async bskyAppUpsertNux(nux: Nux) {\n    validateNux(nux)\n\n    await this.updatePreferences((prefs: AppBskyActorDefs.Preferences) => {\n      let bskyAppStatePref: AppBskyActorDefs.BskyAppStatePref = prefs.findLast(\n        (pref) =>\n          AppBskyActorDefs.isBskyAppStatePref(pref) &&\n          AppBskyActorDefs.validateBskyAppStatePref(pref).success,\n      )\n\n      bskyAppStatePref = bskyAppStatePref || {}\n      bskyAppStatePref.nuxs = bskyAppStatePref.nuxs || []\n\n      const existing = bskyAppStatePref.nuxs?.find((n) => {\n        return n.id === nux.id\n      })\n\n      let next: AppBskyActorDefs.Nux\n\n      if (existing) {\n        next = {\n          id: existing.id,\n          completed: nux.completed,\n          data: nux.data,\n          expiresAt: nux.expiresAt,\n        }\n      } else {\n        next = nux\n      }\n\n      // remove duplicates and append\n      bskyAppStatePref.nuxs = bskyAppStatePref.nuxs\n        .filter((n) => n.id !== nux.id)\n        .concat(next)\n\n      return prefs\n        .filter((p) => !AppBskyActorDefs.isBskyAppStatePref(p))\n        .concat([\n          {\n            ...bskyAppStatePref,\n            $type: 'app.bsky.actor.defs#bskyAppStatePref',\n          },\n        ])\n    })\n  }\n\n  /**\n   * Removes NUXs from user preferences.\n   */\n  async bskyAppRemoveNuxs(ids: string[]) {\n    await this.updatePreferences((prefs: AppBskyActorDefs.Preferences) => {\n      let bskyAppStatePref: AppBskyActorDefs.BskyAppStatePref = prefs.findLast(\n        (pref) =>\n          AppBskyActorDefs.isBskyAppStatePref(pref) &&\n          AppBskyActorDefs.validateBskyAppStatePref(pref).success,\n      )\n\n      bskyAppStatePref = bskyAppStatePref || {}\n      bskyAppStatePref.nuxs = (bskyAppStatePref.nuxs || []).filter((nux) => {\n        return !ids.includes(nux.id)\n      })\n\n      return prefs\n        .filter((p) => !AppBskyActorDefs.isBskyAppStatePref(p))\n        .concat([\n          {\n            ...bskyAppStatePref,\n            $type: 'app.bsky.actor.defs#bskyAppStatePref',\n          },\n        ])\n    })\n  }\n\n  //- Private methods\n\n  #prefsLock = new AwaitLock()\n\n  /**\n   * This function updates the preferences of a user and allows for a callback function to be executed\n   * before the update.\n   * @param cb - cb is a callback function that takes in a single parameter of type\n   * AppBskyActorDefs.Preferences and returns either a boolean or void. This callback function is used to\n   * update the preferences of the user. The function is called with the current preferences as an\n   * argument and if the callback returns false, the preferences are not updated.\n   */\n  private async updatePreferences(\n    cb: (\n      prefs: AppBskyActorDefs.Preferences,\n    ) => AppBskyActorDefs.Preferences | false,\n  ) {\n    try {\n      await this.#prefsLock.acquireAsync()\n      const res = await this.app.bsky.actor.getPreferences({})\n      const newPrefs = cb(res.data.preferences)\n      if (newPrefs === false) {\n        return res.data.preferences\n      }\n      await this.app.bsky.actor.putPreferences({\n        preferences: newPrefs,\n      })\n      return newPrefs\n    } finally {\n      this.#prefsLock.release()\n    }\n  }\n\n  private async updateHiddenPost(postUri: string, action: 'hide' | 'unhide') {\n    await this.updatePreferences((prefs: AppBskyActorDefs.Preferences) => {\n      let pref = prefs.findLast(\n        (pref) =>\n          AppBskyActorDefs.isHiddenPostsPref(pref) &&\n          AppBskyActorDefs.validateHiddenPostsPref(pref).success,\n      )\n      if (pref && AppBskyActorDefs.isHiddenPostsPref(pref)) {\n        pref.items =\n          action === 'hide'\n            ? Array.from(new Set([...pref.items, postUri]))\n            : pref.items.filter((uri) => uri !== postUri)\n      } else {\n        if (action === 'hide') {\n          pref = {\n            $type: 'app.bsky.actor.defs#hiddenPostsPref',\n            items: [postUri],\n          }\n        }\n      }\n      return prefs\n        .filter((p) => !AppBskyActorDefs.isInterestsPref(p))\n        .concat([{ ...pref, $type: 'app.bsky.actor.defs#hiddenPostsPref' }])\n    })\n  }\n\n  /**\n   * A helper specifically for updating feed preferences\n   */\n  private async updateFeedPreferences(\n    cb: (\n      saved: string[],\n      pinned: string[],\n    ) => { saved: string[]; pinned: string[] },\n  ): Promise<{ saved: string[]; pinned: string[] }> {\n    let res\n    await this.updatePreferences((prefs: AppBskyActorDefs.Preferences) => {\n      let feedsPref = prefs.findLast(\n        (pref) =>\n          AppBskyActorDefs.isSavedFeedsPref(pref) &&\n          AppBskyActorDefs.validateSavedFeedsPref(pref).success,\n      ) as AppBskyActorDefs.SavedFeedsPref | undefined\n      if (feedsPref) {\n        res = cb(feedsPref.saved, feedsPref.pinned)\n        feedsPref.saved = res.saved\n        feedsPref.pinned = res.pinned\n      } else {\n        res = cb([], [])\n        feedsPref = {\n          $type: 'app.bsky.actor.defs#savedFeedsPref',\n          saved: res.saved,\n          pinned: res.pinned,\n        }\n      }\n      return prefs\n        .filter((pref) => !AppBskyActorDefs.isSavedFeedsPref(pref))\n        .concat([feedsPref])\n    })\n    return res\n  }\n\n  private async updateSavedFeedsV2Preferences(\n    cb: (\n      savedFeedsPref: AppBskyActorDefs.SavedFeed[],\n    ) => AppBskyActorDefs.SavedFeed[],\n  ): Promise<AppBskyActorDefs.SavedFeed[]> {\n    let maybeMutatedSavedFeeds: AppBskyActorDefs.SavedFeed[] = []\n\n    await this.updatePreferences((prefs: AppBskyActorDefs.Preferences) => {\n      let existingV2Pref = prefs.findLast(\n        (pref) =>\n          AppBskyActorDefs.isSavedFeedsPrefV2(pref) &&\n          AppBskyActorDefs.validateSavedFeedsPrefV2(pref).success,\n      ) as AppBskyActorDefs.SavedFeedsPrefV2 | undefined\n      let existingV1Pref = prefs.findLast(\n        (pref) =>\n          AppBskyActorDefs.isSavedFeedsPref(pref) &&\n          AppBskyActorDefs.validateSavedFeedsPref(pref).success,\n      ) as AppBskyActorDefs.SavedFeedsPref | undefined\n\n      if (existingV2Pref) {\n        maybeMutatedSavedFeeds = cb(existingV2Pref.items)\n        existingV2Pref = {\n          ...existingV2Pref,\n          items: maybeMutatedSavedFeeds,\n        }\n      } else {\n        maybeMutatedSavedFeeds = cb([])\n        existingV2Pref = {\n          $type: 'app.bsky.actor.defs#savedFeedsPrefV2',\n          items: maybeMutatedSavedFeeds,\n        }\n      }\n\n      // enforce ordering, pinned then saved\n      const pinned = existingV2Pref.items.filter((i) => i.pinned)\n      const saved = existingV2Pref.items.filter((i) => !i.pinned)\n      existingV2Pref.items = pinned.concat(saved)\n\n      let updatedPrefs = prefs\n        .filter((pref) => !AppBskyActorDefs.isSavedFeedsPrefV2(pref))\n        .concat(existingV2Pref)\n\n      /*\n       * If there's a v2 pref present, it means this account was migrated from v1\n       * to v2. During the transition period, we double write v2 prefs back to\n       * v1, but NOT the other way around.\n       */\n      if (existingV1Pref) {\n        const { saved, pinned } = existingV1Pref\n        const v2Compat = savedFeedsToUriArrays(\n          // v1 only supports feeds and lists\n          existingV2Pref.items.filter((i) => ['feed', 'list'].includes(i.type)),\n        )\n        existingV1Pref = {\n          ...existingV1Pref,\n          saved: Array.from(new Set([...saved, ...v2Compat.saved])),\n          pinned: Array.from(new Set([...pinned, ...v2Compat.pinned])),\n        }\n        updatedPrefs = updatedPrefs\n          .filter((pref) => !AppBskyActorDefs.isSavedFeedsPref(pref))\n          .concat(existingV1Pref)\n      }\n\n      return updatedPrefs\n    })\n\n    return maybeMutatedSavedFeeds\n  }\n\n  //#endregion\n}\n\n/**\n * Helper to transform the legacy content preferences.\n */\nfunction adjustLegacyContentLabelPref(\n  pref: AppBskyActorDefs.ContentLabelPref,\n): AppBskyActorDefs.ContentLabelPref {\n  let visibility = pref.visibility\n\n  // adjust legacy values\n  if (visibility === 'show') {\n    visibility = 'ignore'\n  }\n\n  return { ...pref, visibility }\n}\n\n/**\n * Re-maps legacy labels to new labels on READ. Does not save these changes to\n * the user's preferences.\n */\nfunction remapLegacyLabels(\n  labels: BskyPreferences['moderationPrefs']['labels'],\n) {\n  const _labels = { ...labels }\n  const legacyToNewMap: Record<string, string | undefined> = {\n    gore: 'graphic-media',\n    nsfw: 'porn',\n    suggestive: 'sexual',\n  }\n\n  for (const labelName in _labels) {\n    const newLabelName = legacyToNewMap[labelName]!\n    if (newLabelName) {\n      _labels[newLabelName] = _labels[labelName]\n    }\n  }\n\n  return _labels\n}\n\n/**\n * A helper to get the currently enabled labelers from the full preferences array\n */\nfunction prefsArrayToLabelerDids(\n  prefs: AppBskyActorDefs.Preferences,\n): string[] {\n  const labelersPref = prefs.findLast(\n    (pref) =>\n      AppBskyActorDefs.isLabelersPref(pref) &&\n      AppBskyActorDefs.validateLabelersPref(pref).success,\n  )\n  let dids: string[] = []\n  if (labelersPref) {\n    dids = (labelersPref as AppBskyActorDefs.LabelersPref).labelers.map(\n      (labeler) => labeler.did,\n    )\n  }\n  return dids\n}\n\nfunction isBskyPrefs(v: any): v is BskyPreferences {\n  return (\n    v &&\n    typeof v === 'object' &&\n    'moderationPrefs' in v &&\n    isModPrefs(v.moderationPrefs)\n  )\n}\n\nfunction isModPrefs(v: any): v is ModerationPrefs {\n  return v && typeof v === 'object' && 'labelers' in v\n}\n\nfunction migrateLegacyMutedWordsItems(items: AppBskyActorDefs.MutedWord[]) {\n  return items.map((item) => ({\n    ...item,\n    id: item.id || TID.nextStr(),\n  }))\n}\n\nfunction matchMutedWord(\n  existingWord: AppBskyActorDefs.MutedWord,\n  newWord: AppBskyActorDefs.MutedWord,\n): boolean {\n  // id is undefined in legacy implementation\n  const existingId = existingWord.id\n  // prefer matching based on id\n  const matchById = existingId && existingId === newWord.id\n  // handle legacy case where id is not set\n  const legacyMatchByValue = !existingId && existingWord.value === newWord.value\n\n  return matchById || legacyMatchByValue\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 26519, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 26524, "column": 0}, "map": {"version":3,"file":"atp-agent.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/atp-agent.ts"],"sourcesContent":["import { getPdsEndpoint, isValidDidDoc } from '@atproto/common-web'\nimport {\n  ErrorResponseBody,\n  Gettable,\n  ResponseType,\n  XRPCError,\n  XrpcClient,\n  errorResponseBody,\n} from '@atproto/xrpc'\nimport { Agent } from './agent'\nimport {\n  ComAtprotoServerCreateAccount,\n  ComAtprotoServerCreateSession,\n  ComAtprotoServerGetSession,\n  ComAtprotoServerNS,\n} from './client'\nimport { schemas } from './client/lexicons'\nimport { SessionManager } from './session-manager'\nimport {\n  AtpAgentLoginOpts,\n  AtpPersistSessionHandler,\n  AtpSessionData,\n} from './types'\n\nconst ReadableStream = globalThis.ReadableStream as\n  | typeof globalThis.ReadableStream\n  | undefined\n\nexport type AtpAgentOptions = {\n  service: string | URL\n  persistSession?: AtpPersistSessionHandler\n  fetch?: typeof globalThis.fetch\n  headers?: Iterable<[string, Gettable<null | string>]>\n}\n\n/**\n * A wrapper around the {@link Agent} class that uses credential based session\n * management. This class also exposes most of the session management methods\n * directly.\n *\n * This class will be deprecated in the near future. Use {@link Agent} directly\n * with a {@link CredentialSession} instead:\n *\n *  ```ts\n *  const session = new CredentialSession({\n *    service: new URL('https://example.com'),\n *  })\n *\n *  const agent = new Agent(session)\n *  ```\n */\nexport class AtpAgent extends Agent {\n  readonly sessionManager: CredentialSession\n\n  constructor(options: AtpAgentOptions | CredentialSession) {\n    const sessionManager =\n      options instanceof CredentialSession\n        ? options\n        : new CredentialSession(\n            new URL(options.service),\n            options.fetch,\n            options.persistSession,\n          )\n\n    super(sessionManager)\n\n    // This assignment is already being done in the super constructor, but we\n    // need to do it here to make TypeScript happy.\n    this.sessionManager = sessionManager\n\n    if (!(options instanceof CredentialSession) && options.headers) {\n      for (const [key, value] of options.headers) {\n        this.setHeader(key, value)\n      }\n    }\n  }\n\n  clone(): AtpAgent {\n    return this.copyInto(new AtpAgent(this.sessionManager))\n  }\n\n  get session() {\n    return this.sessionManager.session\n  }\n\n  get hasSession() {\n    return this.sessionManager.hasSession\n  }\n\n  get did() {\n    return this.sessionManager.did\n  }\n\n  get serviceUrl() {\n    return this.sessionManager.serviceUrl\n  }\n\n  get pdsUrl() {\n    return this.sessionManager.pdsUrl\n  }\n\n  get dispatchUrl() {\n    return this.sessionManager.dispatchUrl\n  }\n\n  /** @deprecated use {@link serviceUrl} instead */\n  get service() {\n    return this.serviceUrl\n  }\n\n  get persistSession() {\n    throw new Error(\n      'Cannot set persistSession directly. \"persistSession\" is defined through the constructor and will be invoked automatically when session data changes.',\n    )\n  }\n\n  set persistSession(v: unknown) {\n    throw new Error(\n      'Cannot set persistSession directly. \"persistSession\" must be defined in the constructor and can no longer be changed.',\n    )\n  }\n\n  /** @deprecated use {@link AtpAgent.serviceUrl} instead */\n  getServiceUrl() {\n    return this.serviceUrl\n  }\n\n  async resumeSession(\n    session: AtpSessionData,\n  ): Promise<ComAtprotoServerGetSession.Response> {\n    return this.sessionManager.resumeSession(session)\n  }\n\n  async createAccount(\n    data: ComAtprotoServerCreateAccount.InputSchema,\n    opts?: ComAtprotoServerCreateAccount.CallOptions,\n  ): Promise<ComAtprotoServerCreateAccount.Response> {\n    return this.sessionManager.createAccount(data, opts)\n  }\n\n  async login(\n    opts: AtpAgentLoginOpts,\n  ): Promise<ComAtprotoServerCreateSession.Response> {\n    return this.sessionManager.login(opts)\n  }\n\n  async logout(): Promise<void> {\n    return this.sessionManager.logout()\n  }\n}\n\n/**\n * Credentials (username / password) based session manager. Instances of this\n * class will typically be used as the session manager for an {@link AtpAgent}.\n * They can also be used with an {@link XrpcClient}, if you want to use you\n * own Lexicons.\n */\nexport class CredentialSession implements SessionManager {\n  public pdsUrl?: URL // The PDS URL, driven by the did doc\n  public session?: AtpSessionData\n  public refreshSessionPromise: Promise<void> | undefined\n\n  /**\n   * Private {@link ComAtprotoServerNS} used to perform session management API\n   * calls on the service endpoint. Calls performed by this agent will not be\n   * authenticated using the user's session to allow proper manual configuration\n   * of the headers when performing session management operations.\n   */\n  protected server = new ComAtprotoServerNS(\n    // Note that the use of the codegen \"schemas\" (to instantiate `this.api`),\n    // as well as the use of `ComAtprotoServerNS` will cause this class to\n    // reference (way) more code than it actually needs. It is not possible,\n    // with the current state of the codegen, to generate a client that only\n    // includes the methods that are actually used by this class. This is a\n    // known limitation that should be addressed in a future version of the\n    // codegen.\n    new XrpcClient((url, init) => {\n      return (0, this.fetch)(new URL(url, this.serviceUrl), init)\n    }, schemas),\n  )\n\n  constructor(\n    public readonly serviceUrl: URL,\n    public fetch = globalThis.fetch,\n    protected readonly persistSession?: AtpPersistSessionHandler,\n  ) {}\n\n  get did() {\n    return this.session?.did\n  }\n\n  get dispatchUrl() {\n    return this.pdsUrl || this.serviceUrl\n  }\n\n  get hasSession() {\n    return !!this.session\n  }\n\n  /**\n   * Sets a WhatWG \"fetch()\" function to be used for making HTTP requests.\n   */\n  setFetch(fetch = globalThis.fetch) {\n    this.fetch = fetch\n  }\n\n  async fetchHandler(url: string, init?: RequestInit): Promise<Response> {\n    // wait for any active session-refreshes to finish\n    await this.refreshSessionPromise\n\n    const initialUri = new URL(url, this.dispatchUrl)\n    const initialReq = new Request(initialUri, init)\n\n    const initialToken = this.session?.accessJwt\n    if (!initialToken || initialReq.headers.has('authorization')) {\n      return (0, this.fetch)(initialReq)\n    }\n\n    initialReq.headers.set('authorization', `Bearer ${initialToken}`)\n    const initialRes = await (0, this.fetch)(initialReq)\n\n    if (!this.session?.refreshJwt) {\n      return initialRes\n    }\n    const isExpiredToken = await isErrorResponse(\n      initialRes,\n      [400],\n      ['ExpiredToken'],\n    )\n\n    if (!isExpiredToken) {\n      return initialRes\n    }\n\n    try {\n      await this.refreshSession()\n    } catch {\n      return initialRes\n    }\n\n    if (init?.signal?.aborted) {\n      return initialRes\n    }\n\n    // The stream was already consumed. We cannot retry the request. A solution\n    // would be to tee() the input stream but that would bufferize the entire\n    // stream in memory which can lead to memory starvation. Instead, we will\n    // return the original response and let the calling code handle retries.\n    if (ReadableStream && init?.body instanceof ReadableStream) {\n      return initialRes\n    }\n\n    // Return initial \"ExpiredToken\" response if the session was not refreshed.\n    const updatedToken = this.session?.accessJwt\n    if (!updatedToken || updatedToken === initialToken) {\n      return initialRes\n    }\n\n    // Make sure the initial request is cancelled to avoid leaking resources\n    // (NodeJS 👀): https://undici.nodejs.org/#/?id=garbage-collection\n    await initialRes.body?.cancel()\n\n    // We need to re-compute the URI in case the PDS endpoint has changed\n    const updatedUri = new URL(url, this.dispatchUrl)\n    const updatedReq = new Request(updatedUri, init)\n\n    updatedReq.headers.set('authorization', `Bearer ${updatedToken}`)\n\n    return await (0, this.fetch)(updatedReq)\n  }\n\n  /**\n   * Create a new account and hydrate its session in this agent.\n   */\n  async createAccount(\n    data: ComAtprotoServerCreateAccount.InputSchema,\n    opts?: ComAtprotoServerCreateAccount.CallOptions,\n  ): Promise<ComAtprotoServerCreateAccount.Response> {\n    try {\n      const res = await this.server.createAccount(data, opts)\n      this.session = {\n        accessJwt: res.data.accessJwt,\n        refreshJwt: res.data.refreshJwt,\n        handle: res.data.handle,\n        did: res.data.did,\n        email: data.email,\n        emailConfirmed: false,\n        emailAuthFactor: false,\n        active: true,\n      }\n      this.persistSession?.('create', this.session)\n      this._updateApiEndpoint(res.data.didDoc)\n      return res\n    } catch (e) {\n      this.session = undefined\n      this.persistSession?.('create-failed', undefined)\n      throw e\n    }\n  }\n\n  /**\n   * Start a new session with this agent.\n   */\n  async login(\n    opts: AtpAgentLoginOpts,\n  ): Promise<ComAtprotoServerCreateSession.Response> {\n    try {\n      const res = await this.server.createSession({\n        identifier: opts.identifier,\n        password: opts.password,\n        authFactorToken: opts.authFactorToken,\n      })\n      this.session = {\n        accessJwt: res.data.accessJwt,\n        refreshJwt: res.data.refreshJwt,\n        handle: res.data.handle,\n        did: res.data.did,\n        email: res.data.email,\n        emailConfirmed: res.data.emailConfirmed,\n        emailAuthFactor: res.data.emailAuthFactor,\n        active: res.data.active ?? true,\n        status: res.data.status,\n      }\n      this._updateApiEndpoint(res.data.didDoc)\n      this.persistSession?.('create', this.session)\n      return res\n    } catch (e) {\n      this.session = undefined\n      this.persistSession?.('create-failed', undefined)\n      throw e\n    }\n  }\n\n  async logout(): Promise<void> {\n    if (this.session) {\n      try {\n        await this.server.deleteSession(undefined, {\n          headers: {\n            authorization: `Bearer ${this.session.accessJwt}`,\n          },\n        })\n      } catch {\n        // Ignore errors\n      } finally {\n        this.session = undefined\n        this.persistSession?.('expired', undefined)\n      }\n    }\n  }\n\n  /**\n   * Resume a pre-existing session with this agent.\n   */\n  async resumeSession(\n    session: AtpSessionData,\n  ): Promise<ComAtprotoServerGetSession.Response> {\n    this.session = session\n\n    try {\n      const res = await this.server\n        .getSession(undefined, {\n          headers: { authorization: `Bearer ${session.accessJwt}` },\n        })\n        .catch(async (err) => {\n          if (\n            err instanceof XRPCError &&\n            ['ExpiredToken', 'InvalidToken'].includes(err.error) &&\n            session.refreshJwt\n          ) {\n            try {\n              const res = await this.server.refreshSession(undefined, {\n                headers: { authorization: `Bearer ${session.refreshJwt}` },\n              })\n\n              session.accessJwt = res.data.accessJwt\n              session.refreshJwt = res.data.refreshJwt\n\n              return this.server.getSession(undefined, {\n                headers: { authorization: `Bearer ${session.accessJwt}` },\n              })\n            } catch {\n              // Noop, we'll throw the original error\n            }\n          }\n          throw err\n        })\n\n      if (res.data.did !== session.did) {\n        throw new XRPCError(\n          ResponseType.InvalidRequest,\n          'Invalid session',\n          'InvalidDID',\n        )\n      }\n\n      session.email = res.data.email\n      session.handle = res.data.handle\n      session.emailConfirmed = res.data.emailConfirmed\n      session.emailAuthFactor = res.data.emailAuthFactor\n      session.active = res.data.active ?? true\n      session.status = res.data.status\n\n      // protect against concurrent session updates\n      if (this.session === session) {\n        this._updateApiEndpoint(res.data.didDoc)\n        this.persistSession?.('update', session)\n      }\n\n      return res\n    } catch (err) {\n      // protect against concurrent session updates\n      if (this.session === session) {\n        this.session = undefined\n        this.persistSession?.(\n          err instanceof XRPCError &&\n            ['ExpiredToken', 'InvalidToken'].includes(err.error)\n            ? 'expired'\n            : 'network-error',\n          undefined,\n        )\n      }\n\n      throw err\n    }\n  }\n\n  /**\n   * Internal helper to refresh sessions\n   * - Wraps the actual implementation in a promise-guard to ensure only\n   *   one refresh is attempted at a time.\n   */\n  async refreshSession(): Promise<void> {\n    return (this.refreshSessionPromise ||= this._refreshSessionInner().finally(\n      () => {\n        this.refreshSessionPromise = undefined\n      },\n    ))\n  }\n\n  /**\n   * Internal helper to refresh sessions (actual behavior)\n   */\n  private async _refreshSessionInner() {\n    if (!this.session?.refreshJwt) {\n      return\n    }\n\n    try {\n      const res = await this.server.refreshSession(undefined, {\n        headers: { authorization: `Bearer ${this.session.refreshJwt}` },\n      })\n      // succeeded, update the session\n      this.session = {\n        ...this.session,\n        accessJwt: res.data.accessJwt,\n        refreshJwt: res.data.refreshJwt,\n        handle: res.data.handle,\n        did: res.data.did,\n      }\n      this._updateApiEndpoint(res.data.didDoc)\n      this.persistSession?.('update', this.session)\n    } catch (err) {\n      if (\n        err instanceof XRPCError &&\n        err.error &&\n        ['ExpiredToken', 'InvalidToken'].includes(err.error)\n      ) {\n        // failed due to a bad refresh token\n        this.session = undefined\n        this.persistSession?.('expired', undefined)\n      }\n      // else: other failures should be ignored - the issue will\n      // propagate in the _dispatch() second attempt to run\n      // the request\n    }\n  }\n\n  /**\n   * Helper to update the pds endpoint dynamically.\n   *\n   * The session methods (create, resume, refresh) may respond with the user's\n   * did document which contains the user's canonical PDS endpoint. That endpoint\n   * may differ from the endpoint used to contact the server. We capture that\n   * PDS endpoint and update the client to use that given endpoint for future\n   * requests. (This helps ensure smooth migrations between PDSes, especially\n   * when the PDSes are operated by a single org.)\n   */\n  private _updateApiEndpoint(didDoc: unknown) {\n    if (isValidDidDoc(didDoc)) {\n      const endpoint = getPdsEndpoint(didDoc)\n      this.pdsUrl = endpoint ? new URL(endpoint) : undefined\n    } else {\n      // If the did doc is invalid, we clear the pdsUrl (should never happen)\n      this.pdsUrl = undefined\n    }\n  }\n}\n\nfunction isErrorObject(v: unknown): v is ErrorResponseBody {\n  return errorResponseBody.safeParse(v).success\n}\n\nasync function isErrorResponse(\n  response: Response,\n  status: number[],\n  errorNames: string[],\n): Promise<boolean> {\n  if (!status.includes(response.status)) return false\n  // Some engines (react-native 👀) don't expose a response.body property...\n  // if (!response.body) return false\n  try {\n    const json = await peekJson(response, 10 * 1024)\n    return isErrorObject(json) && (errorNames as any[]).includes(json.error)\n  } catch (err) {\n    return false\n  }\n}\n\nasync function peekJson(\n  response: Response,\n  maxSize = Infinity,\n): Promise<unknown> {\n  if (extractType(response) !== 'application/json') throw new Error('Not JSON')\n  if (extractLength(response) > maxSize) throw new Error('Response too large')\n  return response.clone().json()\n}\n\nfunction extractLength({ headers }: Response) {\n  return headers.get('Content-Length')\n    ? Number(headers.get('Content-Length'))\n    : NaN\n}\n\nfunction extractType({ headers }: Response) {\n  return headers.get('Content-Type')?.split(';')[0]?.trim()\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 26964, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 26969, "column": 0}, "map": {"version":3,"file":"bsky-agent.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/bsky-agent.ts"],"sourcesContent":["import { AtpAgent } from './atp-agent'\n\n/** @deprecated use {@link AtpAgent} instead */\nexport class BskyAgent extends AtpAgent {\n  clone(): this {\n    if (this.constructor === BskyAgent) {\n      const agent = new BskyAgent(this.sessionManager)\n      return this.copyInto(agent as this)\n    }\n\n    // sub-classes should override this method\n    throw new TypeError('Cannot clone a subclass of BskyAgent')\n  }\n}\n"],"names":[],"mappings":";;;;;AAAA,MAAA,qCAAsC;AAEtC,6CAAA,EAA+C,CAC/C,MAAa,SAAU,SAAQ,YAAA,QAAQ;IACrC,KAAK,GAAA;QACH,IAAI,IAAI,CAAC,WAAW,KAAK,SAAS,EAAE,CAAC;YACnC,MAAM,KAAK,GAAG,IAAI,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,CAAA;YAChD,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAa,CAAC,CAAA;QACrC,CAAC;QAED,0CAA0C;QAC1C,MAAM,IAAI,SAAS,CAAC,sCAAsC,CAAC,CAAA;IAC7D,CAAC;CACF;AAVD,QAAA,SAAA,GAAA,UAUC","ignoreList":[0]}},
    {"offset": {"line": 26986, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 26991, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///Users/mg/event-horizon/node_modules/%40atproto/api/src/index.ts"],"sourcesContent":["import { Lexicons } from '@atproto/lexicon'\nimport { lexicons as internalLexicons } from './client/lexicons'\n\nexport { AtUri } from '@atproto/syntax'\nexport {\n  BlobRef,\n  lexToJson,\n  stringifyLex,\n  jsonToLex,\n  jsonStringToLex,\n} from '@atproto/lexicon'\nexport { parseLanguage } from '@atproto/common-web'\nexport * from './types'\nexport * from './const'\nexport * from './util'\nexport * from './client'\nexport { schemas } from './client/lexicons'\nexport * from './rich-text/rich-text'\nexport * from './rich-text/sanitization'\nexport * from './rich-text/unicode'\nexport * from './rich-text/util'\nexport * from './moderation'\nexport * from './moderation/types'\nexport * from './mocker'\nexport { LABELS, DEFAULT_LABEL_SETTINGS } from './moderation/const/labels'\nexport { Agent } from './agent'\n\nexport { AtpAgent, type AtpAgentOptions } from './atp-agent'\nexport { CredentialSession } from './atp-agent'\nexport { BskyAgent } from './bsky-agent'\n\nexport {\n  /** @deprecated */\n  AtpAgent as default,\n} from './atp-agent'\n\n// Expose a copy to prevent alteration of the internal Lexicon instance used by\n// the AtpBaseClient class.\nexport const lexicons = new Lexicons(internalLexicons)\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAA,wCAA2C;AAC3C,MAAA,0CAAgE;AAEhE,IAAA,sCAAuC;AAA9B,OAAA,cAAA,CAAA,SAAA,SAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,SAAA,KAAK;IAAA;AAAA,GAAA;AACd,IAAA,wCAMyB;AALvB,OAAA,cAAA,CAAA,SAAA,WAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,UAAA,OAAO;IAAA;AAAA,GAAA;AACP,OAAA,cAAA,CAAA,SAAA,aAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,UAAA,SAAS;IAAA;AAAA,GAAA;AACT,OAAA,cAAA,CAAA,SAAA,gBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,UAAA,YAAY;IAAA;AAAA,GAAA;AACZ,OAAA,cAAA,CAAA,SAAA,aAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,UAAA,SAAS;IAAA;AAAA,GAAA;AACT,OAAA,cAAA,CAAA,SAAA,mBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,UAAA,eAAe;IAAA;AAAA,GAAA;AAEjB,IAAA,8CAAmD;AAA1C,OAAA,cAAA,CAAA,SAAA,iBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,aAAA,aAAa;IAAA;AAAA,GAAA;AACtB,mHAAA,SAAuB;AACvB,mHAAA,SAAuB;AACvB,kHAAA,SAAsB;AACtB,0HAAA,SAAwB;AACxB,IAAA,0CAA2C;AAAlC,OAAA,cAAA,CAAA,SAAA,WAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,WAAA,OAAO;IAAA;AAAA,GAAA;AAChB,iIAAA,SAAqC;AACrC,oIAAA,SAAwC;AACxC,+HAAA,SAAmC;AACnC,4HAAA,SAAgC;AAChC,8HAAA,SAA4B;AAC5B,8HAAA,SAAkC;AAClC,oHAAA,SAAwB;AACxB,IAAA,gDAA0E;AAAjE,OAAA,cAAA,CAAA,SAAA,UAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,SAAA,MAAM;IAAA;AAAA,GAAA;AAAE,OAAA,cAAA,CAAA,SAAA,0BAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,SAAA,sBAAsB;IAAA;AAAA,GAAA;AACvC,IAAA,6BAA+B;AAAtB,OAAA,cAAA,CAAA,SAAA,SAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,QAAA,KAAK;IAAA;AAAA,GAAA;AAEd,IAAA,qCAA4D;AAAnD,OAAA,cAAA,CAAA,SAAA,YAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,YAAA,QAAQ;IAAA;AAAA,GAAA;AACjB,IAAA,qCAA+C;AAAtC,OAAA,cAAA,CAAA,SAAA,qBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,YAAA,iBAAiB;IAAA;AAAA,GAAA;AAC1B,IAAA,uCAAwC;AAA/B,OAAA,cAAA,CAAA,SAAA,aAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,aAAA,SAAS;IAAA;AAAA,GAAA;AAElB,IAAA,qCAGoB;AAFlB,gBAAA,EAAkB,CAClB,OAAA,cAAA,CAAA,SAAA,WAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,YAAA,QAAQ;IAAA;AAAA,GAAW;AAGrB,+EAA+E;AAC/E,2BAA2B;AACd,QAAA,QAAQ,GAAG,IAAI,UAAA,QAAQ,CAAC,WAAA,QAAgB,CAAC,CAAA","ignoreList":[0]}},
    {"offset": {"line": 27131, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}