{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///Users/mg/event-horizon/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from 'react';\nimport { BskyAgent } from '@atproto/api';\n\ninterface Post {\n  username: string;\n  content: string;\n  timestamp: string;\n}\n\n// Initialize the Bluesky agent\nconst agent = new BskyAgent({ service: 'https://bsky.social' });\n\nexport default function Home() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  // Check for authentication on load and URL parameters\n  useEffect(() => {\n    const params = new URLSearchParams(window.location.search);\n    if (params.get('success') === 'true') {\n      setIsAuthenticated(true);\n      // Clear URL parameters\n      window.history.replaceState({}, '', window.location.pathname);\n    } else if (params.get('error')) {\n      const errorMsg = params.get('description') || params.get('error');\n      setError(errorMsg);\n      console.error('Authentication error:', errorMsg);\n      // Clear URL parameters\n      window.history.replaceState({}, '', window.location.pathname);\n    }\n  }, []);\n\n  // Mock post data\n  const mockPost: Post = {\n    username: \"@alice.bsky.social\",\n    content: \"Just discovered an amazing new constellation! üåü The universe never ceases to amaze me. #Astronomy #SpaceExploration\",\n    timestamp: \"2024-01-18T15:30:00Z\"\n  };\n\n  const handleLogin = async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      // Generate state parameter for security\n      const state = Math.random().toString(36).substring(7);\n      \n      // Store state in a cookie\n      document.cookie = `bsky_oauth_state=${state}; path=/; max-age=3600; secure; samesite=lax`;\n\n      // Construct OAuth URL with the correct client ID format\n      const params = new URLSearchParams({\n        client_id: process.env.NEXT_PUBLIC_BSKY_CLIENT_ID || '',\n        scope: 'read write',\n        response_type: 'code',\n        redirect_uri: `${window.location.origin}/api/auth/callback`,\n        state: state,\n      });\n\n      // Redirect to Bluesky's OAuth page\n      window.location.href = `https://bsky.social/xrpc/com.atproto.server.createSession?${params.toString()}`;\n    } catch (error) {\n      console.error('Login failed:', error);\n      setError(error instanceof Error ? error.message : 'Login failed');\n      setIsLoading(false);\n    }\n  };\n\n  const handleReaction = async (reaction: 'yay' | 'nay') => {\n    if (!agent || !isAuthenticated) {\n      setError('Not authenticated');\n      return;\n    }\n\n    try {\n      // TODO: Implement reaction logic using the agent\n      console.log(`Reacted with ${reaction}`);\n    } catch (error) {\n      console.error(`Failed to react with ${reaction}:`, error);\n      setError(error instanceof Error ? error.message : 'Failed to react');\n    }\n  };\n\n  return (\n    <>\n      {/* Dev Toolbar */}\n      <div className=\"w-full bg-gray-800 text-white p-2 flex items-center justify-between\">\n        <div className=\"flex items-center space-x-4\">\n          <span className=\"font-mono text-sm\">DEV MODE</span>\n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm\">Auth:</span>\n            <button\n              onClick={() => setIsAuthenticated(!isAuthenticated)}\n              className={`px-3 py-1 rounded text-sm font-medium ${\n                isAuthenticated ? 'bg-green-500' : 'bg-red-500'\n              }`}\n            >\n              {isAuthenticated ? 'ON' : 'OFF'}\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <main className=\"min-h-screen flex flex-col items-center p-8\">\n        {/* Title */}\n        <h1 className=\"text-4xl font-bold mb-12\">Yaynaysky</h1>\n\n        {/* Error Message */}\n        {error && (\n          <div className=\"w-full max-w-2xl bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-8\">\n            <p>{error}</p>\n          </div>\n        )}\n\n        {/* Latest Post Card */}\n        <div className=\"w-full max-w-2xl bg-white rounded-lg shadow-lg p-6 mb-8\">\n          <div className=\"flex items-start space-x-4\">\n            <div className=\"flex-1\">\n              <p className=\"font-semibold text-lg\">{mockPost.username}</p>\n              <p className=\"text-gray-600 mt-2\">{mockPost.content}</p>\n              <p className=\"text-sm text-gray-400 mt-2\">\n                {new Date(mockPost.timestamp).toLocaleString()}\n              </p>\n            </div>\n          </div>\n        </div>\n\n        {/* Authentication/Reaction Buttons */}\n        <div className=\"flex gap-4\">\n          {isAuthenticated ? (\n            <>\n              <button\n                onClick={() => handleReaction('nay')}\n                className=\"bg-red-500 hover:bg-red-600 text-white font-bold py-3 px-6 rounded-lg transition-colors duration-200\"\n              >\n                üëé Nay\n              </button>\n              <button\n                onClick={() => handleReaction('yay')}\n                className=\"bg-green-500 hover:bg-green-600 text-white font-bold py-3 px-6 rounded-lg transition-colors duration-200\"\n              >\n                üëç Yay\n              </button>\n            </>\n          ) : (\n            <button\n              onClick={handleLogin}\n              disabled={isLoading}\n              className=\"bg-blue-500 hover:bg-blue-600 text-white font-bold py-3 px-6 rounded-lg transition-colors duration-200 disabled:opacity-50\"\n            >\n              {isLoading ? 'Connecting...' : 'Login with Bluesky'}\n            </button>\n          )}\n        </div>\n      </main>\n    </>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 270, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}