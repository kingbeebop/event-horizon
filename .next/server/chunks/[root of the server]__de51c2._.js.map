{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file:///Users/mg/event-horizon/app/api/auth/callback/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport { BskyAgent } from '@atproto/api';\nimport { cookies } from 'next/headers';\n\nexport async function GET(request: Request) {\n  const { searchParams } = new URL(request.url);\n  const code = searchParams.get('code');\n  const state = searchParams.get('state');\n  \n  // Verify state parameter using cookies\n  const cookieStore = await cookies();\n  const storedState = cookieStore.get('bsky_oauth_state')?.value;\n  \n  if (!state || state !== storedState) {\n    return NextResponse.redirect(`${process.env.NEXT_PUBLIC_APP_URL}?error=invalid_state`);\n  }\n  \n  try {\n    const agent = new BskyAgent({ service: 'https://bsky.social' });\n    \n    // Exchange the code for an access token\n    const tokenResponse = await fetch('https://bsky.social/oauth/token', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Basic ${Buffer.from(\n          `${process.env.BSKY_CLIENT_ID}:${process.env.BSKY_CLIENT_SECRET}`\n        ).toString('base64')}`,\n      },\n      body: JSON.stringify({\n        grant_type: 'authorization_code',\n        code,\n        redirect_uri: `${process.env.NEXT_PUBLIC_APP_URL}/api/auth/callback`,\n      }),\n    });\n\n    const data = await tokenResponse.json();\n    \n    if (!tokenResponse.ok) {\n      throw new Error(data.error || 'Failed to exchange code for token');\n    }\n\n    // Store the access token securely\n    const cookieOptions = {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === 'production',\n      sameSite: 'lax' as const,\n      path: '/',\n      maxAge: 60 * 60 * 24 * 7, // 1 week\n    };\n\n    // Create response and set cookies\n    const redirectUrl = new URL(`${process.env.NEXT_PUBLIC_APP_URL}?success=true`);\n    const response = NextResponse.redirect(redirectUrl);\n    \n    // Set cookies using the proper Next.js 13+ API\n    response.cookies.set('bsky_oauth_state', '', { maxAge: 0 });\n    response.cookies.set('bsky_access_token', data.access_token, cookieOptions);\n    \n    return response;\n  } catch (error) {\n    console.error('OAuth callback error:', error);\n    return NextResponse.redirect(`${process.env.NEXT_PUBLIC_APP_URL}?error=auth_failed`);\n  }\n} "],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEO,eAAe,IAAI,OAAgB;IACxC,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,QAAQ,GAAG;IAC5C,MAAM,OAAO,aAAa,GAAG,CAAC;IAC9B,MAAM,QAAQ,aAAa,GAAG,CAAC;IAE/B,uCAAuC;IACvC,MAAM,cAAc,MAAM,CAAA,GAAA,iIAAA,CAAA,UAAO,AAAD;IAChC,MAAM,cAAc,YAAY,GAAG,CAAC,qBAAqB;IAEzD,IAAI,CAAC,SAAS,UAAU,aAAa;QACnC,OAAO,gIAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,6DAAmC,oBAAoB,CAAC;IACvF;IAEA,IAAI;QACF,MAAM,QAAQ,IAAI,mJAAA,CAAA,YAAS,CAAC;YAAE,SAAS;QAAsB;QAE7D,wCAAwC;QACxC,MAAM,gBAAgB,MAAM,MAAM,mCAAmC;YACnE,QAAQ;YACR,SAAS;gBACP,gBAAgB;gBAChB,eAAe,CAAC,MAAM,EAAE,OAAO,IAAI,CACjC,GAAG,QAAQ,GAAG,CAAC,cAAc,CAAC,CAAC,EAAE,QAAQ,GAAG,CAAC,kBAAkB,EAAE,EACjE,QAAQ,CAAC,WAAW;YACxB;YACA,MAAM,KAAK,SAAS,CAAC;gBACnB,YAAY;gBACZ;gBACA,cAAc,6DAAmC,kBAAkB,CAAC;YACtE;QACF;QAEA,MAAM,OAAO,MAAM,cAAc,IAAI;QAErC,IAAI,CAAC,cAAc,EAAE,EAAE;YACrB,MAAM,IAAI,MAAM,KAAK,KAAK,IAAI;QAChC;QAEA,kCAAkC;QAClC,MAAM,gBAAgB;YACpB,UAAU;YACV,QAAQ,oDAAyB;YACjC,UAAU;YACV,MAAM;YACN,QAAQ,KAAK,KAAK,KAAK;QACzB;QAEA,kCAAkC;QAClC,MAAM,cAAc,IAAI,IAAI,6DAAmC,aAAa,CAAC;QAC7E,MAAM,WAAW,gIAAA,CAAA,eAAY,CAAC,QAAQ,CAAC;QAEvC,+CAA+C;QAC/C,SAAS,OAAO,CAAC,GAAG,CAAC,oBAAoB,IAAI;YAAE,QAAQ;QAAE;QACzD,SAAS,OAAO,CAAC,GAAG,CAAC,qBAAqB,KAAK,YAAY,EAAE;QAE7D,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,yBAAyB;QACvC,OAAO,gIAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,6DAAmC,kBAAkB,CAAC;IACrF;AACF"}},
    {"offset": {"line": 125, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}